{"version":3,"sources":["Cover/index.js","Login/index.js","Registration/index.js","Menu/index.js","Map/Autocomplete.js","Map/Marker.js","Map/MyGoogleMap.js","Prescription/index.js","Patient/form.js","PatientList/index.js","Patient/index.js","About/images/family.jpg","About/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["Cover","props","Fragment","className","href","Component","Login","state","username","password","handleChange","bind","handleLogIn","event","this","setState","target","name","value","preventDefault","csrftoken","Cookies","get","fetch","method","headers","body","JSON","stringify","response","json","data","key","set","onSubmit","type","placeholder","onChange","Registration","email","password1","password2","addUser","userName","title","Menu","handleLogOut","detail","remove","onClick","Wrapper","styled","div","AutoComplete","onPlaceChanged","map","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","searchInput","blur","clearSearchBox","mapApi","options","types","places","Autocomplete","addListener","bindTo","clearInstanceListeners","ref","onFocus","Marker","text","alt","defaultProps","main","MyGoogleMap","mapApiLoaded","mapInstance","geoCoder","center","zoom","address","draggable","lat","lng","onMarkerInteraction","childKey","childProps","mouse","onMarkerInteractionMouseUp","_generateAddress","_onChange","_onClick","apiHasLoaded","maps","addPlace","setCurrentLocation","Geocoder","geocode","results","status","console","log","formatted_address","window","alert","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onChildMouseDown","onChildMouseUp","onChildMouseMove","onChildClick","bootstrapURLKeys","process","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","Prescription","patient","patientID","brand_name","medication_name","directions","quantity","refills","pharmacy_number","rx","prescriber","label_image","handleUpload","files","formData","FormData","Object","keys","forEach","item","append","addPrescription","htmlFor","id","src","upload","PatientForm","first_name","last_name","date_of_birth","weight","height","gender","food_allergies","medication_allergies","primary_doctor","primary_doctor_telephone_number","language","bed_patient","walking_devices","able_to_walk_alone","surgeries","image","addPatient","rows","PatientCard","to","Card","Img","variant","Body","Title","toUpperCase","PatientList","patientList","length","fetchPatientList","patients","PatientDetail","match","params","then","About","family","App","handleError","err","warn","catch","path","component","render","Map","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8aAyCeA,G,wDAlCb,WAAYC,GAAO,uCACXA,G,qDAMN,OAEA,cAAC,IAAMC,SAAP,UACA,sBAAKC,UAAU,kBAAf,UACA,qBAAKA,UAAU,aAAf,SACA,oBAAIA,UAAU,OAAd,oBAEA,sBAAKA,UAAU,qBAAf,UACA,mBAAGA,UAAU,2BACb,mBAAGA,UAAU,qBACb,mBAAGA,UAAU,6BAGb,qBAAKA,UAAU,UAAf,SACA,mBAAGA,UAAU,SAASC,KAAK,qCAA3B,8BAEA,qBAAKD,UAAU,OAAf,SACA,mBAAGA,UAAU,QAAOC,KAAK,8BAAzB,8B,GA1BgBC,c,QCuELC,G,wDAjEb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAEDM,MAAQ,CACXC,SAAU,GACVC,SAAU,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATF,E,yDAcLE,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,2EAInCL,G,kFAEhBA,EAAMM,iBACAC,EAAYC,IAAQC,IAAI,a,SACPC,MAAM,2BAA4B,CACtDC,OAAQ,OACRC,QAAS,CACP,eAAe,mBACd,cAAeL,GAElBM,KAAMC,KAAKC,UAAUd,KAAKP,S,cANvBsB,E,gBASaA,EAASC,O,QAAtBC,E,QACEC,KACNX,IAAQY,IAAI,gBAAZ,gBAAsCF,EAAKC,M,sIAO7C,OACE,cAAC,IAAM9B,SAAP,UAEA,sBAAKC,UAAU,OAAf,UACA,qBAAKA,UAAU,UAAf,SACA,oBAAIA,UAAU,WAAd,oBAEE,uBAAMA,UAAU,uBAAuB+B,SAAUpB,KAAKF,YAAtD,UACE,sBAAKT,UAAU,uBAAf,UACE,uBAAOA,UAAU,gBAAjB,oBACA,uBAAOgC,KAAK,OAAOC,YAAY,oBAAoBnB,KAAK,WAAWC,MAAOJ,KAAKP,MAAMC,SAAU6B,SAAWvB,KAAKJ,kBAEjH,sBAAKP,UAAU,sBAAf,UACE,uBAAOA,UAAU,mBACjB,uBAAOgC,KAAK,OAAOC,YAAY,oBAAoBnB,KAAK,WAAWC,MAAOJ,KAAKP,MAAME,SAAU4B,SAAWvB,KAAKJ,kBAEjH,wBAAQyB,KAAK,SAAQhC,UAAU,SAA/B,gC,GA3DYE,cCkFLiC,G,wDAhFb,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IAGDM,MAAQ,CACXC,SAAS,GACT+B,MAAM,GACNC,UAAU,GACVC,UAAW,IAGb,EAAK/B,aAAe,EAAKA,aAAaC,KAAlB,gBAXH,E,yDAePE,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,uEAKnCL,G,kFAEZA,EAAMM,iBACAC,EAAYC,IAAQC,IAAI,a,SACPC,MAAM,kCAAmC,CAC9DC,OAAQ,OACRC,QAAS,CACP,eAAe,mBACf,cAAeL,GAEjBM,KAAMC,KAAKC,UAAUd,KAAKP,S,cANtBsB,E,gBASaA,EAASC,O,QAAtBC,E,QAEEC,KACNX,IAAQY,IAAI,gBAAZ,gBAAsCF,EAAKC,M,sIAOjC,IAAD,OACP,OACE,cAAC,IAAM9B,SAAP,UAEA,uBAAMC,UAAU,uBAAuB+B,SAAU,SAACrB,GAAW,EAAK6B,QAAQ7B,EAAO,EAAKN,OAAQ,EAAKQ,SAAS,CAACP,SAAS,GAAI+B,MAAM,GAAIC,UAAU,GAAIC,UAAW,MAA7J,UACE,sBAAKtC,UAAU,aAAf,UACE,uBAAOA,UAAU,gBAAjB,4BACA,uBAAOgC,KAAK,OAAOC,YAAY,oBAAmBnB,KAAK,WAAWC,MAAOJ,KAAKP,MAAMoC,SAAUN,SAAWvB,KAAKJ,kBAEhH,sBAAKP,UAAU,aAAf,UACI,uBAAOA,UAAU,eACjB,uBAAOgC,KAAK,OAAOC,YAAY,iBAAgBnB,KAAK,QAAQC,MAAOJ,KAAKP,MAAMgC,MAAOF,SAAWvB,KAAKJ,kBAEzG,sBAAKP,UAAU,aAAf,UACI,uBAAOA,UAAU,mBACjB,uBAAOgC,KAAK,OAAOC,YAAY,oBAAoBnB,KAAK,YAAYC,MAAOJ,KAAKP,MAAMiC,UAAWH,SAAWvB,KAAKJ,kBAErH,sBAAKP,UAAU,aAAf,UACI,uBAAOA,UAAU,mBACjB,uBAAOgC,KAAK,OAAOC,YAAY,uBAAuBnB,KAAK,YAAYC,MAAOJ,KAAKP,MAAMqC,MAAOP,SAAWvB,KAAKJ,kBAElH,wBAAQyB,KAAK,SAAQhC,UAAU,SAA/B,6B,GAnEaE,cC8DZwC,E,kDA/Db,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAGL6C,aAAe,EAAKA,aAAanC,KAAlB,gBAJC,E,kGAWAE,G,gFACfA,EAAMM,iBACAC,EAAYC,IAAQC,IAAI,a,SACPC,MAAM,4BAA6B,CACvDC,OAAQ,OACRC,QAAS,CACN,cAAeL,K,cAHfS,E,gBAQaA,EAASC,O,cACpBiB,QACN1B,IAAQ2B,OAAO,iB,iIAOjB,OACE,cAAC,IAAM9C,SAAP,UACE,gCACA,8BACA,mBAAGE,KAAK,GAAR,qBAEA,8BACA,mBAAGA,KAAK,gCAAR,8BAEA,8BACA,mBAAGA,KAAK,4BAAR,6BAEA,8BACA,wBAAQD,UAAU,UAAU8C,QAASnC,KAAKgC,aAA1C,gC,GA9CSzC,a,kOCFnB,IAAM6C,EAAUC,IAAOC,IAAV,KAsEEC,E,kDA5DX,WAAYpD,GAAQ,IAAD,8BACf,cAAMA,IAuBVqD,eAAiB,WAAqC,IAAD,yDAAf,EAAKrD,MAAvBsD,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,SACfC,EAAQ,EAAKC,aAAaC,WAE3BF,EAAMG,WACPH,EAAMG,SAASC,SACfN,EAAIO,UAAUL,EAAMG,SAASC,WAE7BN,EAAIQ,UAAUN,EAAMG,SAASI,UAC7BT,EAAIU,QAAQ,KAGhBT,EAASC,GACT,EAAKS,YAAYC,SAlCjB,EAAKC,eAAiB,EAAKA,eAAezD,KAApB,gBAFP,E,gEAK8B,IAAD,yDAAZG,KAAKb,MAArBsD,EAA4B,EAA5BA,IAAKc,EAAuB,EAAvBA,OACfC,EAAU,CAEZC,MAAO,CAAC,YAIZzD,KAAK4C,aAAe,IAAIW,EAAOG,OAAOC,aAClC3D,KAAKoD,YACLI,GAEJxD,KAAK4C,aAAagB,YAAY,gBAAiB5D,KAAKwC,gBACpDxC,KAAK4C,aAAaiB,OAAO,SAAUpB,K,6CAGQ,IAAD,yDAAZzC,KAAKb,MAAhBoE,EAAuB,EAAvBA,OACnBA,EAAOxD,MAAM+D,uBAAuB9D,KAAKoD,e,uCAmBzCpD,KAAKoD,YAAYhD,MAAQ,K,+BAGnB,IAAD,OACL,OACI,cAACgC,EAAD,UACI,uBACI/C,UAAU,eACV0E,IAAK,SAACA,GACF,EAAKX,YAAcW,GAEvB1C,KAAK,OACL2C,QAAShE,KAAKsD,eACdhC,YAAY,2B,GAtDL/B,a,8gBCP3B,IAAM6C,EAAUC,IAAOC,IAAV,KAgBP2B,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAM/B,EAAT,EAASA,QAAT,OACX,cAAC,EAAD,CACIgC,IAAKD,EACL/B,QAASA,KAIjB8B,EAAOG,aAAe,CAClBjC,QAAS,MAQE8B,Q,yGC5Bf,IAAM7B,EAAUC,IAAOgC,KAAV,KAkKEC,E,4MA1JX7E,MAAQ,CACJ8E,cAAc,EACdC,YAAa,KACbjB,OAAQ,KACRkB,SAAU,KACVf,OAAQ,GACRgB,OAAQ,GACRC,KAAM,EACNC,QAAS,GACTC,WAAW,EACXC,IAAK,KACLC,IAAK,M,EAQTC,oBAAsB,SAACC,EAAUC,EAAYC,GACzC,EAAKlF,SAAS,CACV4E,WAAW,EACXC,IAAKK,EAAML,IACXC,IAAKI,EAAMJ,O,EAGnBK,2BAA6B,SAACH,EAAUC,EAAYC,GAChD,EAAKlF,SAAS,CAAE4E,WAAW,IAC3B,EAAKQ,oB,EAGTC,UAAY,YAAuB,IAApBZ,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnB,EAAK1E,SAAS,CACVyE,OAAQA,EACRC,KAAMA,K,EAKdY,SAAW,SAACnF,GACR,EAAKH,SAAS,CACV6E,IAAK1E,EAAM0E,IACXC,IAAK3E,EAAM2E,O,EAInBS,aAAe,SAAC/C,EAAKgD,GACjB,EAAKxF,SAAS,CACVsE,cAAc,EACdC,YAAa/B,EACbc,OAAQkC,IAGZ,EAAKJ,oB,EAGTK,SAAW,SAAC/C,GACR,EAAK1C,SAAS,CACVyD,OAAQ,CAACf,GACTmC,IAAKnC,EAAMG,SAASI,SAAS4B,MAC7BC,IAAKpC,EAAMG,SAASI,SAAS6B,QAEjC,EAAKM,oB,mEA/CLrF,KAAK2F,uB,yCAkDW,IAAD,QAKE,IAFb3F,KAAKP,MADL8D,OAGwBqC,UAEnBC,QAAQ,CAAE,SAAY,CAAEf,IAAK9E,KAAKP,MAAMqF,IAAKC,IAAK/E,KAAKP,MAAMsF,OAAS,SAACe,EAASC,GACrFC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACG,OAAXA,EACID,EAAQ,IACR,EAAKnB,KAAO,GACZ,EAAK1E,SAAS,CAAE2E,QAASkB,EAAQ,GAAGI,qBAEpCC,OAAOC,MAAM,oBAGjBD,OAAOC,MAAM,2BAA6BL,Q,2CAOhC,IAAD,OACb,gBAAiBM,WACjBA,UAAUC,YAAYC,oBAAmB,SAACC,GACtC,EAAKvG,SAAS,CACVyE,OAAQ,CAAC8B,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WACnD7B,IAAK0B,EAASC,OAAOC,SACrB3B,IAAKyB,EAASC,OAAOE,iB,+BAM3B,IAAD,SAGD3G,KAAKP,MADG8E,GAFP,EAEDb,OAFC,EAEOa,cAAcC,EAFrB,EAEqBA,YAAajB,EAFlC,EAEkCA,OAIvC,OACI,eAAC,EAAD,WACKgB,GACG,8BACI,cAAC,EAAD,CAAc9B,IAAK+B,EAAajB,OAAQA,EAAQb,SAAU1C,KAAK0F,aAGvE,cAAC,IAAD,CACIhB,OAAQ1E,KAAKP,MAAMiF,OACnBC,KAAM3E,KAAKP,MAAMkF,KACjBE,UAAW7E,KAAKP,MAAMoF,UACtBtD,SAAUvB,KAAKsF,UACfsB,iBAAkB5G,KAAKgF,oBACvB6B,eAAgB7G,KAAKoF,2BACrB0B,iBAAkB9G,KAAKgF,oBACvB+B,aAAc,kBAAMf,QAAQC,IAAI,gBAChC9D,QAASnC,KAAKuF,SACdyB,iBAAkB,CACd9F,IAAK+F,0CACLC,UAAW,CAAC,SAAU,aAE1BC,oCAAkC,EAClCC,kBAAmB,gBAAG3E,EAAH,EAAGA,IAAKgD,EAAR,EAAQA,KAAR,OAAmB,EAAKD,aAAa/C,EAAKgD,IAfjE,SAkBI,cAAC,EAAD,CACIvB,KAAMlE,KAAKP,MAAMmF,QACjBE,IAAK9E,KAAKP,MAAMqF,IAChBC,IAAK/E,KAAKP,MAAMsF,QAMxB,sBAAK1F,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,uBAAuC,+BAAOW,KAAKP,MAAMqF,MAAzD,gBAAiF,+BAAO9E,KAAKP,MAAMsF,SACnG,sBAAK1F,UAAU,cAAf,mBAAmC,+BAAOW,KAAKP,MAAMkF,UACrD,sBAAKtF,UAAU,cAAf,sBAAsC,+BAAOW,KAAKP,MAAMmF,uB,GApJlDrF,aC0FX8H,E,kDAnGb,WAAYlI,GAAO,IAAD,8BAChB,cAAMA,IAEDM,MAAQ,CACX6H,QAAS,EAAKnI,MAAMoI,UACpBC,WAAW,GACXC,gBAAgB,GAChBC,WAAY,GACZC,SAAU,GACVC,QAAQ,GACRC,gBAAgB,GAChBC,GAAG,GACHC,WAAW,GACXC,YAAY,MAGhB,EAAKpI,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKoI,aAAe,EAAKA,aAAapI,KAAlB,gBAjBF,E,yDAoBNE,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,mCAGrCL,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOgI,MAAM,O,sCAGzCnI,GAAO,IAAD,OAEbA,EAAMM,iBAEN,IAAMC,EAAYC,IAAQC,IAAI,aAExB2H,EAAW,IAAIC,SACRC,OAAOC,KAAKtI,KAAKP,OAEzB8I,SAAQ,SAAAC,GAAI,OAAIL,EAASM,OAAOD,EAAM,EAAK/I,MAAM+I,OAEtD/H,MAAM,kCAAmC,CACtCC,OAAQ,OACRC,QAAS,CACP,cAAeL,GAEjBM,KAAMuH,M,+BAIR,IAAD,OACP,OACI,cAAC,IAAM/I,SAAP,UACE,uBAAMC,UAAU,WAAW+B,SAAU,SAACrB,GAAW,EAAK2I,gBAAgB3I,EAAO,EAAKN,OAAQ,EAAKQ,SAAS,CACtGuH,WAAW,GAAIC,gBAAiB,GAAIC,WAAW,GAAIC,SAAS,GAAIC,QAAQ,GAAIC,gBAAgB,GAAIC,GAAG,GACnGC,WAAW,MAFb,UAGE,sBAAK1I,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,aAAYtJ,UAAU,QAArC,wBACA,uBAAOgC,KAAK,OAAOuH,GAAG,aAAazI,KAAK,aAAaC,MAAOJ,KAAKP,MAAM+H,WAAYjG,SAAUvB,KAAKJ,kBAEpG,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,kBAAiBtJ,UAAU,MAA1C,6BACA,uBAAOgC,KAAK,OAAOuH,GAAG,kBAAkBzI,KAAK,kBAAkBC,MAAOJ,KAAKP,MAAMgI,gBAAiBlG,SAAUvB,KAAKJ,kBAEnH,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,aAAYtJ,UAAU,SAArC,wBACA,uBAAOgC,KAAK,OAAOuH,GAAG,aAAazI,KAAK,aAAaC,MAAOJ,KAAKP,MAAMiI,WAAYnG,SAAUvB,KAAKJ,kBAEpG,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,WAAUtJ,UAAU,WAAnC,sBACA,uBAAOgC,KAAK,OAAOuH,GAAG,WAAWzI,KAAK,WAAWC,MAAOJ,KAAKP,MAAMkI,SAAUpG,SAAUvB,KAAKJ,kBAE9F,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,UAAStJ,UAAU,SAAlC,qBACA,uBAAOgC,KAAK,OAAOuH,GAAG,UAAUzI,KAAK,UAAUC,MAAOJ,KAAKP,MAAMmI,QAASrG,SAAUvB,KAAKJ,kBAE3F,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,kBAAiBtJ,UAAU,SAA1C,6BACA,uBAAOgC,KAAK,OAAOuH,GAAG,kBAAkBzI,KAAK,kBAAkBC,MAAOJ,KAAKP,MAAMoI,gBAAiBtG,SAAUvB,KAAKJ,kBAEnH,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,KAAItJ,UAAU,KAA7B,gBACA,uBAAOgC,KAAK,OAAOuH,GAAG,KAAKzI,KAAK,KAAKC,MAAOJ,KAAKP,MAAMqI,GAAIvG,SAAUvB,KAAKJ,kBAE5E,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,aAAYtJ,UAAU,YAArC,wBACA,uBAAOgC,KAAK,OAAOuH,GAAG,aAAazI,KAAK,aAAaC,MAAOJ,KAAKP,MAAMsI,WAAYxG,SAAUvB,KAAKJ,kBAEpG,gCACE,uBAAO+I,QAAQ,QAAOtJ,UAAU,YAAhC,yBACA,uBAAOgC,KAAK,OAAOlB,KAAK,cAAcoB,SAAUvB,KAAKiI,eACrD,qBAAKY,IAAK7I,KAAKP,MAAMqJ,YAEvB,wBAAQzH,KAAK,SAAQhC,UAAU,mBAA/B,6B,GA5FiBE,aC+JZwJ,G,wDA7Jb,WAAY5J,GAAQ,IAAD,8BACjB,cAAMA,IAEDM,MAAQ,CACXuJ,WAAY,GACZC,UAAU,GACVC,cAAe,GACfC,OAAQ,GACRC,OAAO,GACPC,OAAQ,KACRC,eAAe,GACfC,qBAAqB,GACrBC,eAAe,GACfC,gCAAgC,GAChCC,SAAS,GACTC,YAAY,GACZC,gBAAiB,KACjBC,mBAAmB,GACnBC,UAAU,GACVC,MAAO,KACPnF,QAAQ,IAEV,EAAKhF,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKoI,aAAe,EAAKA,aAAapI,KAAlB,gBAvBH,E,yDA2BLE,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,mCAGrCL,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOgI,MAAM,O,iCAK9CnI,GAAO,IAAD,OACfA,EAAMM,iBAEN,IAAMC,EAAYC,IAAQC,IAAI,aAExB8G,EAAO,eAAOtH,KAAKP,OAGrB6H,EAAQsC,wBACHtC,EAAQsC,gBAGjB,IAAMzB,EAAW,IAAIC,SACfnH,EAAOoH,OAAOC,KAAKhB,GAEzBtB,QAAQC,IAAIhF,GAEZA,EAAKsH,SAAQ,SAAAC,GAAI,OAAIL,EAASM,OAAOD,EAAM,EAAK/I,MAAM+I,OAEtD/H,MAAM,oBAAqB,CACxBC,OAAQ,OACRC,QAAS,CACP,cAAeL,GAEjBM,KAAMuH,M,+BAGH,IAAD,OACL,OACE,cAAC,IAAM/I,SAAP,UACE,uBAAMC,UAAU,YAAY+B,SAAU,SAACrB,GAAW,EAAKiK,WAAWjK,EAAO,EAAKN,OAAQ,EAAKQ,SAAS,CAAC+I,WAAW,GAAIC,UAAU,GAChIC,cAAc,GAAIC,OAAO,GAAIC,OAAO,GAAIC,OAAe,SAAWC,eAAe,GAAIC,qBAAqB,GAAIC,eAAe,GAC/HC,gCAAgC,GAAIC,SAAS,GAAIC,YAAY,GAAIC,gBAA0C,OAASC,mBAAmB,GAAIC,UAAU,MAFjJ,UAIA,gCACE,uBAAOnB,QAAQ,QAAOtJ,UAAU,SAAhC,2BACA,uBAAOA,UAAU,QAAOgC,KAAK,OAAOlB,KAAK,QAAQoB,SAAUvB,KAAKiI,eAChE,qBAAKY,IAAK7I,KAAKP,MAAMqJ,YAErB,sBAAKzJ,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,aAAYtJ,UAAU,QAArC,wBACA,uBAAOgC,KAAK,OAAOuH,GAAG,aAAazI,KAAK,aAAaC,MAAOJ,KAAKP,MAAMuJ,WAAYzH,SAAUvB,KAAKJ,kBAEpG,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,YAAWtJ,UAAU,OAApC,uBACA,uBAAOgC,KAAK,OAAOuH,GAAG,YAAYzI,KAAK,YAAYC,MAAOJ,KAAKP,MAAMwJ,UAAW1H,SAAUvB,KAAKJ,kBAEjG,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,UAAStJ,UAAU,UAAlC,qBACA,uBAAOgC,KAAK,OAAOuH,GAAG,UAAUzI,KAAK,UAAUC,MAAOJ,KAAKP,MAAMmF,QAASrD,SAAUvB,KAAKJ,kBAG3F,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,gBAAetJ,UAAU,OAAxC,2BACA,uBAAOgC,KAAK,OAAOuH,GAAG,gBAAgBzI,KAAK,gBAAgBC,MAAOJ,KAAKP,MAAMyJ,cAAe3H,SAAUvB,KAAKJ,kBAE7G,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,SAAQtJ,UAAU,SAAjC,oBACA,uBAAOgC,KAAK,OAAOuH,GAAG,SAASzI,KAAK,SAASC,MAAOJ,KAAKP,MAAM0J,OAAQ5H,SAAUvB,KAAKJ,kBAExF,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,SAAQtJ,UAAU,SAAjC,oBACA,uBAAOgC,KAAK,OAAOuH,GAAG,SAASzI,KAAK,SAASC,MAAOJ,KAAKP,MAAM2J,OAAQ7H,SAAUvB,KAAKJ,kBAExF,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,SAAQtJ,UAAU,SAAjC,oBACE,yBAAQA,UAAU,cAAcuJ,GAAG,SAASzI,KAAK,SAASC,MAAOJ,KAAKP,MAAM4J,OAAQ9H,SAAUvB,KAAKJ,aAAnG,UACE,wBAAQQ,MAAM,SAAd,2BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,0BAGN,sBAAKf,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,iBAAgBtJ,UAAU,WAAzC,4BACA,uBAAOgC,KAAK,OAAOuH,GAAG,iBAAiBzI,KAAK,iBAAiBC,MAAOJ,KAAKP,MAAM6J,eAAgB/H,SAAUvB,KAAKJ,kBAEhH,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,uBAAsBtJ,UAAU,eAA/C,kCACA,uBAAOgC,KAAK,OAAOuH,GAAG,uBAAuBzI,KAAK,uBAAuBC,MAAOJ,KAAKP,MAAM8J,qBAAsBhI,SAAUvB,KAAKJ,kBAElI,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,iBAAgBtJ,UAAU,SAAzC,4BACA,uBAAOgC,KAAK,OAAOuH,GAAG,iBAAiBzI,KAAK,iBAAiBC,MAAOJ,KAAKP,MAAM+J,eAAgBjI,SAAUvB,KAAKJ,kBAEhH,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,kCAAiCtJ,UAAU,SAA1D,6CACA,uBAAOgC,KAAK,OAAOuH,GAAG,kCAAkCzI,KAAK,kCAAkCC,MAAOJ,KAAKP,MAAMgK,gCAAiClI,SAAUvB,KAAKJ,kBAEnK,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,WAAUtJ,UAAU,WAAnC,sBACA,uBAAOgC,KAAK,OAAOuH,GAAG,WAAWzI,KAAK,WAAWC,MAAOJ,KAAKP,MAAMiK,SAAUnI,SAAUvB,KAAKJ,kBAE9F,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,cAAatJ,UAAU,cAAtC,yBACA,uBAAOgC,KAAK,WAAWhC,UAAU,cAAcuJ,GAAG,cAAczI,KAAK,cAAcC,MAAOJ,KAAKP,MAAMkK,YAAapI,SAAUvB,KAAKJ,kBAEnI,sBAAKP,UAAU,aAAf,UACE,uBAAOsJ,QAAQ,kBAAiBtJ,UAAU,kBAA1C,4BACE,yBAAQA,UAAU,cAAcuJ,GAAG,kBAAkBzI,KAAK,kBAAkBC,MAAOJ,KAAKP,MAAMmK,gBAAiBrI,SAAUvB,KAAKJ,aAA9H,UACE,wBAAQQ,MAAM,SAAd,2BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,wBAIN,sBAAKf,UAAU,YAAf,UACE,uBAAOsJ,QAAQ,YAAWtJ,UAAU,YAApC,uBACA,0BAAUc,KAAK,YAAYd,UAAU,YAAY4K,KAAK,IAAIrB,GAAG,YAAYxI,MAAOJ,KAAKP,MAAMqK,UAAWvI,SAAUvB,KAAKJ,kBAGrH,wBAAQyB,KAAK,SAAQhC,UAAU,mBAA/B,6B,GAtJcE,c,wBCEpB2K,E,uKAEF,IAAM5C,EAAUtH,KAAKb,MAAMmI,QAC3B,OACE,cAAC,IAAD,CAAM6C,GAAE,mBAAc7C,EAAQsB,IAA9B,SAEA,eAACwB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMzB,IAAKvB,EAAQyC,QACrC,cAACK,EAAA,EAAKG,KAAN,UACE,cAACH,EAAA,EAAKI,MAAN,oBAAgBlD,EAAQ0B,WAAWyB,cAAnC,YAAoDnD,EAAQ2B,UAAUwB,4B,GATtDlL,aAuCXmL,E,kLAlBX1E,QAAQC,IAAI,QACRjG,KAAKb,MAAMwL,YAAYC,QACzB5K,KAAKb,MAAM0L,qB,+BAMb,IAAMC,EAAW9K,KAAKb,MAAMwL,YAAYlI,KAAI,SAAA6E,GAAO,OAAI,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQsB,OACjF,OACE,cAAC,IAAMxJ,SAAP,UACG0L,Q,GAdiBvL,aCMXwL,E,kDA1Bb,WAAY5L,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,GAFI,E,gEAOE,IAAD,OACZmJ,EAAK5I,KAAKb,MAAM6L,MAAMC,OAAOrC,GACnCnI,MAAM,oBAAD,OAAqBmI,EAArB,MACJsC,MAAK,SAAAnK,GAAQ,OAAIA,EAASC,UAC1BkK,MAAK,SAAAjK,GAAI,OAAI,EAAKhB,SAAL,eAAkBgB,S,+BAIhC,OACE,gCACE,8BAAMjB,KAAKP,MAAMuJ,aACjB,8BAAMhJ,KAAKP,MAAMwJ,YACjB,8BAAMjJ,KAAKP,MAAMmF,UACjB,cAAC,EAAD,CAAc2C,UAAWvH,KAAKP,MAAMmJ,Y,GAtBhBrJ,aCHb,G,MAAA,IAA0B,oCCuC1B4L,E,kDA9Bb,WAAYhM,GAAQ,uCACZA,G,qDAIR,OAEE,eAAC,IAAMC,SAAP,WACE,sBAAKC,UAAU,6BAAf,UACG,qBAAKA,UAAU,YAAWwJ,IAAKuC,IAC/B,oyBAYG,mBAAG/L,UAAU,cAAcC,KAAK,6BAAhC,yB,GAxBQC,aCYd8L,E,kDAEJ,WAAYlM,GAAQ,IAAD,8BACjB,cAAMA,IAEDM,MAAQ,CACXkL,YAAa,IAGf,EAAKE,iBAAmB,EAAKA,iBAAiBhL,KAAtB,gBAPP,E,0LAWXyL,EAAc,SAACC,GAAD,OAASvF,QAAQwF,KAAKD,I,SACnB9K,MAAM,qBAAqBgL,MAAMH,G,cAAlDvK,E,gBACaA,EAASC,OAAOyK,MAAMH,G,OAAnCrK,E,OACNjB,KAAKC,SAAS,CAAC0K,YAAa1J,I,qIAGpB,IAAD,OACP,OACE,qBAAK5B,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqM,KAAK,SAASC,UAAWzM,IAChC,cAAC,IAAD,CAAOwM,KAAK,QAAQC,UAAW5J,IAE/B,cAAC,IAAD,CAAO2J,KAAK,SAASC,UAAWnM,IAChC,cAAC,IAAD,CAAOkM,KAAK,gBAAgBC,UAAWnK,IAEvC,cAAC,IAAD,CAAOkK,KAAK,eAAeE,OAAQ,SAACzM,GAAD,OAAW,cAAC,EAAD,2BAAiBA,GAAjB,IAAwBwL,YAAa,EAAKlL,MAAMkL,YAAaE,iBAAkB,EAAKA,uBAClI,cAAC,IAAD,CAAOa,KAAK,eAAeC,UAAWZ,IACtC,cAAC,IAAD,CAAOW,KAAK,WAAWC,UAAW5C,IAElC,cAAC,IAAD,CAAO2C,KAAK,OAAOC,UAAWE,IAC9B,cAAC,IAAD,CAAOH,KAAK,gBAAgBC,UAAWtE,IAEvC,cAAC,IAAD,CAAOqE,KAAK,SAASC,UAAWR,a,GApCxB5L,aA4CHuM,cAAWT,GCnDXU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.0d2ba406.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './index.css';\n\nimport Cookies from 'js-cookie';\n\nclass Cover extends Component {\n\n  constructor(props){\n    super(props)\n\n  }\n\n\n  render(){\n    return(\n\n    <React.Fragment>\n    <div className=\"cover_container\">\n    <div className=\"cover_logo\">\n    <h1 className=\"logo\">GLOW</h1>\n    </div>\n    <div className=\"cover_font_awesome\">\n    <i className=\"fab fa-facebook-square\"></i>\n    <i className=\"fab fa-instagram\"></i>\n    <i className=\"fab fa-youtube-square\"></i>\n\n    </div>\n    <div className=\"account\">\n    <a className=\"create\" href=\"http://localhost:3000/registration\">CREATE ACCOUNT</a>\n    </div>\n    <div className=\"logn\">\n    <a className=\"login\"href=\"http://localhost:3000/login\">LOGIN</a>\n    </div>\n    </div>\n    </React.Fragment>\n    )\n\n};\n\n\n}\nexport default Cover;\n","// build login component\n// all inputs controlled\n// post request to create a new user\nimport React, { Component } from 'react';\nimport './index.css';\n\nimport Cookies from 'js-cookie';\n// import UserArticles from './UserArticles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      username: '',\n      password: '',\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLogIn = this.handleLogIn.bind(this);\n\n\n  }\n\n  handleChange (event){\n    this.setState({[event.target.name]: event.target.value});\n}\n\n\nasync handleLogIn(event){\n\n  event.preventDefault();\n  const csrftoken = Cookies.get('csrftoken');\n  const response = await fetch('/api/v1/rest-auth/login/', {\n     method: 'post',\n     headers: {\n       'Content-Type':'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n     body: JSON.stringify(this.state)\n  });\n\n  const data = await response.json();\n  if(data.key) {\n    Cookies.set('Authorization', `Token ${data.key}`);\n\n  }\n};\n\n\nrender() {\n  return (\n    <React.Fragment>\n\n    <div className=\"main\">\n    <div className=\"log_div\">\n    <h1 className=\"log-logo\">GLOW</h1>\n    </div>\n      <form className=\"col-12 col-md-6 mb-5\" onSubmit={this.handleLogIn}>\n        <div className=\"log-label form-group\">\n          <label className=\"form-userName\">LOG IN</label>\n          <input type=\"text\" placeholder=\"Enter Username...\" name=\"username\" value={this.state.username} onChange ={this.handleChange} />\n        </div>\n        <div className=\"pass-lab form-group\">\n          <label className=\"form-password1\"></label>\n          <input type=\"text\" placeholder=\"Enter Password...\" name=\"password\" value={this.state.password} onChange ={this.handleChange} />\n        </div>\n        <button type=\"submit\"className=\"subbut\">SUBMIT</button>\n      </form>\n    </div>\n  </React.Fragment>\n\n                        )\n                      }\n                    }\nexport default Login;\n","// build registration component\n// all inputs controlled\n// post request to create a new user\nimport React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './index.css';\n\n//class set here for the registration\n\nclass Registration extends Component {\n\n  constructor(props) {\n    super(props)\n\n\n    this.state = {\n      username:'',\n      email:'',\n      password1:'',\n      password2: '',\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n}\n\n\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n\n\n  }\n\n  async addUser(event) {\n\n    event.preventDefault();\n    const csrftoken = Cookies.get('csrftoken');\n    const response = await fetch('/api/v1/rest-auth/registration/', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state)\n    });\n\n    const data = await response.json();\n\n    if(data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n\n    }\n  };\n\n\n\n      render() {\n        return(\n          <React.Fragment>\n\n          <form className=\"col-12 col-md-6 mb-5\" onSubmit={(event) => {this.addUser(event, this.state); this.setState({username:'', email:'', password1:'', password2: ''})}}>\n            <div className=\"form-group\">\n              <label className=\"form-userName\">CREATE ACCOUNT</label>\n              <input type=\"text\" placeholder=\"Enter Username...\"name=\"username\" value={this.state.userName} onChange ={this.handleChange}  />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-email\"></label>\n                <input type=\"text\" placeholder=\"Enter Email...\"name=\"email\" value={this.state.email} onChange ={this.handleChange} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-password1\"></label>\n                <input type=\"text\" placeholder=\"Enter Password...\" name=\"password1\" value={this.state.password1} onChange ={this.handleChange} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-password2\"></label>\n                <input type=\"text\" placeholder=\"Re-enter Password...\" name=\"password2\" value={this.state.title} onChange ={this.handleChange} />\n            </div>\n              <button type=\"submit\"className=\"subbut\">Submit</button>\n          </form>\n\n          </React.Fragment>\n        )\n      }\n\n\n\n\n\n\n\n\n}\nexport default Registration;\n","// build logout functionality\nimport React, { Component } from 'react';\n\nimport Cookies from 'js-cookie';\n\n\nclass Menu extends Component {\n\n  constructor(props) {\n    super(props)\n\n\nthis.handleLogOut = this.handleLogOut.bind(this);\n\n};\n\n\n\n\n  async handleLogOut(event){\n      event.preventDefault();\n      const csrftoken = Cookies.get('csrftoken');\n      const response = await fetch('/api/v1/rest-auth/logout/', {\n         method: 'POST',\n         headers: {\n            'X-CSRFToken': csrftoken,\n          },\n\n      });\n\n      const data = await response.json();\n      if(data.detail) {\n        Cookies.remove('Authorization');\n      }\n    };\n\n\n\n    render() {\n      return (\n        <React.Fragment>\n          <nav>\n          <div>\n          <a href=\"\">ABOUT</a>\n          </div>\n          <div>\n          <a href=\"http://localhost:3000/patient\">CREATE PATIENT</a>\n          </div>\n          <div>\n          <a href=\"http://localhost:3000/map\">FIND PHARMACY</a>\n          </div>\n          <div>\n          <button className=\"log-out\" onClick={this.handleLogOut}>LOG OUT</button>\n          </div>\n\n\n          </nav>\n        </React.Fragment>\n      )\n    }\n\n\n\n\n\n\n\n\n\n};\n\nexport default Menu;\n","// Autocomplete.js\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n  text-align:center;\n`;\n\nclass AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.clearSearchBox = this.clearSearchBox.bind(this);\n    }\n\n    componentDidMount({ map, mapApi } = this.props) {\n        const options = {\n            // restrict your search to a specific type of result\n            types: ['address'],\n            // restrict your search to a specific country, or an array of countries\n            // componentRestrictions: { country: ['gb', 'us'] },\n        };\n        this.autoComplete = new mapApi.places.Autocomplete(\n            this.searchInput,\n            options,\n        );\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\n        this.autoComplete.bindTo('bounds', map);\n    }\n\n    componentWillUnmount({ mapApi } = this.props) {\n        mapApi.event.clearInstanceListeners(this.searchInput);\n    }\n\n    onPlaceChanged = ({ map, addplace } = this.props) => {\n        const place = this.autoComplete.getPlace();\n\n        if (!place.geometry) return;\n        if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n        } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n        }\n\n        addplace(place);\n        this.searchInput.blur();\n    };\n\n    clearSearchBox() {\n        this.searchInput.value = '';\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <input\n                    className=\"search-input\"\n                    ref={(ref) => {\n                        this.searchInput = ref;\n                    }}\n                    type=\"text\"\n                    onFocus={this.clearSearchBox}\n                    placeholder=\"Enter a location\"\n                />\n            </Wrapper>\n        );\n    }\n}\n\nexport default AutoComplete;\n","// import GoogleMapReact from 'google-map-react'\n// Marker.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;\n","// MyGoogleMaps.js\nimport React, { Component } from 'react';\n\nimport GoogleMapReact from 'google-map-react';\n\nimport styled from 'styled-components';\n\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 500px;\n`;\n\nclass MyGoogleMap extends Component {\n\n\n    state = {\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        places: [],\n        center: [],\n        zoom: 9,\n        address: '',\n        draggable: true,\n        lat: null,\n        lng: null\n    };\n\n    componentWillMount() {\n        this.setCurrentLocation();\n    }\n\n\n    onMarkerInteraction = (childKey, childProps, mouse) => {\n        this.setState({\n            draggable: false,\n            lat: mouse.lat,\n            lng: mouse.lng\n        });\n    }\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n        this.setState({ draggable: true });\n        this._generateAddress();\n    }\n\n    _onChange = ({ center, zoom }) => {\n        this.setState({\n            center: center,\n            zoom: zoom,\n        });\n\n    }\n\n    _onClick = (value) => {\n        this.setState({\n            lat: value.lat,\n            lng: value.lng\n        });\n    }\n\n    apiHasLoaded = (map, maps) => {\n        this.setState({\n            mapApiLoaded: true,\n            mapInstance: map,\n            mapApi: maps,\n        });\n\n        this._generateAddress();\n    };\n\n    addPlace = (place) => {\n        this.setState({\n            places: [place],\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n        });\n        this._generateAddress()\n    };\n\n    _generateAddress() {\n        const {\n            mapApi\n        } = this.state;\n\n        const geocoder = new mapApi.Geocoder;\n\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n            console.log(results);\n            console.log(status);\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                    this.setState({ address: results[0].formatted_address });\n                } else {\n                    window.alert('No results found');\n                }\n            } else {\n                window.alert('Geocoder failed due to: ' + status);\n            }\n\n        });\n    }\n\n    // Get Current Location Coordinates\n    setCurrentLocation() {\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.setState({\n                    center: [position.coords.latitude, position.coords.longitude],\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                });\n            });\n        }\n    }\n\n    render() {\n        const {\n            places, mapApiLoaded, mapInstance, mapApi,\n        } = this.state;\n\n\n        return (\n            <Wrapper>\n                {mapApiLoaded && (\n                    <div>\n                        <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n                    </div>\n                )}\n                <GoogleMapReact\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    draggable={this.state.draggable}\n                    onChange={this._onChange}\n                    onChildMouseDown={this.onMarkerInteraction}\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\n                    onChildMouseMove={this.onMarkerInteraction}\n                    onChildClick={() => console.log('child click')}\n                    onClick={this._onClick}\n                    bootstrapURLKeys={{\n                        key: process.env.REACT_APP_GOOGLE_PLACES_API_KEY,\n                        libraries: ['places', 'geometry'],\n                    }}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n                >\n\n                    <Marker\n                        text={this.state.address}\n                        lat={this.state.lat}\n                        lng={this.state.lng}\n                    />\n\n\n                </GoogleMapReact>\n\n                <div className=\"info-wrapper\">\n                    <div className=\"map-details\">Latitude: <span>{this.state.lat}</span>, Longitude: <span>{this.state.lng}</span></div>\n                    <div className=\"map-details\">Zoom: <span>{this.state.zoom}</span></div>\n                    <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\n                </div>\n\n\n            </Wrapper >\n        );\n    }\n}\n\nexport default MyGoogleMap;\n","import React, { Component } from 'react';\n\nimport Cookies from 'js-cookie';\n\n\nclass Prescription extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      patient: this.props.patientID,\n      brand_name:'',\n      medication_name:'',\n      directions: '',\n      quantity: '',\n      refills:'',\n      pharmacy_number:'',\n      rx:'',\n      prescriber:'',\n      label_image:null,\n    }\n\n  this.handleChange = this.handleChange.bind(this)\n  this.handleUpload = this.handleUpload.bind(this)\n}\n\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleUpload (event){\n  this.setState({[event.target.name]: event.target.files[0]});\n}\n\naddPrescription(event){\n         //this post is for image uploads\n         event.preventDefault();\n\n         const csrftoken = Cookies.get('csrftoken');\n\n         const formData = new FormData();\n         const data = Object.keys(this.state);\n         // console.log('data', data);\n         data.forEach(item => formData.append(item, this.state[item]));\n\n         fetch('/api/v1/patients/prescriptions/', {\n            method: 'POST',\n            headers: {\n              'X-CSRFToken': csrftoken,\n            },\n            body: formData\n         });\n         };\n\nrender() {\n  return(\n      <React.Fragment>\n        <form className=\"med-form\" onSubmit={(event) => {this.addPrescription(event, this.state); this.setState({\n          brand_name:'', medication_name: '', directions:'', quantity:'', refills:'', pharmacy_number:'', rx:'',\n          prescriber:''})}}>\n          <div className=\"form-group\">\n            <label htmlFor='brand_name'className=\"brand\">Brand Name</label>\n            <input type=\"text\" id='brand_name' name=\"brand_name\" value={this.state.brand_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_name'className=\"med\">Medication Name</label>\n            <input type=\"text\" id='medication_name' name=\"medication_name\" value={this.state.medication_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='directions'className=\"direct\">Directions</label>\n            <input type=\"text\" id='directions' name=\"directions\" value={this.state.directions} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='quantity'className=\"quantity\">Quantity</label>\n            <input type=\"text\" id='quantity' name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='refills'className=\"refill\">Refills</label>\n            <input type=\"text\" id='refills' name=\"refills\" value={this.state.refills} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='pharmacy_number'className=\"number\">Pharmacy Number</label>\n            <input type=\"text\" id='pharmacy_number' name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='rx'className=\"rx\">RX</label>\n            <input type=\"text\" id='rx' name=\"rx\" value={this.state.rx} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='prescriber'className=\"prescribe\">Prescriber</label>\n            <input type=\"text\" id='prescriber' name=\"prescriber\" value={this.state.prescriber} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label htmlFor='image'className=\"label_pic\">Label Image</label>\n            <input type=\"file\" name=\"label_image\" onChange={this.handleUpload}/>\n            <img src={this.state.upload}/>\n          </div>\n          <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n        </form>\n      </React.Fragment>\n    )\n  }\n\n\n}\nexport default Prescription;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './index.css';\n\n\nclass PatientForm extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      first_name: '',\n      last_name:'',\n      date_of_birth: '',\n      weight: '',\n      height:'',\n      gender: null,\n      food_allergies:'',\n      medication_allergies:'',\n      primary_doctor:'',\n      primary_doctor_telephone_number:'',\n      language:'',\n      bed_patient:'',\n      walking_devices: null,\n      able_to_walk_alone:'',\n      surgeries:'',\n      image: null,\n      address:'',\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleUpload = this.handleUpload.bind(this)\n  }\n\n\n  handleChange (event){\n    this.setState({[event.target.name]: event.target.value});\n}\n\n  handleUpload (event){\n    this.setState({[event.target.name]: event.target.files[0]});\n  }\n\n\n\n  addPatient(event){\n    event.preventDefault();\n\n    const csrftoken = Cookies.get('csrftoken');\n    // shallow copy of state\n    const patient = {...this.state};\n\n    // remove walking device if one is not selected\n    if(!patient.walking_devices) {\n      delete patient.walking_devices\n    }\n\n    const formData = new FormData();\n    const data = Object.keys(patient);\n\n    console.log(data)\n    // console.log('data', data);\n    data.forEach(item => formData.append(item, this.state[item]));\n\n    fetch('/api/v1/patients/', {\n       method: 'POST',\n       headers: {\n         'X-CSRFToken': csrftoken,\n       },\n       body: formData\n    });\n};\nrender() {\n    return (\n      <React.Fragment>\n        <form className=\"news-form\" onSubmit={(event) => {this.addPatient(event, this.state); this.setState({first_name:'', last_name:'',\n      date_of_birth:'', weight:'', height:'', gender:('Male','Female'), food_allergies:'', medication_allergies:'', primary_doctor:'',\n    primary_doctor_telephone_number:'', language:'', bed_patient:'', walking_devices:('Wheel_Chair', 'Walker', 'Cane'), able_to_walk_alone:'', surgeries:''})}}>\n\n        <div>\n          <label htmlFor='image'className=\"avatar\">Profile Image</label>\n          <input className=\"photo\"type=\"file\" name=\"image\" onChange={this.handleUpload}/>\n          <img src={this.state.upload}/>\n        </div>\n          <div className=\"form-group\">\n            <label htmlFor='first_name'className=\"first\">First Name</label>\n            <input type=\"text\" id='first_name' name=\"first_name\" value={this.state.first_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='last_name'className=\"last\">Last Name</label>\n            <input type=\"text\" id='last_name' name=\"last_name\" value={this.state.last_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='address'className=\"address\">Address</label>\n            <input type=\"text\" id='address' name=\"address\" value={this.state.address} onChange={this.handleChange} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor='date_of_birth'className=\"bday\">Date Of Birth</label>\n            <input type=\"date\" id='date_of_birth' name=\"date_of_birth\" value={this.state.date_of_birth} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='weight'className=\"weight\">Weight</label>\n            <input type=\"text\" id='weight' name=\"weight\" value={this.state.weight} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='height'className=\"height\">Height</label>\n            <input type=\"text\" id='height' name=\"height\" value={this.state.height} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='gender'className=\"gender\">Gender</label>\n              <select className=\"news-option\" id=\"gender\" name=\"gender\" value={this.state.gender} onChange={this.handleChange}>\n                <option value=\"Select\">Select Gender</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n              </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='food_allergies'className=\"food_all\">Food Allergies</label>\n            <input type=\"text\" id='food_allergies' name=\"food_allergies\" value={this.state.food_allergies} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_allergies'className=\"med_allegery\">Medication Allergies</label>\n            <input type=\"text\" id='medication_allergies' name=\"medication_allergies\" value={this.state.medication_allergies} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='primary_doctor'className=\"doctor\">Primary Doctor</label>\n            <input type=\"text\" id='primary_doctor' name=\"primary_doctor\" value={this.state.primary_doctor} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='primary_doctor_telephone_number'className=\"number\">Primary Doctor Telephone Number</label>\n            <input type=\"text\" id='primary_doctor_telephone_number' name=\"primary_doctor_telephone_number\" value={this.state.primary_doctor_telephone_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='language'className=\"language\">Language</label>\n            <input type=\"text\" id='language' name=\"language\" value={this.state.language} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='bed_patient'className=\"bed_patient\">Bed Patient</label>\n            <input type=\"checkbox\" className=\"bed_patient\" id=\"bed_patient\" name=\"bed_patient\" value={this.state.bed_patient} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='walking_devices'className=\"walking_devices\">Walking Device</label>\n              <select className=\"walk_device\" id=\"walking_devices\" name=\"walking_devices\" value={this.state.walking_devices} onChange={this.handleChange}>\n                <option value=\"Select\">Select Device</option>\n                <option value=\"Wheel_Chair\">Wheel Chair</option>\n                <option value=\"Walker\">Walker</option>\n                <option value=\"Cane\">Cane</option>\n              </select>\n          </div>\n\n          <div className=\"surgeries\">\n            <label htmlFor=\"surgeries\"className=\"surgeries\">Surgeries</label>\n            <textarea name=\"surgeries\" className=\"surgeries\" rows=\"5\" id='surgeries' value={this.state.surgeries} onChange={this.handleChange}/>\n          </div>\n\n            <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n\n        </form>\n      </React.Fragment>\n\n   )\n }\n\n}\nexport default PatientForm;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Card from 'react-bootstrap/Card';\nimport './index.css';\n\nimport {Link} from 'react-router-dom';\n\nclass PatientCard extends Component {\n  render() {\n    const patient = this.props.patient;\n    return(\n      <Link to={`/patient/${patient.id}`}>\n      \n      <Card>\n        <Card.Img variant=\"top\" src={patient.image}/>\n        <Card.Body>\n          <Card.Title>{`${patient.first_name.toUpperCase()} ${patient.last_name.toUpperCase()}`}</Card.Title>\n        </Card.Body>\n      </Card>\n      </Link>\n    )\n  }\n}\n\n\nclass PatientList extends Component {\n\n  componentDidMount() {\n    console.log('here');\n    if(!this.props.patientList.length) {\n      this.props.fetchPatientList();\n    }\n  }\n\n  render() {\n\n    const patients = this.props.patientList.map(patient => <PatientCard key={patient.id} patient={patient}/>);\n    return(\n      <React.Fragment>\n        {patients}\n      </React.Fragment>\n    )\n  }\n}\n\n\nexport default PatientList;\n","import React, { Component } from 'react';\nimport Prescription from './../Prescription';\n\nclass PatientDetail extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id\n    fetch(`/api/v1/patients/${id}/`)\n    .then(response => response.json())\n    .then(data => this.setState({...data}));\n  }\n\n  render() {\n    return(\n      <div>\n        <div>{this.state.first_name}</div>\n        <div>{this.state.last_name}</div>\n        <div>{this.state.address}</div>\n        <Prescription patientID={this.state.id}/>\n      </div>\n    )\n  }\n}\n\nexport default PatientDetail;\n","export default __webpack_public_path__ + \"static/media/family.84d62cab.jpg\";","import React, { Component } from 'react';\nimport './index.css';\nimport Card from 'react-bootstrap/Card';\nimport Cookies from 'js-cookie';\n\nimport family from './images/family.jpg';\n\nclass About extends Component {\n\n  constructor(props) {\n    super(props);\n\n  }\nrender(){\n  return(\n\n    <React.Fragment>\n      <div className=\"about col-12 col-md-6 mb-5\">\n         <img className=\"about-img\"src={family} />\n         <p>\n         Hello my name is Josh Lanier and this is my app GLOW.  My dad is an Alzheimer's patient.  He currently\n         is getting in home care by my mom and contracted caregivers 24/7.  Glow(Generated Log Of Wellbeing)\n         is an app designed from seeing the struggle of family members taking care of their loved ones.\n          From hired help not being detailed enough, to family care takers not having the tools needed for the\n          best care possible,  Glow is designed for simplicity, yet  high quality detailed effectiveness for\n          the caregiver. From detailed written and image documentation, to medication check offs and scheduling,\n          to finding the closest pharmacies or care facilities no matter where you are.  Glow is designed to\n          help equip and bring peace of mind to the everyday family caregiver.\n         </p>\n\n       </div>\n            <a className=\"home-button\" href=\"http://localhost:3000/menu\">HOME</a>\n\n    </React.Fragment>\n  )\n};\n\n\n}\nexport default About;\n","import React, { Component } from 'react';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport './index.css';\nimport Cookies from 'js-cookie';\n\nimport Cover from './../Cover';\nimport Login from './../Login';\nimport Registration from './../Registration';\nimport Menu from './../Menu';\n\nimport Map from './../Map/MyGoogleMap';\nimport Prescription from './../Prescription';\n\nimport PatientForm from './../Patient/form';\nimport PatientList from './../PatientList';\nimport PatientDetail from './../Patient';\n\nimport About from './../About';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      patientList: [],\n    }\n\n    this.fetchPatientList = this.fetchPatientList.bind(this);\n  }\n\n  async fetchPatientList() {\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/api/v1/patients/').catch(handleError);\n    const data = await response.json().catch(handleError);\n    this.setState({patientList: data});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/cover\" component={Cover}/>\n          <Route path=\"/menu\" component={Menu}/>\n\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/registration\" component={Registration}/>\n\n          <Route path=\"/patientlist\" render={(props) => <PatientList {...props} patientList={this.state.patientList} fetchPatientList={this.fetchPatientList} />}/>\n          <Route path=\"/patient/:id\" component={PatientDetail}/>\n          <Route path=\"/patient\" component={PatientForm}/>\n\n          <Route path=\"/map\" component={Map}/>\n          <Route path=\"/prescription\" component={Prescription}/>\n\n          <Route path=\"/about\" component={About}/>\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}