{"version":3,"sources":["components/PrivateRoute/index.js","components/Header/index.js","components/Footer/index.js","components/Login/index.js","components/Registration/index.js","components/Map/Marker.js","components/Map/GoogleMap.js","components/Map/SearchBox.js","components/Map/MyGoogleMap.js","components/PatientForm/index.js","components/PatientList/index.js","components/PatientDetail/index.js","components/Caregivers/index.js","components/MedicationHistory/index.js","components/PrescriptionForm/index.js","components/PrescriptionEdit/index.js","components/PrescriptionDetail/index.js","images/family.jpg","images/family3.jpg","images/family4.jpg","components/About/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","isLoggedIn","props","to","Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","className","eventKey","onClick","handleLogout","Footer","Login","state","email","password","handleInput","bind","event","this","setState","target","name","value","onSubmit","e","handleLogin","htmlFor","type","placeholder","onChange","required","Component","Registration","phone_number","password1","password2","handleRegistration","minlength","Wrapper","styled","div","Marker","text","alt","defaultProps","main","GoogleMap","children","bootstrapURLKeys","key","process","SearchBox","onPlacesChanged","map","addplace","selected","searchBox","getPlaces","place","geometry","viewport","fitBounds","setCenter","location","setZoom","searchInput","blur","clearSearchBox","mapApi","places","addListener","bindTo","clearInstanceListeners","ref","onFocus","Searchbox","apiHasLoaded","maps","mapApiLoaded","mapInstance","addPlace","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","center","coords","latitude","longitude","lat","lng","defaultZoom","defaultCenter","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","length","PatientForm","first_name","last_name","address","city","zipcode","date_of_birth","weight","gender","food_allergies","medication_allergies","primary_doctor","primary_doctor_telephone_number","language","is_bed_patient","needs_walking_device","walking_devices","surgeries","image","preview","feet","inches","handleImage","handleCheckbox","handleSubmit","handleError","saveEdit","preventDefault","csrftoken","Cookies","get","patient","height","needs_walking_devices","label_image","caregivers","formData","FormData","Object","keys","forEach","append","options","method","headers","body","fetch","catch","response","json","history","push","file","files","reader","FileReader","onloadend","result","readAsDataURL","checked","err","console","warn","match","params","data","Fragment","isEditing","style","width","src","rows","disabled","PatientCard","Card","Img","Body","Title","toUpperCase","PatientList","patientList","fetchPatientList","patients","PrescriptionPreview","comments","datetime","displayModal","saveDose","handleChange","prescription_id","prescription","dose","JSON","stringify","log","class","medication_name","Modal","show","onHide","closeButton","Form","Group","controlId","Label","Control","as","Button","isAdmin","removePrescription","PatientDetail","availableCaregivers","fetchPatientDetail","fetchCargivers","fetchCaregivers","removeCaregiver","addCaregiver","Number","filter","caregiver","includes","index","indexOf","splice","prescriptions","parse","localStorage","getItem","user","editPrescription","username","Caregivers","noncaregivers","MedicationHistory","fetchMedicationHistory","item","scope","format","PrescriptionForm","patientID","brand_name","directions","quantity","refills","pharmacy_number","rx","prescriber","take_as_needed","hourly_frequency","PrescriptionEdit","handleUpload","File","upload","PrescriptionDetail","fetchPrescriptionDetail","About","family3","family4","family","App","saveProfile","detail","remove","removeItem","obj","set","setItem","profile","path","render","component","Map","exact","withRouter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db6c0edc.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nfunction PrivateRoute({ isLoggedIn, ...props }) {\n  return isLoggedIn\n    ? <Route { ...props } />\n    : <Redirect to='/login/'  />\n}\nexport default PrivateRoute;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport  Navbar  from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport './index.css';\nfunction Header(props){\n  return(\n    <header>\n\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">Glow</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        {props.isLoggedIn\n          ?\n            <Nav>\n              <Nav.Link className=\"nav-link\" href='/user/patients'>Patients</Nav.Link>\n              <Nav.Link className=\"nav-link\" href={`/user/patients/add`}>New Patients</Nav.Link>\n              <Nav.Link className=\"nav-link\" href={'/user/map'}>Map</Nav.Link>\n            </Nav>\n          :\n            null\n          }\n        <Nav className=\"ml-auto\">\n          { props.isLoggedIn\n            ?\n            <Nav.Link eventKey={2} className=\"nav-link\" onClick={props.handleLogout}>Logout</Nav.Link>\n            :\n            <Nav.Link eventKey={2} className=\"nav-link\" href=\"/login\">Login</Nav.Link>\n\n          }\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './index.css';\n\nfunction Footer(props){\n  return(\n\n<footer>\n\n</footer>\n\n\n\n\n\n\n\n\n\n);\n}\nexport default Footer;\n","import React, {Component} from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n  render() {\n    if(this.props.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n    return(\n      <form onSubmit={(e) => this.props.handleLogin(e, this.state)}>\n        <div className=\"container\">\n          <h1>Login to an Existing Account</h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\"><b>Email</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Email\" name=\"email\" id=\"username\" value={this.state.email} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\"><b>Password</b></label>\n            <input type=\"password\" className=\"form-control\" placeholder=\"Enter Password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"d-flex align-items-baseline\">\n            <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n            <p className=\"ml-auto\">Need an account? <NavLink to=\"/registration\">Register</NavLink></p>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\nexport default Login;\n","import React, {Component} from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nclass Registration extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      // username: '',\n      email: '',\n      phone_number: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    // this.handleRegistration = this.handleRegistration.bind(this);\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n  // handleRegistration(event){\n  //   event.preventDefault();\n  //   this.props.handleRegistration(this.state);\n  // }\n  render() {\n    if(this.props.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n    return(\n      <form onSubmit={(e) => this.props.handleRegistration(e, this.state)}>\n        <div className=\"container\">\n          <h1>Create an Account</h1>\n          {/*<div className=\"form-group\">\n            <label htmlFor=\"username\"><b>Username</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Username\" name=\"username\" id=\"username\" value={this.state.username} onChange={this.handleInput} required/>\n          </div>*/}\n          <div className=\"form-group\">\n            <label htmlFor=\"email\"><b>Email</b></label>\n            <input type=\"email\" className=\"form-control\" placeholder=\"Enter Email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"phone-number\"><b>Phone number</b></label>\n            <input type=\"tel\" className=\"form-control\" placeholder=\"Enter phone number\" name=\"phone_number\" id=\"phone-number\" value={this.state.phone_number} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password1\"><b>Password</b></label>\n            <input type=\"password\" className=\"form-control\" placeholder=\"Enter Password\" name=\"password1\" id=\"password1\" minlength=\"8\" value={this.state.password1} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password2\"><b>Confirm Password</b></label>\n            <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" name=\"password2\" id=\"password2\" minlength=\"8\" value={this.state.password2} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"d-flex align-items-baseline\">\n            <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n            <p className=\"ml-auto\">Already have an account? <NavLink to=\"/login\">Login</NavLink></p>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\nexport default Registration;\n","// import GoogleMapReact from 'google-map-react'\n// Marker.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GoogleMapReact from 'google-map-react';\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nconst GoogleMap = ({ children, ...props }) => (\n  <Wrapper>\n    <GoogleMapReact\n      bootstrapURLKeys={{\n        key: process.env.REACT_APP_MAP_KEY,\n      }}\n      {...props}\n    >\n      {children}\n    </GoogleMapReact>\n  </Wrapper>\n);\n\nGoogleMap.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n};\n\nGoogleMap.defaultProps = {\n  children: null,\n};\n\nexport default GoogleMap;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n`;\n\nclass SearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.clearSearchBox = this.clearSearchBox.bind(this);\n  }\n\n  componentDidMount({ map, mapApi } = this.props) {\n    this.searchBox = new mapApi.places.SearchBox(this.searchInput);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n    this.searchBox.bindTo('bounds', map);\n  }\n\n  componentWillUnmount({ mapApi } = this.props) {\n    mapApi.event.clearInstanceListeners(this.searchInput);\n  }\n\n  onPlacesChanged = ({ map, addplace } = this.props) => {\n    const selected = this.searchBox.getPlaces();\n    const { 0: place } = selected;\n    if (!place.geometry) return;\n    if (place.geometry.viewport) {\n      map.fitBounds(place.geometry.viewport);\n    } else {\n      map.setCenter(place.geometry.location);\n      map.setZoom(17);\n    }\n\n    addplace(selected);\n    this.searchInput.blur();\n  };\n\n  clearSearchBox() {\n    this.searchInput.value = '';\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <input\n          ref={(ref) => {\n            this.searchInput = ref;\n          }}\n          type=\"text\"\n          onFocus={this.clearSearchBox}\n          placeholder=\"Enter a location\"\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default SearchBox;\n","import React, { Component } from 'react';\n\nimport Marker from './Marker';\n\nimport GoogleMap from './GoogleMap';\nimport SearchBox from './SearchBox';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 500px;\n`;\n\nclass Searchbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      places: [],\n    };\n\n  }\n\n  componentWillMount() {\n    this.setCurrentLocation();\n  }\n  apiHasLoaded = (map, maps) => {\n    this.setState({\n      mapApiLoaded: true,\n      mapInstance: map,\n      mapApi: maps,\n    });\n  };\n\n  addPlace = (places) => {\n    this.setState({ places });\n  };\n\n  setCurrentLocation = () => {\n      if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition((position) => {\n              this.setState({\n                  center: [position.coords.latitude, position.coords.longitude],\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude\n              });\n          });\n      }\n  }\n\n  render() {\n    const {\n      places, mapApiLoaded, mapInstance, mapApi,\n    } = this.state;\n    return (\n      <>\n        {mapApiLoaded && <SearchBox map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />}\n        <Wrapper>\n        <GoogleMap\n          defaultZoom={10}\n          defaultCenter={this.state.center}\n          bootstrapURLKeys={{\n            key: process.env.REACT_APP_MAP_KEY,\n            libraries: ['places', 'geometry'],\n          }}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n        >\n          {this.state.places.length\n            && places.map((place) => (\n              <Marker\n                key={place.id}\n                text={place.name}\n                lat={place.geometry.location.lat()}\n                lng={place.geometry.location.lng()}\n              />\n            ))}\n        </GoogleMap>\n        </Wrapper>\n      </>\n    );\n  }\n}\n\nexport default Searchbox;\n\n\n\n\n\n\n//\n//\n//\n//\n// // MyGoogleMaps.js\n// import React, { Component } from 'react';\n//\n// import GoogleMapReact from 'google-map-react';\n//\n// import styled from 'styled-components';\n//\n// import AutoComplete from './Autocomplete';\n// import Marker from './Marker';\n//\n// const Wrapper = styled.main`\n//   width: 100%;\n//   height: 500px;\n// `;\n//\n// class MyGoogleMap extends Component {\n//\n//\n//     state = {\n//         mapApiLoaded: false,\n//         mapInstance: null,\n//         mapApi: null,\n//         geoCoder: null,\n//         places: [],\n//         center: [],\n//         zoom: 9,\n//         address: '',\n//         draggable: true,\n//         lat: null,\n//         lng: null\n//     };\n//\n//     componentWillMount() {\n//         this.setCurrentLocation();\n//     }\n//\n//\n//     onMarkerInteraction = (childKey, childProps, mouse) => {\n//         this.setState({\n//             draggable: false,\n//             lat: mouse.lat,\n//             lng: mouse.lng\n//         });\n//     }\n//     onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n//         this.setState({ draggable: true });\n//         this._generateAddress();\n//     }\n//\n//     _onChange = ({ center, zoom }) => {\n//         this.setState({\n//             center: center,\n//             zoom: zoom,\n//         });\n//\n//     }\n//\n//     _onClick = (value) => {\n//         this.setState({\n//             lat: value.lat,\n//             lng: value.lng\n//         });\n//     }\n//\n//     apiHasLoaded = (map, maps) => {\n//         this.setState({\n//             mapApiLoaded: true,\n//             mapInstance: map,\n//             mapApi: maps,\n//         });\n//\n//         this._generateAddress();\n//     };\n//\n//     addPlace = (place) => {\n//         this.setState({\n//             places: [place],\n//             lat: place.geometry.location.lat(),\n//             lng: place.geometry.location.lng()\n//         });\n//         this._generateAddress()\n//     };\n//\n//     _generateAddress() {\n//         const {\n//             mapApi\n//         } = this.state;\n//\n//         const geocoder = new mapApi.Geocoder;\n//\n//         geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n//             console.log(results);\n//             console.log(status);\n//             if (status === 'OK') {\n//                 if (results[0]) {\n//                     this.zoom = 12;\n//                     this.setState({ address: results[0].formatted_address });\n//                 } else {\n//                     window.alert('No results found');\n//                 }\n//             } else {\n//                 window.alert('Geocoder failed due to: ' + status);\n//             }\n//\n//         });\n//     }\n//\n//     // Get Current Location Coordinates\n//     setCurrentLocation() {\n//         if ('geolocation' in navigator) {\n//             navigator.geolocation.getCurrentPosition((position) => {\n//                 this.setState({\n//                     center: [position.coords.latitude, position.coords.longitude],\n//                     lat: position.coords.latitude,\n//                     lng: position.coords.longitude\n//                 });\n//             });\n//         }\n//     }\n//\n//     render() {\n//         const {\n//             places, mapApiLoaded, mapInstance, mapApi,\n//         } = this.state;\n//\n//\n//         return (\n//             <Wrapper>\n//                 {mapApiLoaded && (\n//                     <div>\n//                         <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n//                     </div>\n//                 )}\n//                 <GoogleMapReact\n//                     center={this.state.center}\n//                     zoom={this.state.zoom}\n//                     draggable={this.state.draggable}\n//                     onChange={this._onChange}\n//                     onChildMouseDown={this.onMarkerInteraction}\n//                     onChildMouseUp={this.onMarkerInteractionMouseUp}\n//                     onChildMouseMove={this.onMarkerInteraction}\n//                     onChildClick={() => console.log('child click')}\n//                     onClick={this._onClick}\n//                     bootstrapURLKeys={{\n//                         key: process.env.REACT_APP_GOOGLE_PLACES_API_KEY,\n//                         libraries: ['places', 'geometry'],\n//                     }}\n//                     yesIWantToUseGoogleMapApiInternals\n//                     onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n//                 >\n//\n//                     <Marker\n//                         text={this.state.address}\n//                         lat={this.state.lat}\n//                         lng={this.state.lng}\n//                     />\n//\n//\n//                 </GoogleMapReact>\n//\n//                 <div className=\"info-wrapper\">\n//                     <div className=\"map-details\">Latitude: <span>{this.state.lat}</span>, Longitude: <span>{this.state.lng}</span></div>\n//                     <div className=\"map-details\">Zoom: <span>{this.state.zoom}</span></div>\n//                     <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\n//                 </div>\n//\n//\n//             </Wrapper >\n//         );\n//     }\n// }\n//\n// export default MyGoogleMap;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './index.css'\nclass PatientForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      first_name: '',\n      last_name:'',\n      address:'',\n      city: '',\n      state: '',\n      zipcode: '',\n      date_of_birth: '',\n      weight: '',\n      gender: '',\n      food_allergies:'',\n      medication_allergies:'',\n      primary_doctor:'',\n      primary_doctor_telephone_number:'',\n      language:'',\n      is_bed_patient: false,\n      needs_walking_device: false,\n      walking_devices: '',\n      surgeries:'',\n      image: null,\n      preview: '',\n      feet: \"Select\",\n      inches: \"Select\",\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleCheckbox = this.handleCheckbox.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.saveEdit = this.saveEdit.bind(this);\n  }\n  async saveEdit(event) {\n    event.preventDefault();\n    const csrftoken = Cookies.get('csrftoken');\n    // shallow copy of state\n    const patient = {...this.state};\n    patient.height = `${this.state.feet}' ${this.state.inches}\"`;\n    // remove walking device if one is not selected\n    if(!patient.needs_walking_device) {\n      delete patient.walking_devices\n      delete patient.needs_walking_devices\n    }\n    if(typeof(patient.image) === 'string' ) {\n      delete patient.image;\n    }\n    if(!patient.is_bed_patient) {\n      delete patient.is_bed_patient\n    }\n    if(!patient.food_allergies) {\n      delete patient.food_allergies\n    }\n    if(!patient.medication_allergies) {\n      delete patient.medication_allergies\n    }\n    if(!patient.surgeries) {\n      delete patient.surgeries\n    }\n    // remove image if one is not selected\n    if(!patient.image) {\n      delete patient.label_image;\n    }\n    delete patient.feet;\n    delete patient.inches;\n    // console.log(patient.height);\n    delete patient.caregivers\n    const formData = new FormData();\n    const keys = Object.keys(patient);\n    keys.forEach(key => formData.append(key, this.state[key]));\n    const options = {\n        method: 'PATCH',\n        headers: {\n          'X-CSRFToken': csrftoken,\n        },\n        body: formData,\n    };\n    const response = await fetch(`/api/v1/user/patients/${patient.id}/`, options).catch(this.handleError);\n    await response.json().catch(this.handleError);\n    this.props.history.push(`/user/patients/${patient.id}`);\n  }\n  handleImage(event) {\n    // The selected files' are returned by the element's HTMLInputElement.files property — this returns a FileList object, which contains a list of File objects\n    let file = event.target.files[0];\n    // we'll use this value when we save the image (see _saveImage)\n    this.setState({\n      image: file\n    });\n    // The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.\n    let reader = new FileReader();\n    // A handler for the loadend event. This event is triggered each time the reading operation is completed (either in success or failure).\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result\n      });\n    }\n    // Starts reading the contents of the specified Blob, once finished, the result attribute contains a data: URL representing the file's data.\n    reader.readAsDataURL(file);\n  }\n  handleInput (event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n  handleCheckbox(event) {\n    this.setState({[event.target.name]: event.target.checked});\n  }\n  handleError(err) {\n    console.warn(err);\n  }\n  async componentDidMount() {\n    if(this.props.match.params.id) {\n      const id = this.props.match.params.id;\n      const response = await fetch(`/api/v1/user/patients/${id}/`).catch(this.handleError);\n      const data = await response.json().catch(this.handleError);\n      this.setState({...data});\n      // console.log(data);\n    }\n  }\n  async handleSubmit(event){\n    event.preventDefault();\n    const csrftoken = Cookies.get('csrftoken');\n    // shallow copy of state\n    const patient = {...this.state};\n    patient.height = `${this.state.feet}' ${this.state.inches}\"`;\n    // remove walking device if one is not selected\n    if(!patient.needs_walking_device) {\n      delete patient.walking_devices\n      delete patient.needs_walking_devices\n    }\n    if(!patient.is_bed_patient) {\n      delete patient.is_bed_patient\n    }\n    if(!patient.food_allergies) {\n      delete patient.food_allergies\n    }\n    if(!patient.medication_allergies) {\n      delete patient.medication_allergies\n    }\n    if(!patient.surgeries) {\n      delete patient.surgeries\n    }\n    // remove image if one is not selected\n    if(!patient.image) {\n      delete patient.label_image;\n    }\n    delete patient.feet;\n    delete patient.inches;\n    // console.log(patient.height);\n    const formData = new FormData();\n    const keys = Object.keys(patient);\n    keys.forEach(key => formData.append(key, this.state[key]));\n    const options = {\n        method: 'POST',\n        headers: {\n          'X-CSRFToken': csrftoken,\n        },\n        body: formData,\n    };\n    const response = await fetch('/api/v1/user/patients/', options).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.props.history.push(`/user/patients/${data.id}/`);\n};\n\nrender() {\n    return (\n      <React.Fragment>\n        {\n          !this.props.isEditing\n        ?\n          <h2 className=\"list-label\">NEW PATIENT FORM</h2>\n        :\n          null}\n        <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\" style={{height: \"200px\", width: \"200px\"}}>\n          <label htmlFor=\"image\"><b>Image</b></label>\n          <input type=\"file\" className=\"form-control\" placeholder=\"Upload image\" name=\"image\" id=\"image\" onChange={this.handleImage} required/>\n          {this.state.image ? (\n          <img className=\"patient-form-img\" src={this.state.preview || this.state.image} alt='preview' style={{width: \"50%\"}}/>\n        ) : (\n          null\n        )}\n        </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"first-name\"><b>First name</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter first name\" name=\"first_name\" id=\"first-name\" value={this.state.first_name} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"last-name\"><b>Last name</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter last name\" name=\"last_name\" id=\"last-name\" value={this.state.last_name} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label><b>Address</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter street address\" name=\"address\" id=\"adress\" value={this.state.address} onChange={this.handleInput} required/>\n            <br/>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter city\" name=\"city\" id=\"city\" value={this.state.city} onChange={this.handleInput} required/>\n            <br/>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter state\" name=\"state\" id=\"state\" value={this.state.state} onChange={this.handleInput} required/>\n            <br/>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter zipcode\" name=\"zipcode\" id=\"zipcode\" value={this.state.zipcode} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"date-of-birth\"><b>Birthday</b></label>\n            <input type=\"date\" className=\"form-control\" placeholder=\"Enter birthday\" name=\"date_of_birth\" id=\"date-of-birth\" value={this.state.date_of_birth} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"weight\"><b>Weight</b></label>\n            <input type=\"number\" className=\"form-control\" placeholder=\"Enter weight\" name=\"weight\" id=\"weight\" value={this.state.weight} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label><b>Height</b></label>\n            <select className=\"form-control\" onChange={this.handleInput} value={this.state.feet} name=\"feet\">\n              <option value=\"Select\">Feet</option>\n              <option value=\"09\">9</option>\n              <option value=\"08\">8</option>\n              <option value=\"07\">7</option>\n              <option value=\"06\">6</option>\n              <option value=\"05\">5</option>\n              <option value=\"04\">4</option>\n              <option value=\"03\">3</option>\n              <option value=\"02\">2</option>\n              <option value=\"01\">1</option>\n            </select>\n            <br/>\n            <select className=\"form-control\" onChange={this.handleInput} value={this.state.inches} name=\"inches\">\n              <option value=\"Select\">Inches</option>\n              <option value=\"11\">11</option>\n              <option value=\"10\">10</option>\n              <option value=\"09\">9</option>\n              <option value=\"08\">8</option>\n              <option value=\"07\">7</option>\n              <option value=\"06\">6</option>\n              <option value=\"05\">5</option>\n              <option value=\"04\">4</option>\n              <option value=\"03\">3</option>\n              <option value=\"02\">2</option>\n              <option value=\"01\">1</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label><b>Gender</b></label>\n            <select className=\"form-control\" onChange={this.handleInput} value={this.state.gender} name=\"gender\">\n              <option value=\"Select\">Select</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"food-allergies\"><b>Food allergies</b></label>\n            <textarea className=\"form-control\" rows=\"3\" placeholder=\"Describe food allergies\" name=\"food_allergies\" id=\"food-allergies\" value={this.state.food_allergies} onChange={this.handleInput}/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"medication-allergies\"><b>Medication allergies</b></label>\n            <textarea className=\"form-control\" rows=\"3\" placeholder=\"Describe medication allergies\" name=\"medication_allergies\" id=\"medication-allergies\" value={this.state.medication_allergies} onChange={this.handleInput}/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"primary-doctor\"><b>Primary doctor</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter primary doctor's name\" name=\"primary_doctor\" id=\"primary-doctor\" value={this.state.primary_doctor} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"primary-doctor-telephone-number\"><b>Primary doctor's telephone number</b></label>\n            <input type=\"tel\" className=\"form-control\" placeholder=\"Enter primary doctor's name\" name=\"primary_doctor_telephone_number\" id=\"primary-doctor-telephone_number\" value={this.state.primary_doctor_telephone_number} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"language\"><b>Primary language</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter patient's primary language\" name=\"language\" id=\"language\" value={this.state.language} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" name=\"is_bed_patient\" id=\"is-bed-patient\" checked={this.state.is_bed_patient} onChange={this.handleCheckbox}/>\n            <label className=\"form-check-label\" htmlFor=\"is-bed-patient\"><b>Bed patient</b></label>\n          </div>\n          <br/>\n          <div className=\"form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" name=\"needs_walking_device\" id=\"needs-walking-device\" checked={this.state.needs_walking_device} onChange={this.handleCheckbox}/>\n            <label className=\"form-check-label\" htmlFor=\"needs-walking-device\"><b>Needs walking assitance</b></label>\n          </div>\n          <br/>\n          <div className=\"form-group\">\n            <label htmlFor=\"walking-devices\"><b>Walking devices</b></label>\n            <textarea className=\"form-control\" rows=\"3\" placeholder=\"List walking devices\" name=\"walking_devices\" id=\"walking-devices\" value={this.state.walking_devices} onChange={this.handleInput} disabled={!this.state.needs_walking_device} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"surgeries\"><b>Surgeries</b></label>\n            <textarea className=\"form-control\" rows=\"8\" placeholder=\"Describe surgery history\" name=\"surgeries\" id=\"surgeries\" value={this.state.surgeries} onChange={this.handleInput}/>\n          </div>\n          {\n            this.state.id\n          ?\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveEdit}>Save Changes</button>\n          :\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          }\n        </form>\n      </React.Fragment>\n   )\n }\n}\nexport default PatientForm;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport './index.css';\nimport {Link} from 'react-router-dom';\nclass PatientCard extends Component {\n  render() {\n    const patient = this.props.patient;\n    return(\n      <div className=\"tan-card mb-5\">\n      <div className=\"photocard\">\n      <Link to={`/user/patients/${patient.id}`}>\n        <Card>\n          <Card.Img variant=\"top\" src={patient.image}/>\n          <Card.Body>\n            <Card.Title>{`${patient.first_name.toUpperCase()}  ${patient.last_name.toUpperCase()}`}</Card.Title>\n          </Card.Body>\n        </Card>\n      </Link>\n      </div>\n      </div>\n    )\n  }\n}\nclass PatientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientList: [],\n    }\n    this.fetchPatientList = this.fetchPatientList.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPatientList();\n  }\n  async fetchPatientList() {\n    const response = await fetch('/api/v1/user/patients/').catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({patientList: data});\n  }\n  render() {\n    // console.log(this.props.patientList)\n    const patients = this.state.patientList.map(patient => <PatientCard key={patient.id} patient={patient}/>);\n    return(\n      <div id=\"patient-list\" className=\"d-flex\">\n\n\n        {patients}\n\n      </div>\n    )\n  }\n}\nexport default PatientList;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport './index.css';\nimport Moment from 'react-moment';\nimport PatientForm from './../PatientForm';\nclass PrescriptionPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: '',\n      datetime: '',\n      displayModal: false,\n    }\n    this.saveDose = this.saveDose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n  handleError(err) {\n    console.warn(err)\n  }\n  async saveDose() {\n    const prescription_id = this.props.prescription.id\n    const dose = {\n      comments: this.state.comments,\n      datetime: this.state.datetime,\n      prescription: prescription_id,\n    }\n    const csrftoken = Cookies.get('csrftoken');\n    const options = {\n        method: 'POST',\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(dose),\n    };\n    const response = await fetch(`/api/v1/user/patients/${prescription_id}/doses/`, options);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n    // that the data object that was returned and fire off a request to your twilio url (tied to a view)\n    // the twilio url/view needs to fire off the text message\n    this.setState({displayModal: false})\n  }\n\n    render() {\n      return(\n      <li class=\"list-group-item d-flex align-items-baseline\">\n        <p>{this.props.prescription.medication_name}</p>\n        <button onClick={() => this.setState({displayModal: true})} className=\"btn btn-link ml-auto record-dose\" type=\"button\">Give Medication</button>\n        <Modal show={this.state.displayModal} onHide={() => this.setState({displayModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>{this.props.prescription.medication_name.toUpperCase()}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Date Time</Form.Label>\n                <Form.Control type=\"datetime-local\" placeholder=\"Select date\" name=\"datetime\" value={this.state.datetime} onChange={this.handleChange}/>\n              </Form.Group>\n              <Form.Group controlId=\"comments\">\n                <Form.Label>Comments</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} name=\"comments\" value={this.state.comments} onChange={this.handleChange}/>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.setState({displayModal: false})}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.saveDose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {this.props.isAdmin && <Link className=\"newmed nav-link edit-prescription\" to={`/prescription/${this.props.prescription.id}`}>Edit</Link>}\n        {this.props.isAdmin && <button className=\"btn btn-link remove-prescription\" type=\"button\" onClick={() => this.props.removePrescription(this.props.prescription)}>Remove</button>}\n      </li>\n    )\n  }\n}\nclass PatientDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      first_name: '',\n      last_name: '',\n      city: '',\n      state: '',\n      image:null,\n      availableCaregivers: [],\n      displayModal: false,\n    }\n    this.fetchPatientDetail = this.fetchPatientDetail.bind(this);\n    this.removePrescription = this.removePrescription.bind(this);\n    // this.editPrescription = this.editPrescription.bind(this);\n    this.fetchCargivers = this.fetchCaregivers.bind(this);\n    this.removeCaregiver = this.removeCaregiver.bind(this);\n    this.addCaregiver = this.addCaregiver.bind(this);\n  }\n\n  async fetchCaregivers() {\n    const id = Number(this.props.match.params.id);\n    const response = await fetch(`/api/v1/user/patients/caregivers/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n    const availableCaregivers = data.filter(caregiver => !caregiver.patients.includes(id))\n    this.setState({availableCaregivers});\n    // console.log(data);\n  }\n\n  async removeCaregiver(caregiver) {\n    const csrftoken = Cookies.get('csrftoken');\n    let caregivers = [...this.state.caregivers];\n    const index = caregivers.indexOf(caregiver);\n    caregivers.splice(index, 1);\n    this.setState({caregivers});\n\n    let availableCaregivers = [...this.state.availableCaregivers];\n    availableCaregivers.push(caregiver);\n    this.setState({availableCaregivers});\n\n    const options = {\n        method: 'PATCH',\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Content-Type': 'application/json',\n        },\n          body: JSON.stringify({caregivers: caregivers}),\n    };\n    const response = await fetch(`/api/v1/user/patients/${this.state.id}/`, options);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n\n  }\n\n  async addCaregiver(caregiver) {\n    const csrftoken = Cookies.get('csrftoken');\n    let caregivers = [...this.state.caregivers];\n    caregivers.push(caregiver);\n\n    let availableCaregivers = [...this.state.availableCaregivers];\n    const index = availableCaregivers.indexOf(caregiver);\n    availableCaregivers.splice(index, 1);\n    this.setState({caregivers, availableCaregivers});\n    const options = {\n        method: 'PATCH',\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Content-Type': 'application/json',\n        },\n          body: JSON.stringify({caregivers: caregivers}),\n    };\n    const response = await fetch(`/api/v1/user/patients/${this.state.id}/`, options);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n\n  }\n  componentDidMount() {\n    this.fetchPatientDetail();\n    this.fetchCaregivers();\n  }\n  // async editPrescription(prescription) {\n  //   console.log(prescription);\n  //   // event.preventDefault();\n  //   // console.log(!(prescription.label_image instanceof File));\n  //\n  //   if(!(prescription.label_image instanceof File)) {\n  //     delete prescription.label_image;\n  //   }\n  //\n  //   const id = prescription.id;\n  //   let formData = new FormData();\n  //   const keys = Object.keys(prescription);\n  //   keys.forEach(key => formData.append(key, prescription[key]));\n  //\n  //   const options = {\n  //     method: 'PUT',\n  //     headers: {\n  //       'X-CSRFToken': Cookies.get('csrftoken'),\n  //     },\n  //         body:formData,\n  //   }\n  //   const handleError = (err) => console.warn(err);\n  //   const response = await fetch(`/api/v1/user/patients/prescription/${id}/`, options);\n  //   const data = await response.json().catch(handleError)\n  //\n  //   const prescriptions = [...this.state.prescriptions];\n  //   const index = prescriptions.findIndex(prescription => prescription.id === id);\n  //   prescriptions[index] = data;\n  //   this.setState({prescriptions});\n  // }\n  async removePrescription(prescription){\n    const options = {\n          method: 'DELETE',\n          headers:{\n            'X-CSRFToken': Cookies.get('csrftoken'),\n            'Content-Type': 'application/json'\n          },\n        }\n        const handleError = (err) => console.warn(err);\n        const response = await fetch(`/api/v1/user/patients/prescriptions/${prescription.id}/`, options)\n        const data = await response.json().catch(handleError);\n        console.log('data', data);\n        const prescriptions = [...this.state.prescriptions];\n        const index = prescriptions.indexOf(prescription);\n        prescriptions.splice(index, 1);\n        this.setState({prescriptions});\n      }\n  async fetchPatientDetail() {\n    const id = this.props.match.params.id;\n    const response = await fetch(`/api/v1/user/patients/${id}/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({...data});\n    console.log(data);\n  }\n  // saveEdit(data) {\n  //   this.setState({isEditing: false, ...data});\n  // }\n  render() {\n    const isAdmin = JSON.parse(localStorage.getItem('user')).id === this.state.user?.id\n    const id = this.props.match.params.id;\n    const prescriptions = this.state.prescriptions?.map(prescription => <PrescriptionPreview key={prescription.id} prescription={prescription} removePrescription={this.removePrescription} editPrescription={this.editPrescription} isAdmin={isAdmin}/>);\n    const caregivers = this.state.caregivers?.map(caregiver => (\n\n      <div key={caregiver.id}>\n        <p>{caregiver.username.toUpperCase()}</p>\n        <button className=\"remove-caregiver\"type=\"button\" onClick={() => this.removeCaregiver(caregiver)}>Remove Caregiver</button>\n      </div>\n\n    ))\n\n    const availableCaregivers = this.state.availableCaregivers?.map(caregiver => (\n      <li key={caregiver.id} className=\"d-flex list-group-item align-items-baseline\">\n        <p>{caregiver.username.toUpperCase()}</p>\n        <button className=\"add-caregiver ml-auto\" type=\"button\" onClick={() => this.addCaregiver(caregiver)}>ADD</button>\n      </li>\n    ))\n\n\n    return(\n      <React.Fragment>\n        <div className=\"row\">\n          {this.state.isEditing\n          ?\n          <div className=\"col-8\">\n            <PatientForm {...this.state} saveEdit={this.saveEdit} />\n          </div>\n          :\n          <React.Fragment>\n          <div className=\"col-md-7 col-12\">\n            <img src= {this.state.image} alt=\"\" width=\"175\" className=\"patient-detail-img mb-3\"/>\n            {isAdmin && <Link className=\"newmed nav-link edit-patient\" to={`/user/patients/edit/${id}`}>Edit Patient</Link>}\n            {isAdmin && <Link className=\"newmed nav-link new-prescription\" to={`/user/patients/${id}/prescriptions/add/`}>Add New Prescription</Link>}\n            <Link className=\"newmed nav-link medication-history\" to={`/user/medicationHistory/${id}`}>View Prescription History</Link>\n\n            <div className=\"table-responsive\">\n            <table className=\"table table-user-information\">\n                <tbody>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Name\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.first_name} {this.state.last_name}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Address\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.address}<br/>\n                            {this.state.city}, {this.state.state}  {this.state.zipcode}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Date of Birth\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.date_of_birth}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Weight\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.weight}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Height\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.height}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Gender\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.gender}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Food allergies\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.food_allergies}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Medication allergies\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.medication_allergies}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Primary doctor\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.primary_doctor}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Primary docotor's telephone number\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.primary_doctor_telephone_number}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Primary language\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.language}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Bed patient\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.is_bed_patient ? 'YES' : 'NO'}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Needs assitance walking\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.needs_walking_device ? 'YES' : 'NO'}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Walking devices\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.walking_devices}<br/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <strong>\n                                <span className=\"glyphicon glyphicon-user  text-primary\"></span>\n                                Surgeries\n                            </strong>\n                        </td>\n                        <td className=\"text-primary\">\n                            {this.state.surgeries}<br/>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            </div>\n        </div>\n        <div className=\"col-md-5 col-12\">\n        <ul className=\"list-group list-group-flush\">\n          <h3>Prescriptions</h3>\n          {prescriptions}\n        </ul>\n\n        <ul className=\"list-group list-group-flush\">\n        <h3>Secondary Caregivers</h3>\n\n        <li class=\"list-group-item d-flex align-items-baseline caregiver-box\">\n\n          {isAdmin && <button onClick={() => this.setState({displayModal: true})} className=\"btn btn-link ml-auto add-caregiver\" type=\"button\">Add Caregiver</button>}\n          <Modal show={this.state.displayModal} onHide={() => this.setState({displayModal: false})}>\n            <Modal.Header closeButton>\n              <Modal.Title>Search Caregivers Below</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <ul className=\"list-group list-group-flush\">\n              {availableCaregivers}\n              </ul>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => this.setState({displayModal: false})}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n        </li>\n        <div className=\"carelist\">\n          {isAdmin && caregivers}\n          </div>\n        </ul>\n        </div>\n\n\n\n          </React.Fragment>\n          }\n        </div>\n      </React.Fragment>\n    )\n  }\n}\nexport default PatientDetail;\n","import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\n\n\n\n\nclass Caregivers extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      caregivers: []\n    }\n\n\n    this.fetchCaregivers = this.fetchCaregivers.bind(this);\n\n  }\n\n  componentDidMount(){\n    this.fetchCaregivers();\n  }\n\n\n\n  async fetchCaregivers() {\n    const id = this.props.match?.params.id;\n    const response = await fetch(`/api/v1/user/patients/caregivers/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({caregivers: data});\n    console.log(data);\n  }\n\nrender(){\n  const id = Number(this.props.match?.params.id);\n  const caregivers = this.state.caregivers\n    .filter(caregiver => caregiver.patients.includes(id))\n    .map(caregiver => <div key={caregiver.id}>{caregiver.username}</div>);\n\n    const noncaregivers = this.state.caregivers\n      .filter(caregiver => !caregiver.patients.includes(id))\n      .map(caregiver => <div key={caregiver.id}>{caregiver.username}</div>);\n\n    return(\n      <React.Fragment>\n        Caregivers\n        {caregivers}\n\n        Non Caregivers\n        {noncaregivers}\n      </React.Fragment>\n\n\n\n\n\n\n\n\n  )\n  }\n}\nexport default Caregivers;\n","import React, { Component } from 'react';\nimport './index.css';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Moment from 'react-moment';\n\n\n\nclass MedicationHistory extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        data:[]\n      }\n\n       this.fetchMedicationHistory = this.fetchMedicationHistory.bind(this)\n     }\n     componentDidMount() {\n       this.fetchMedicationHistory();\n       console.log(this.state)\n     }\n     async fetchMedicationHistory() {\n       console.log(this.props.match.params);\n       // const prescription_id = this.props.prescription.id\n       const id = this.props.match.params.id;\n       const response = await fetch(`/api/v1/user/patients/${id}/prescriptionHistory/`).catch(this.handleError);\n       const data = await response.json().catch(this.handleError);\n       this.setState({data});\n       console.log('medicationHistroy',this.state);\n     }\n     render(){\n       let text = this.state.data.map(item =>{\n         return(\n           <tr>\n             <th scope=\"row\">{item.id}</th>\n             <td>{item.comments}</td>\n             <td><Moment format=\"YYYY-MMM-ddd HH:mm A\">\n                {item.datetime}\n            </Moment></td>\n\n           </tr>\n       )})\n       return(\n         <div>\n         <h3>Medication History</h3>\n         <table class=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">Comments</th>\n                    <th scope=\"col\">Date/Time</th>\n\n                  </tr>\n                </thead>\n                <tbody>\n                  {text}\n\n                </tbody>\n              </table>\n          <Link className=\"pdtail_link\" to={`/user/patients/${this.props.match.params.id}/`}>Return To Patient Detail</Link>\n        </div>\n       )\n     }\n  }\n\nexport default MedicationHistory;\n","import React, { Component } from 'react';\nimport './index.css';\nimport Cookies from 'js-cookie';\nclass PrescriptionForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      patient: this.props.patientID,\n      brand_name:'',\n      medication_name:'',\n      directions: '',\n      quantity: '',\n      refills:'',\n      pharmacy_number:'',\n      rx:'',\n      prescriber:'',\n      take_as_needed: false,\n      hourly_frequency:'',\n      label_image:null,\n      preview: '',\n    }\n  this.handleChange = this.handleChange.bind(this);\n  this.handleImage = this.handleImage.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.handleCheckbox = this.handleCheckbox.bind(this);\n}\nhandleCheckbox(event) {\n  this.setState({[event.target.name]: event.target.checked});\n}\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n}\nhandleImage(event) {\n  // The selected files' are returned by the element's HTMLInputElement.files property — this returns a FileList object, which contains a list of File objects\n  let file = event.target.files[0];\n  // we'll use this value when we save the image (see _saveImage)\n  this.setState({\n    image: file\n  });\n  // The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.\n  let reader = new FileReader();\n  // A handler for the loadend event. This event is triggered each time the reading operation is completed (either in success or failure).\n  reader.onloadend = () => {\n    this.setState({\n      preview: reader.result\n    });\n  }\n  // Starts reading the contents of the specified Blob, once finished, the result attribute contains a data: URL representing the file's data.\n  reader.readAsDataURL(file);\n}\nasync handleSubmit(event){\n  event.preventDefault();\n  const id = this.props.match.params.id;\n  const csrftoken = Cookies.get('csrftoken');\n  const formData = new FormData();\n  const prescription = { ...this.state };\n  if(!prescription.label_image) {\n    delete prescription.label_image;\n  }\n  const keys = Object.keys(prescription);\n  keys.forEach(key => formData.append(key, prescription[key]));\n  formData.append('patient', id);\n  const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': csrftoken,\n      },\n      body: formData,\n  };\n  await fetch(`/api/v1/user/patients/${id}/prescriptions/`, options);\n  this.props.history.push(`/user/patients/${id}/`);\n};\nrender() {\n  return(\n      <React.Fragment>\n      {\n        !this.props.isEditing\n      ?\n        <h2 className=\"list-label\">PRESCRIPTION FORM</h2>\n      :\n        null}\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"label_image\"><b>Label image</b></label>\n            <input type=\"file\" className=\"form-control\" placeholder=\"Upload image\" name=\"label_image\" id=\"label-image\" onChange={this.handleImage} required/>\n            {this.state.label_image ? (\n            <img src={this.state.preview} alt='preview'/>\n          ) : (\n            null\n          )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='brand_name'>Brand Name</label>\n            <input className=\"form-control\" type=\"text\" id='brand_name' name=\"brand_name\" value={this.state.brand_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_name'>Medication Name</label>\n            <input className=\"form-control\" type=\"text\" id='medication_name' name=\"medication_name\" value={this.state.medication_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='directions'>Directions</label>\n            <input className=\"form-control\" type=\"text\" id='directions' name=\"directions\" value={this.state.directions} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='hourly_frequency'>Hourly Frequency</label>\n            <input className=\"form-control\" type=\"text\" id='hourly_frequency' name=\"hourly_frequency\" value={this.state.hourly_frequency} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='quantity'>Quantity</label>\n            <input className=\"form-control\" type=\"text\" id='quantity' name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='refills'>Refills</label>\n            <input className=\"form-control\" type=\"text\" id='refills' name=\"refills\" value={this.state.refills} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='pharmacy_number'>Pharmacy Number</label>\n            <input className=\"form-control\" type=\"text\" id='pharmacy_number' name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='rx'>RX</label>\n            <input className=\"form-control\" type=\"text\" id='rx' name=\"rx\" value={this.state.rx} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='prescriber'>Prescriber</label>\n            <input className=\"form-control\" type=\"text\" id='prescriber' name=\"prescriber\" value={this.state.prescriber} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" name=\"take_as_needed\" id=\"take_as_needed\" checked={this.state.take_as_needed} onChange={this.handleCheckbox}/>\n            <label className=\"form-check-label\" htmlFor='take_as_needed'><b>Take as needed</b></label>\n          </div>\n          <br/>\n          <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n        </form>\n      </React.Fragment>\n    )\n  }\n}\nexport default PrescriptionForm;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nclass PrescriptionEdit extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      patient: this.props.patientID,\n      brand_name:'',\n      medication_name:'',\n      directions: '',\n      quantity: '',\n      refills:'',\n      pharmacy_number:'',\n      rx:'',\n      prescriber:'',\n      take_as_needed: false,\n      hourly_frequency:'',\n      label_image:null,\n    }\n  this.handleChange = this.handleChange.bind(this);\n  this.handleUpload = this.handleUpload.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n}\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n}\nhandleUpload (event){\n  this.setState({[event.target.name]: event.target.files[0]});\n}\nasync componentDidMount() {\n  // fetch the prescription based on the id in the url\n  const response = await fetch(`/api/v1/user/patients/prescriptions/${this.props.match.params.id}/`).catch(this.handleError);\n  const data = await response.json().catch(this.handleError);\n  this.setState({...data});\n}\nasync handleSubmit(event){\n  event.preventDefault();\n  const id = this.props.match.params.id;\n  const csrftoken = Cookies.get('csrftoken');\n  const formData = new FormData();\n  const prescription = { ...this.state };\n  if(!(prescription.label_image instanceof File)) {\n    delete prescription.label_image;\n  }\n  const keys = Object.keys(prescription);\n  console.log(prescription)\n  keys.forEach(key => formData.append(key, prescription[key]));\n  // formData.append('patient', id);\n  const options = {\n      method: 'PATCH',\n      headers: {\n        'X-CSRFToken': csrftoken,\n      },\n      body: formData,\n  };\n  await fetch(`/api/v1/user/patients/prescriptions/${id}/`, options);\n  this.props.history.push(`/user/patients/${this.state.patient}`);\n};\nrender() {\n  return(\n      <React.Fragment>\n      <div className=\"col-lg-12 col-xs-12 top_bar\">\n      <p className=\"editform-label\">EDIT PRESCRIPTION</p>\n      </div>\n      <div className=\"row\">\n        <form className=\"col-lg-12 col-xs-12 med-form\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <label htmlFor='brand_name'className=\"brand\">Brand Name</label>\n            </div>\n            <div>\n            <input type=\"text\" id='brand_name' name=\"brand_name\" value={this.state.brand_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_name'className=\"med\">Medication Name</label>\n            </div>\n            <div>\n            <input type=\"text\" id='medication_name' name=\"medication_name\" value={this.state.medication_name} onChange={this.handleChange} />\n            </div>\n          <div className=\"form-group\">\n            <label htmlFor='directions'className=\"direct\">Directions</label>\n            </div>\n            <div>\n            <input type=\"text\" id='directions' name=\"directions\" value={this.state.directions} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='hourly_frequency'className=\"direct\">Hourly Frequency</label>\n            </div>\n            <div>\n            <input type=\"text\" id='hourly_frequency' name=\"hourly_frequency\" value={this.state.hourly_frequency} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='take_as_needed'className=\"take_as_needed\">Take As Needed</label>\n            <input type=\"checkbox\" className=\"take_as_needed\" id=\"take_as_needed\" name=\"take_as_needed\" value={this.state.take_as_needed} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='quantity'className=\"quantity\">Quantity</label>\n            </div>\n            <div>\n            <input type=\"text\" id='quantity' name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='refills'className=\"refill\">Refills</label>\n            </div>\n            <div>\n            <input type=\"text\" id='refills' name=\"refills\" value={this.state.refills} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='pharmacy_number'className=\"number\">Pharmacy Number</label>\n            </div>\n            <div>\n            <input type=\"text\" id='pharmacy_number' name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='rx'className=\"rx\">RX</label>\n            </div>\n            <div>\n            <input type=\"text\" id='rx' name=\"rx\" value={this.state.rx} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='prescriber'className=\"prescribe\">Prescriber</label>\n            </div>\n            <div>\n            <input type=\"text\" id='prescriber' name=\"prescriber\" value={this.state.prescriber} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label htmlFor='image'className=\"label_pic\">Label Image</label>\n            </div>\n            <div>\n            <input type=\"file\" name=\"label_image\" onChange={this.handleUpload}/>\n            <img src={this.state.upload} alt=\"\"/>\n          </div>\n          <div>\n          <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n          </div>\n        </form>\n        </div>\n        \n      </React.Fragment>\n    )\n  }\n}\nexport default PrescriptionEdit;\n","import React, { Component } from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport './index.css';\n\n\nclass PrescriptionDetail extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      brand_name: '',\n    }\n    // this.deleteMed = this.deleteMed.bind(this);\n    // this.editMed = this.editMed.bind(this);\n    this.fetchPrescriptionDetail = this.fetchPrescriptionDetail.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPrescriptionDetail();\n  }\n  async fetchPrescriptionDetail() {\n    const id = this.props.match.params.id;\n    const response = await fetch(`/api/v1/user/patients/prescriptions/${id}/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({...data});\n    console.log(data);\n  }\n\n  render() {\n    return(\n      <div>\n      <div className=\"detail-list col-lg-12 col-xs-12\">\n        <div className=\"brand\">{this.state.brand_name}</div>\n        <div className=\"med_name\">{this.state.medication_name}</div>\n        <div className=\"drections\">{this.state.directions}</div>\n        <div className=\"qnty\">{this.state.quantity}</div>\n        <div className=\"refill\">{this.state.refills}</div>\n        <div className=\"pharm_number\">{this.state.pharmacy_number}</div>\n        <div className=\"rxnum\">{this.state.rx}</div>\n        <div className=\"doc_prescriber\">{this.state.prescriber}</div>\n        <div className=\"as_need\">{this.state.take_as_needed}</div>\n        <div className=\"hour_frequent\">{this.state.hourly_frequency}</div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default PrescriptionDetail;\n","export default __webpack_public_path__ + \"static/media/family.0904f56b.jpg\";","export default __webpack_public_path__ + \"static/media/family3.f9fd829e.jpg\";","export default __webpack_public_path__ + \"static/media/family4.40376c81.jpg\";","import React, { Component } from 'react';\nimport './index.css';\n\n\n\n\nimport family from './../../images/family.jpg';\nimport family3   from './../../images/family3.jpg';\nimport family4 from './../../images/family4.jpg';\n\nclass About extends Component {\n\n\nrender() {\n\n  return(\n\n\n    <div id=\"about\" className=\"container-fluid\">\n    <div className=\"tanbox\">\n\n      <div className=\"undercard w-2\">\n      <img className=\"underphoto w-2\"src ={family3} />\n      </div>\n      <div className=\"middlecard w-2\">\n      <img className=\"middlephoto w-2\" src={family4} />\n      </div>\n      <div className=\"topcard w-2\">\n      <img className=\"topphoto w-2\" src={family} />\n      </div>\n\n\n\n\n\n    </div>\n    <div className=\"words d-flex flex-wrap w-2\">\n    <p className=\"wordparagraph\">Hi, I'm Josh Lanier and this is my app GLOW.  My dad is an Alzheimer's patient.  He currently\n    is getting in home care by my mom and contracted caregivers 24/7.  Glow (which stands for Generated Log Of Well-Being)\n    is an app designed from seeing the struggle of family members taking care of their loved ones.\n     From hired help not being detailed enough, to family care takers not having the tools needed for the\n     best care possible,  Glow is designed for simplicity, yet  high quality detailed effectiveness for\n     the caregiver. From detailed written documentation of scheduled medication, to alerts and notifications of scheduled medications.\n    Glow is designed to help equip and bring peace of mind to the everyday family caregiver.</p>\n    </div>\n      <h1 className=\"glowlogo d-none d-md-block\">GLOW</h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n  )\n};\n\n\n}\nexport default About;\n","import React, { Component } from 'react';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport './index.css';\nimport Cookies from 'js-cookie';\n\nimport PrivateRoute from './../PrivateRoute';\n\n// import Menu from './../Menu';\nimport Header from './../Header';\nimport Footer from './../Footer';\n\nimport Login from './../Login';\nimport Registration from './../Registration';\n\nimport Map from './../Map/MyGoogleMap';\n\nimport PatientForm from './../PatientForm';\nimport PatientList from './../PatientList';\nimport PatientDetail from './../PatientDetail';\n\nimport Caregivers from './../Caregivers';\n\nimport MedicationHistory from './../MedicationHistory';\nimport PrescriptionForm from './../PrescriptionForm';\nimport PrescriptionEdit from './../PrescriptionEdit';\nimport PrescriptionDetail from './../PrescriptionDetail';\n\nimport About from './../About';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: !!localStorage.getItem('user'),\n      patientList: [],\n\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.saveProfile = this.saveProfile.bind(this);\n\n  }\n\n  async handleLogout() {\n      const options = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n      };\n      const response = await fetch('/api/v1/rest-auth/logout/', options).catch(this.handleError);\n      const data = await response.json().catch(this.handleError);\n      if(data.detail === \"Successfully logged out.\") {\n        Cookies.remove('Authorization');\n        localStorage.removeItem('user');\n        this.setState({ isLoggedIn: false}, () => this.props.history.push('/'));\n      }\n    }\n    async handleLogin(e, obj) {\n    e.preventDefault();\n    const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(obj),\n    };\n    const response = await fetch('/api/v1/rest-auth/login/', options).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    if(data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      this.setState({ isLoggedIn: true }, () => this.props.history.push('/user/patients'));\n    }\n  }\n  async handleRegistration(e, obj) {\n    e.preventDefault();\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(obj),\n    };\n    const response = await fetch('/api/v1/rest-auth/registration/', options);\n    const data = await response.json().catch(this.handleError);\n    if(data.key) {\n      // https://scotch.io/@PratyushB/local-storage-vs-session-storage-vs-cookie\n      Cookies.set('Authorization', `Token ${data.key}`);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      this.setState({ isLoggedIn: true }, () => this.props.history.push('/user/patients'));\n      const profile = {phone_number: obj.phone_number}\n      this.saveProfile(profile);\n\n    }\n  }\n\n  async saveProfile(obj) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(obj),\n    };\n\n    const response = await fetch('/api/v1/accounts/profile_create/', options);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n  }\n  handleError(err) {\n    console.warn(err);\n  }\n  render() {\n    return (\n      <React.Fragment>\n      <Header isLoggedIn={this.state.isLoggedIn} handleLogout={ this.handleLogout } />\n\n      <div className=\"container\">\n\n      <Switch>\n\n          <Route path='/registration' render={(props) => <Registration {...props} isLoggedIn={this.state.isLoggedIn} handleRegistration={ this.handleRegistration } />} />\n          <Route path='/login' render={(props) => <Login {...props} isLoggedIn={this.state.isLoggedIn} handleLogin={ this.handleLogin } />} />\n\n          <PrivateRoute path='/prescription/:id' isLoggedIn={this.state.isLoggedIn} component={PrescriptionEdit} />\n          <PrivateRoute path='/user/patients/:id/prescriptions/add/' isLoggedIn={this.state.isLoggedIn} component={PrescriptionForm} />\n          <PrivateRoute path='/user/prescriptiondetail/:id'isLoggedIn={this.state.isLoggedIn} component={PrescriptionDetail} />\n\n          <PrivateRoute path='/user/map' isLoggedIn={this.state.isLoggedIn} component={Map} />\n\n          <PrivateRoute path='/user/patients/add' isLoggedIn={this.state.isLoggedIn} component={PatientForm} />\n          <PrivateRoute path='/user/patients/edit/:id/' isLoggedIn={this.state.isLoggedIn} component={PatientForm} />\n          <PrivateRoute path='/user/patients/:id' isLoggedIn={this.state.isLoggedIn} component={PatientDetail} />\n          <PrivateRoute path='/user/patients' isLoggedIn={this.state.isLoggedIn} component={PatientList} />\n          <PrivateRoute path='/user/medicationHistory/:id' isLoggedIn={this.state.isLoggedIn} component={MedicationHistory} />\n          <PrivateRoute path='/user/caregivers/:id'isLoggedIn={this.state.isLoggedIn} component={Caregivers} />\n\n          <Route path=\"/\" component={About} exact />\n        </Switch>\n      </div>\n      <Footer/>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}