{"version":3,"sources":["components/PrivateRoute/index.js","components/Header/index.js","components/Login/index.js","components/Registration/index.js","components/Map/Autocomplete.js","components/Map/Marker.js","components/Map/MyGoogleMap.js","components/PatientForm/index.js","components/PatientList/index.js","components/PatientDetail/index.js","components/MedicationHistory/index.js","components/PrescriptionForm/index.js","components/PrescriptionEdit/index.js","components/PrescriptionDetail/index.js","images/family.jpg","images/dad.jpg","components/About/index.js","images/family2.jpg","components/App/index.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","isLoggedIn","props","to","Header","className","Fragment","onClick","handleLogout","Login","state","username","password","handleInput","bind","event","this","setState","target","name","value","onSubmit","e","handleLogin","htmlFor","type","placeholder","id","onChange","required","Component","Registration","email","phone_number","password1","password2","handleRegistration","Wrapper","styled","div","AutoComplete","onPlaceChanged","map","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","searchInput","blur","clearSearchBox","mapApi","options","types","places","Autocomplete","addListener","bindTo","clearInstanceListeners","ref","onFocus","Marker","text","alt","defaultProps","main","PatientForm","first_name","last_name","address","city","zipcode","date_of_birth","weight","gender","food_allergies","medication_allergies","primary_doctor","primary_doctor_telephone_number","language","is_bed_patient","needs_walking_device","walking_devices","surgeries","image","preview","feet","inches","handleImage","handleCheckbox","handleSubmit","handleError","saveEdit","preventDefault","csrftoken","Cookies","get","patient","height","needs_walking_devices","label_image","formData","FormData","Object","keys","forEach","key","append","method","headers","body","fetch","catch","response","json","data","file","files","reader","FileReader","onloadend","result","readAsDataURL","checked","err","console","warn","history","push","isEditing","style","width","src","rows","disabled","PatientCard","Card","Img","variant","Body","Title","toUpperCase","PatientList","patientList","fetchPatientList","patients","Prescription","comments","datetime","displayModal","saveDose","handleChange","prescription_id","prescription","dose","JSON","stringify","log","medication_name","removePrescription","editPrescription","Button","Modal","show","onHide","closeButton","Form","Group","controlId","Label","Control","as","Footer","PatientDetail","fetchPatientDetail","prescriptions","index","indexOf","splice","File","findIndex","match","params","bed_patient","able_to_walk_alone","MedicationHistory","fetchMedicationHistory","item","PrescriptionForm","patientID","brand_name","directions","quantity","refills","pharmacy_number","rx","prescriber","take_as_needed","hourly_frequency","handleUpload","upload","PrescriptionEdit","PrescriptionDetail","fetchPrescriptionDetail","About","family","href","App","localStorage","getItem","saveProfile","detail","remove","removeItem","obj","set","setItem","user","profile","path","render","component","exact","withRouter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a44076fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nfunction PrivateRoute({ isLoggedIn, ...props }) {\n  return isLoggedIn\n    ? <Route { ...props } />\n    : <Redirect to='/login/'  />\n}\nexport default PrivateRoute;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nfunction Header(props){\n  return(\n    <header>\n      <nav className=\"navbar navbar-dark bg-dark mb-5\">\n          <ul className=\"navbar-nav flex-row\">\n            <li className=\"nav-item mr-2\"><NavLink className=\"navbar-brand\" to=\"/\">GLOW</NavLink></li>\n            {props.isLoggedIn\n              ?\n              <React.Fragment>\n                <li className=\"nav-item mr-2\"><NavLink className=\"nav-link\" to={`/user/patients`}>Patients</NavLink></li>\n                <li className=\"nav-item\"><NavLink className=\"nav-link\" to={`/user/patients/add`}>New Patient</NavLink></li>\n              </React.Fragment>\n              :\n              null\n            }\n          </ul>\n          <ul className=\"navbar-nav flex-row ml-auto\">\n          { props.isLoggedIn\n            ? (\n              <li className=\"nav-item\"><button className=\"btn nav-link\" onClick={props.handleLogout}>Logout</button></li>\n            ) : (\n              <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/login\">Login</NavLink></li>\n            )\n          }\n          </ul>\n      </nav>\n    </header>\n  );\n}\nexport default Header;\n","import React, {Component} from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n  render() {\n    if(this.props.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n    return(\n      <form onSubmit={(e) => this.props.handleLogin(e, this.state)}>\n        <div className=\"container\">\n          <h1>Login to an Existing Account</h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\"><b>Username</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Username\" name=\"username\" id=\"username\" value={this.state.username} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\"><b>Password</b></label>\n            <input type=\"password\" className=\"form-control\" placeholder=\"Enter Password\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"d-flex align-items-baseline\">\n            <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n            <p className=\"ml-auto\">Need an account? <NavLink to=\"/registration\">Register</NavLink></p>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\nexport default Login;\n","import React, {Component} from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nclass Registration extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      phone_number: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    // this.handleRegistration = this.handleRegistration.bind(this);\n  }\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n  // handleRegistration(event){\n  //   event.preventDefault();\n  //   this.props.handleRegistration(this.state);\n  // }\n  render() {\n    if(this.props.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n    return(\n      <form onSubmit={(e) => this.props.handleRegistration(e, this.state)}>\n        <div className=\"container\">\n          <h1>Create an Account</h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\"><b>Username</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Username\" name=\"username\" id=\"username\" value={this.state.username} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\"><b>Email</b></label>\n            <input type=\"email\" className=\"form-control\" placeholder=\"Enter Email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"phone-number\"><b>Phone number</b></label>\n            <input type=\"tel\" className=\"form-control\" placeholder=\"Enter phone number\" name=\"phone_number\" id=\"phone-number\" value={this.state.phone_number} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password1\"><b>Password</b></label>\n            <input type=\"password\" className=\"form-control\" placeholder=\"Enter Password\" name=\"password1\" id=\"password1\" value={this.state.password1} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password2\"><b>Confirm Password</b></label>\n            <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" name=\"password2\" id=\"password2\" value={this.state.password2} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"d-flex align-items-baseline\">\n            <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n            <p className=\"ml-auto\">Already have an account? <NavLink to=\"/login\">Login</NavLink></p>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\nexport default Registration;\n","// Autocomplete.js\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n  text-align:center;\n`;\n\nclass AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.clearSearchBox = this.clearSearchBox.bind(this);\n    }\n\n    componentDidMount({ map, mapApi } = this.props) {\n        const options = {\n            // restrict your search to a specific type of result\n            types: ['address'],\n            // restrict your search to a specific country, or an array of countries\n            // componentRestrictions: { country: ['gb', 'us'] },\n        };\n        this.autoComplete = new mapApi.places.Autocomplete(\n            this.searchInput,\n            options,\n        );\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\n        this.autoComplete.bindTo('bounds', map);\n    }\n\n    componentWillUnmount({ mapApi } = this.props) {\n        mapApi.event.clearInstanceListeners(this.searchInput);\n    }\n\n    onPlaceChanged = ({ map, addplace } = this.props) => {\n        const place = this.autoComplete.getPlace();\n\n        if (!place.geometry) return;\n        if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n        } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n        }\n\n        addplace(place);\n        this.searchInput.blur();\n    };\n\n    clearSearchBox() {\n        this.searchInput.value = '';\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <input\n                    className=\"search-input\"\n                    ref={(ref) => {\n                        this.searchInput = ref;\n                    }}\n                    type=\"text\"\n                    onFocus={this.clearSearchBox}\n                    placeholder=\"Enter a location\"\n                />\n            </Wrapper>\n        );\n    }\n}\n\nexport default AutoComplete;\n","// import GoogleMapReact from 'google-map-react'\n// Marker.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;\n","// MyGoogleMaps.js\nimport React, { Component } from 'react';\n\nimport GoogleMapReact from 'google-map-react';\nimport './map.css';\nimport styled from 'styled-components';\n\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 500px;\n`;\n\nclass MyGoogleMap extends Component {\n\n\n    state = {\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        places: [],\n        center: [],\n        zoom: 9,\n        address: '',\n        draggable: true,\n        lat: null,\n        lng: null\n    };\n\n    componentWillMount() {\n        this.setCurrentLocation();\n    }\n\n\n    onMarkerInteraction = (childKey, childProps, mouse) => {\n        this.setState({\n            draggable: false,\n            lat: mouse.lat,\n            lng: mouse.lng\n        });\n    }\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n        this.setState({ draggable: true });\n        this._generateAddress();\n    }\n\n    _onChange = ({ center, zoom }) => {\n        this.setState({\n            center: center,\n            zoom: zoom,\n        });\n\n    }\n\n    _onClick = (value) => {\n        this.setState({\n            lat: value.lat,\n            lng: value.lng\n        });\n    }\n\n    apiHasLoaded = (map, maps) => {\n        this.setState({\n            mapApiLoaded: true,\n            mapInstance: map,\n            mapApi: maps,\n        });\n\n        this._generateAddress();\n    };\n\n    addPlace = (place) => {\n        this.setState({\n            places: [place],\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n        });\n        this._generateAddress()\n    };\n\n    _generateAddress() {\n        const {\n            mapApi\n        } = this.state;\n\n        const geocoder = new mapApi.Geocoder;\n\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n            console.log(results);\n            console.log(status);\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                    this.setState({ address: results[0].formatted_address });\n                } else {\n                    window.alert('No results found');\n                }\n            } else {\n                window.alert('Geocoder failed due to: ' + status);\n            }\n\n        });\n    }\n\n    // Get Current Location Coordinates\n    setCurrentLocation() {\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.setState({\n                    center: [position.coords.latitude, position.coords.longitude],\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                });\n            });\n        }\n    }\n\n    render() {\n        const {\n            places, mapApiLoaded, mapInstance, mapApi,\n        } = this.state;\n\n\n        return (\n            <Wrapper>\n            <div className=\"map_bar_top col-lg-12 col-xs-12 \">\n            <p className=\"map-label\">MAP</p>\n            </div>\n                {mapApiLoaded && (\n                    <div>\n                        <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n                    </div>\n                )}\n                <GoogleMapReact\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    draggable={this.state.draggable}\n                    onChange={this._onChange}\n                    onChildMouseDown={this.onMarkerInteraction}\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\n                    onChildMouseMove={this.onMarkerInteraction}\n                    onChildClick={() => console.log('child click')}\n                    onClick={this._onClick}\n                    bootstrapURLKeys={{\n                        key: process.env.REACT_APP_GOOGLE_PLACES_API_KEY,\n                        libraries: ['places', 'geometry'],\n                    }}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n                >\n\n\n                    <Marker\n                        text={this.state.address}\n                        lat={this.state.lat}\n                        lng={this.state.lng}\n                    />\n\n\n                </GoogleMapReact>\n\n                <div className=\"bottom\">\n                <div className=\"info-wrapper\">\n                    <div className=\"map-details\">Latitude: <span>{this.state.lat}</span>, Longitude: <span>{this.state.lng}</span></div>\n                    <div className=\"map-details\">Zoom: <span>{this.state.zoom}</span></div>\n                    <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\n                </div>\n                <div>\n                <a className=\"home-button\" href=\"/\">HOME MENU</a>\n                </div>\n                </div>\n\n                <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n\n                </div>\n            </Wrapper >\n        );\n    }\n}\n\nexport default MyGoogleMap;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nclass PatientForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      first_name: '',\n      last_name:'',\n      address:'',\n      city: '',\n      state: '',\n      zipcode: '',\n      date_of_birth: '',\n      weight: '',\n      gender: '',\n      food_allergies:'',\n      medication_allergies:'',\n      primary_doctor:'',\n      primary_doctor_telephone_number:'',\n      language:'',\n      is_bed_patient: false,\n      needs_walking_device: false,\n      walking_devices: '',\n      surgeries:'',\n      image: null,\n      preview: '',\n      feet: \"Select\",\n      inches: \"Select\",\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleCheckbox = this.handleCheckbox.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.saveEdit = this.saveEdit.bind(this);\n  }\n  async saveEdit(event) {\n    event.preventDefault();\n    const csrftoken = Cookies.get('csrftoken');\n    // shallow copy of state\n    const patient = {...this.state};\n    patient.height = `${this.state.feet}' ${this.state.inches}\"`;\n    // remove walking device if one is not selected\n    if(!patient.needs_walking_device) {\n      delete patient.walking_devices\n      delete patient.needs_walking_devices\n    }\n    if(typeof(patient.image) === 'string' ) {\n      delete patient.image;\n    }\n    if(!patient.is_bed_patient) {\n      delete patient.is_bed_patient\n    }\n    if(!patient.food_allergies) {\n      delete patient.food_allergies\n    }\n    if(!patient.medication_allergies) {\n      delete patient.medication_allergies\n    }\n    if(!patient.surgeries) {\n      delete patient.surgeries\n    }\n    // remove image if one is not selected\n    if(!patient.image) {\n      delete patient.label_image;\n    }\n    delete patient.feet;\n    delete patient.inches;\n    // console.log(patient.height);\n    const formData = new FormData();\n    const keys = Object.keys(patient);\n    keys.forEach(key => formData.append(key, this.state[key]));\n    const options = {\n        method: 'PATCH',\n        headers: {\n          'X-CSRFToken': csrftoken,\n        },\n        body: formData,\n    };\n    const response = await fetch(`/api/v1/user/patients/${patient.id}/`, options).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.props.saveEdit(data);\n  }\n  handleImage(event) {\n    // The selected files' are returned by the element's HTMLInputElement.files property — this returns a FileList object, which contains a list of File objects\n    let file = event.target.files[0];\n    // we'll use this value when we save the image (see _saveImage)\n    this.setState({\n      image: file\n    });\n    // The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.\n    let reader = new FileReader();\n    // A handler for the loadend event. This event is triggered each time the reading operation is completed (either in success or failure).\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result\n      });\n    }\n    // Starts reading the contents of the specified Blob, once finished, the result attribute contains a data: URL representing the file's data.\n    reader.readAsDataURL(file);\n  }\n  handleInput (event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n  handleCheckbox(event) {\n    this.setState({[event.target.name]: event.target.checked});\n  }\n  handleError(err) {\n    console.warn(err);\n  }\n  componentDidMount() {\n    if(this.props.id) {\n      this.setState({...this.props});\n    }\n  }\n  async handleSubmit(event){\n    event.preventDefault();\n    const csrftoken = Cookies.get('csrftoken');\n    // shallow copy of state\n    const patient = {...this.state};\n    patient.height = `${this.state.feet}' ${this.state.inches}\"`;\n    // remove walking device if one is not selected\n    if(!patient.needs_walking_device) {\n      delete patient.walking_devices\n      delete patient.needs_walking_devices\n    }\n    if(!patient.is_bed_patient) {\n      delete patient.is_bed_patient\n    }\n    if(!patient.food_allergies) {\n      delete patient.food_allergies\n    }\n    if(!patient.medication_allergies) {\n      delete patient.medication_allergies\n    }\n    if(!patient.surgeries) {\n      delete patient.surgeries\n    }\n    // remove image if one is not selected\n    if(!patient.image) {\n      delete patient.label_image;\n    }\n    delete patient.feet;\n    delete patient.inches;\n    // console.log(patient.height);\n    const formData = new FormData();\n    const keys = Object.keys(patient);\n    keys.forEach(key => formData.append(key, this.state[key]));\n    const options = {\n        method: 'POST',\n        headers: {\n          'X-CSRFToken': csrftoken,\n        },\n        body: formData,\n    };\n    const response = await fetch('/api/v1/user/patients/', options).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.props.history.push(`/user/patients/${data.id}/`);\n};\nrender() {\n    return (\n      <React.Fragment>\n        {\n          !this.props.isEditing\n        ?\n          <h2 className=\"list-label\">NEW PATIENT FORM</h2>\n        :\n          null}\n        <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\" style={{height: \"200px\", width: \"200px\"}}>\n          <label htmlFor=\"image\"><b>Image</b></label>\n          <input type=\"file\" className=\"form-control\" placeholder=\"Upload image\" name=\"image\" id=\"image\" onChange={this.handleImage} required/>\n          {this.state.image ? (\n          <img src={this.state.preview} alt='preview' style={{width: \"80%\"}}/>\n        ) : (\n          null\n        )}\n        </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"first-name\"><b>First name</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter first name\" name=\"first_name\" id=\"first-name\" value={this.state.first_name} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"last-name\"><b>Last name</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter last name\" name=\"last_name\" id=\"last-name\" value={this.state.last_name} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label><b>Address</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter street address\" name=\"address\" id=\"adress\" value={this.state.address} onChange={this.handleInput} required/>\n            <br/>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter city\" name=\"city\" id=\"city\" value={this.state.city} onChange={this.handleInput} required/>\n            <br/>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter state\" name=\"state\" id=\"state\" value={this.state.state} onChange={this.handleInput} required/>\n            <br/>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter zipcode\" name=\"zipcode\" id=\"zipcode\" value={this.state.zipcode} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"date-of-birth\"><b>Birthday</b></label>\n            <input type=\"date\" className=\"form-control\" placeholder=\"Enter birthday\" name=\"date_of_birth\" id=\"date-of-birth\" value={this.state.date_of_birth} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"weight\"><b>Weight</b></label>\n            <input type=\"number\" className=\"form-control\" placeholder=\"Enter weight\" name=\"weight\" id=\"weight\" value={this.state.weight} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label><b>Height</b></label>\n            <select className=\"form-control\" onChange={this.handleInput} value={this.state.feet} name=\"feet\">\n              <option value=\"Select\">Feet</option>\n              <option value=\"09\">9</option>\n              <option value=\"08\">8</option>\n              <option value=\"07\">7</option>\n              <option value=\"06\">6</option>\n              <option value=\"05\">5</option>\n              <option value=\"04\">4</option>\n              <option value=\"03\">3</option>\n              <option value=\"02\">2</option>\n              <option value=\"01\">1</option>\n            </select>\n            <br/>\n            <select className=\"form-control\" onChange={this.handleInput} value={this.state.inches} name=\"inches\">\n              <option value=\"Select\">Inches</option>\n              <option value=\"11\">11</option>\n              <option value=\"10\">10</option>\n              <option value=\"09\">9</option>\n              <option value=\"08\">8</option>\n              <option value=\"07\">7</option>\n              <option value=\"06\">6</option>\n              <option value=\"05\">5</option>\n              <option value=\"04\">4</option>\n              <option value=\"03\">3</option>\n              <option value=\"02\">2</option>\n              <option value=\"01\">1</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label><b>Gender</b></label>\n            <select className=\"form-control\" onChange={this.handleInput} value={this.state.gender} name=\"gender\">\n              <option value=\"Select\">Select</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"food-allergies\"><b>Food allergies</b></label>\n            <textarea className=\"form-control\" rows=\"3\" placeholder=\"Describe food allergies\" name=\"food_allergies\" id=\"food-allergies\" value={this.state.food_allergies} onChange={this.handleInput}/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"medication-allergies\"><b>Medication allergies</b></label>\n            <textarea className=\"form-control\" rows=\"3\" placeholder=\"Describe medication allergies\" name=\"medication_allergies\" id=\"medication-allergies\" value={this.state.medication_allergies} onChange={this.handleInput}/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"primary-doctor\"><b>Primary doctor</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter primary doctor's name\" name=\"primary_doctor\" id=\"primary-doctor\" value={this.state.primary_doctor} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"primary-doctor-telephone-number\"><b>Primary doctor's telephone number</b></label>\n            <input type=\"tel\" className=\"form-control\" placeholder=\"Enter primary doctor's name\" name=\"primary_doctor_telephone_number\" id=\"primary-doctor-telephone_number\" value={this.state.primary_doctor_telephone_number} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"language\"><b>Primary language</b></label>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter patient's primary language\" name=\"language\" id=\"language\" value={this.state.language} onChange={this.handleInput} required/>\n          </div>\n          <div className=\"form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" name=\"is_bed_patient\" id=\"is-bed-patient\" checked={this.state.is_bed_patient} onChange={this.handleCheckbox}/>\n            <label className=\"form-check-label\" htmlFor=\"is-bed-patient\"><b>Bed patient</b></label>\n          </div>\n          <br/>\n          <div className=\"form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" name=\"needs_walking_device\" id=\"needs-walking-device\" checked={this.state.needs_walking_device} onChange={this.handleCheckbox}/>\n            <label className=\"form-check-label\" htmlFor=\"needs-walking-device\"><b>Needs walking assitance</b></label>\n          </div>\n          <br/>\n          <div className=\"form-group\">\n            <label htmlFor=\"walking-devices\"><b>Walking devices</b></label>\n            <textarea className=\"form-control\" rows=\"3\" placeholder=\"List walking devices\" name=\"walking_devices\" id=\"walking-devices\" value={this.state.walking_devices} onChange={this.handleInput} disabled={!this.state.needs_walking_device} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"surgeries\"><b>Surgeries</b></label>\n            <textarea className=\"form-control\" rows=\"8\" placeholder=\"Describe surgery history\" name=\"surgeries\" id=\"surgeries\" value={this.state.surgeries} onChange={this.handleInput}/>\n          </div>\n          {\n            this.props.isEditing\n          ?\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveEdit}>Save Changes</button>\n          :\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          }\n        </form>\n      </React.Fragment>\n   )\n }\n}\nexport default PatientForm;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport './index.css';\nimport {Link} from 'react-router-dom';\nclass PatientCard extends Component {\n  render() {\n    const patient = this.props.patient;\n    return(\n      <Link to={`/user/patients/${patient.id}`}>\n        <Card>\n          <Card.Img variant=\"top\" src={patient.image}/>\n          <Card.Body>\n            <Card.Title>{`${patient.first_name.toUpperCase()}  ${patient.last_name.toUpperCase()}`}</Card.Title>\n          </Card.Body>\n        </Card>\n      </Link>\n    )\n  }\n}\nclass PatientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientList: [],\n    }\n    this.fetchPatientList = this.fetchPatientList.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPatientList();\n  }\n  async fetchPatientList() {\n    const response = await fetch('/api/v1/user/patients/').catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({patientList: data});\n  }\n  render() {\n    // console.log(this.props.patientList)\n    const patients = this.state.patientList.map(patient => <PatientCard key={patient.id} patient={patient}/>);\n    return(\n      <div id=\"patient-list\">\n      <div className=\"top_bar col-lg-12 col-xs-12 \">\n      <p className=\"list-label\">PATIENT LIST</p>\n\n      </div>\n\n        {patients}\n        <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n        </div>\n      </div>\n    )\n  }\n}\nexport default PatientList;\n","import React, { Component } from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport './index.css';\n\n// // import Card from 'react-bootstrap/Card';\n// class Prescription extends Component {       //this is displaying patient meds on display page\n//   constructor(props) {\n//     super(props);\n//\n//     this.state = {\n//       id: '',\n//       brand_name:'',\n//       medication_name: '',\n//       directions:'',\n//       quantity:'',\n//       prescriber: '',\n//       rx: '',\n//       pharmacy_number:'',\n//       isEditing: false,\n//     }\n//\n//     this.handleInput = this.handleInput.bind(this);\n//\n//   }\n//\n//   handleInput(e) {\n//     this.setState({[e.target.name]: e.target.value});\n//   }\n//\n//   componentDidMount() {\n//     console.log(this.props.prescription)\n//     this.setState({...this.props.prescription});\n//   }\n//\n//\n//\n//   render() {\n//     // const prescription = this.props.prescription;\n//     return(\n//        <div className=\"med-display\">\n//\n//         <div className='row'>\n//         <div className='col-lg-3 col-xs-12'>\n//         <div className=\"detail-display\">{this.state.brand_name}</div>\n//         {this.state.isEditing\n//           ?\n//           <React.Fragment>\n//           <label htmlFor=\"brand_name\">Brand Name</label>\n//           <input type='text' id=\"brand_name\" name=\"brand_name\" value={this.state.brand_name} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"medication_name\">Mecication Name</label>\n//           <input type='text' id=\"medication_name\" name=\"medication_name\" value={this.state.medication_name} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"directions\">Directions</label>\n//           <input type='text' id=\"directions\" name=\"directions\" value={this.state.directions} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"quantity\">Quantity</label>\n//           <input type='text' id=\"quantity\" name=\"quantity\" value={this.state.quantity} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"medication_name\">Prescriber</label>\n//           <input type='text' id=\"prescriber\" name=\"prescriber\" value={this.state.prescriber} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"medication_name\">RX</label>\n//           <input type='text' id=\"rx\" name=\"rx\" value={this.state.rx} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"medication_name\">Pharmacy_number Name</label>\n//           <input type='text' id=\"pharmacy_number\" name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleInput}/>\n//\n//           <button type='button' onClick={()=> {this.setState({isEditing: false}); this.props.editMed(this.state)}}>Save</button>\n//           </React.Fragment>\n//\n//           :\n//           <React.Fragment>\n//             <div>{this.state.medication_name}</div>\n//             <div>{this.state.directions}</div>\n//             <div>{this.state.quantity}</div>\n//             <div>{this.state.prescriber}</div>\n//             <div>{this.state.rx}</div>\n//             <div>{this.state.pharmacy_number}</div>\n//             <button type='button' onClick={() => this.setState({isEditing: true})}>Edit</button>\n//             <button type='button' onClick={() => this.props.deleteMed(this.props.prescription)}>Delete</button>\n//           </React.Fragment>\n//         }\n//         </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\nclass Prescription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: '',\n      datetime: '',\n      // prescriptions: [],\n      displayModal: false,\n    }\n    this.saveDose = this.saveDose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n  handleError(err) {\n    console.warn(err);\n  }\n  componentDidMount(){\n    // this.removePrescription();\n  }\n  async saveDose() {\n    const prescription_id = this.props.prescription.id\n    const dose = {\n      comments: this.state.comments,\n      datetime: this.state.datetime,\n      prescription: prescription_id,\n    }\n    const csrftoken = Cookies.get('csrftoken');\n    const options = {\n        method: 'POST',\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(dose),\n    };\n    const response = await fetch(`/api/v1/user/patients/${prescription_id}/doses/`, options);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n    // that the data object that was returned and fire off a request to your twilio url (tied to a view)\n    // the twilio url/view needs to fire off the text message\n\n    this.setState({displayModal: false})\n  }\n\n\n\n  render() {\n    return(\n      <div>\n        <div className=\"medicine_name\">{this.props.prescription.medication_name}</div>\n        {/*<Link className=\"nav-link\" to={}>Edit</Link>*/}\n        {/*<button className=\"btn btn-link\" >Remove</button>*/}\n        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.removePrescription(this.props.prescription)}>Delete Prescription</button>\n        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.editPrescription(this.props.prescription)}>Edit Prescription</button>\n        <Button variant=\"primary\" onClick={() => this.setState({displayModal: true})}>Give Medication</Button>\n        <Modal show={this.state.displayModal} onHide={() => this.setState({displayModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>{this.props.prescription.medication_name.toUpperCase()}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Date Time</Form.Label>\n                <Form.Control type=\"datetime-local\" placeholder=\"Select date\" name=\"datetime\" value={this.state.datetime} onChange={this.handleChange}/>\n              </Form.Group>\n              <Form.Group controlId=\"comments\">\n                <Form.Label>Comments</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} name=\"comments\" value={this.state.comments} onChange={this.handleChange}/>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.setState({displayModal: false})}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.saveDose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass PrescriptionDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    // this.deleteMed = this.deleteMed.bind(this);\n    // this.editMed = this.editMed.bind(this);\n    this.fetchPrescriptionDetail = this.fetchPrescriptionDetail.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPrescriptionDetail();\n  }\n  async fetchPrescriptionDetail() {\n    const id = this.props.match.params.id;\n    const response = await fetch(`/api/v1/user/patients/${id}/prescriptions/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({...data});\n    console.log(data);\n  }\n\n\n  render() {\n    return(\n\n      <div>\n        <div className=\"brand\">Brand Name - {this.state.brand_name}</div>\n        <div className=\"med_name\">{this.state.medication_name}</div>\n        <div className=\"drections\">{this.state.directions}</div>\n        <div className=\"qnty\">{this.state.quantity}</div>\n        <div className=\"refill\">{this.state.refills}</div>\n        <div className=\"pharm_number\">{this.state.pharmacy_number}</div>\n        <div className=\"rxnum\">{this.state.rx}</div>\n        <div className=\"doc_prescriber\">{this.state.prescriber}</div>\n        <div className=\"as_need\">{this.state.take_as_needed}</div>\n        <div className=\"hour_frequent\">{this.state.hourly_frequency}</div>\n      </div>\n    )\n  }\n}\n\n\n\n\nclass PatientDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    // this.deleteMed = this.deleteMed.bind(this);\n    // this.editMed = this.editMed.bind(this);\n    this.fetchPatientDetail = this.fetchPatientDetail.bind(this);\n    this.removePrescription = this.removePrescription.bind(this);\n    this.editPrescription = this.editPrescription.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPatientDetail();\n  }\n\n\n//delete method......\n  async removePrescription(prescription){\n    const options = {\n          method: 'DELETE',\n          headers:{\n            'X-CSRFToken': Cookies.get('csrftoken'),\n            'Content-Type': 'application/json'\n          },\n        }\n        const handleError = (err) => console.warn(err);\n        const response = await fetch(`/api/v1/user/patients/prescriptions/${prescription.id}/`, options)\n        const data = await response.json().catch(handleError);\n        // console.log('data', data);\n        const prescriptions = [...this.state.prescriptions];\n        const index = prescriptions.indexOf(prescription);\n        prescriptions.splice(index, 1);\n        // prescriptions don't live on this component's state\n        this.setState({prescriptions});\n\n\n      }\n\n      //edit method....\n      async editPrescription(prescription) {\n          console.log(prescription);\n          // event.preventDefault();\n          // console.log(!(prescription.label_image instanceof File));\n\n          if(!(prescription.label_image instanceof File)) {\n            delete prescription.label_image;\n          }\n\n\n          const id = prescription.id;\n          let formData = new FormData();\n          const keys = Object.keys(prescription);\n          keys.forEach(key => formData.append(key, prescription[key]));\n\n          const options = {\n            method: 'PUT',\n            headers: {\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n                body:formData,\n          }\n          const handleError = (err) => console.warn(err);\n          const response = await fetch(`/api/v1/user/patients/prescription/${id}/`, options);\n          const data = await response.json().catch(handleError)\n\n          const prescriptions = [...this.state.prescriptions];\n          const index = prescriptions.findIndex(prescription => prescription.id === id);\n          prescriptions[index] = data;\n          this.setState({prescriptions});\n        }\n\n  async fetchPatientDetail() {\n    const id = this.props.match.params.id;\n    const response = await fetch(`/api/v1/user/patients/${id}/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({...data});\n    console.log(data);\n  }\n  // async deleteMed(prescription){\n  //\n  //     const options = {\n  //       method: 'DELETE',\n  //       headers:{\n  //         'X-CSRFToken': Cookies.get('csrftoken'),\n  //         'Content-Type': 'application/json'\n  //       },\n  //     }\n  //     const handleError = (err) => console.warn(err);\n  //\n  //     const response = await fetch(`/api/v1/user/prescription/${prescription.id}/`, options)\n  //     const data = await response.json().catch(handleError);\n  //     console.log('data', data);\n  //     const prescriptions = [...this.state.prescriptions];\n  //     const index = prescriptions.indexOf(prescription);\n  //     prescriptions.splice(index, 1);\n  //     this.setState({prescriptions});\n  //\n  //   }\n  //\n  //   async editMed(prescription) {\n  //     console.log(prescription);\n  //     // event.preventDefault();\n  //     // console.log(!(prescription.label_image instanceof File));\n  //\n  //     if(!(prescription.label_image instanceof File)) {\n  //       delete prescription.label_image;\n  //     }\n  //\n  //\n  //     const id = prescription.id;\n  //     let formData = new FormData();\n  //     const keys = Object.keys(prescription);\n  //     keys.forEach(key => formData.append(key, prescription[key]));\n  //\n  //     const options = {\n  //       method: 'PUT',\n  //       headers: {\n  //         'X-CSRFToken': Cookies.get('csrftoken'),\n  //       },\n  //           body:formData,\n  //     }\n  //     const handleError = (err) => console.warn(err);\n  //     const response = await fetch(`/api/v1/user/patients/prescription/${id}/`, options);\n  //     const data = await response.json().catch(handleError)\n  //\n  //     const prescriptions = [...this.state.prescriptions];\n  //     const index = prescriptions.findIndex(prescription => prescription.id === id);\n  //     prescriptions[index] = data;\n  //     this.setState({prescriptions});\n  //   }\n  render() {\n    const prescriptionDetail = this.props.match.params;\n    const id = this.props.match.params.id;\n    console.log(this.state.prescriptions)\n    const prescriptions = this.state.prescriptions?.map(prescription => <Prescription key={prescription.id} prescription={prescription} removePrescription={this.removePrescription} editPrescription={this.editPrescription}/>);\n    return(\n      <div>\n     <div className=\"top_bar col-lg-12 col-xs-12 \">\n     <p className=\"pDtail\">PATIENT DETAILS</p>\n\n     </div>\n\n\n      <div className=\"boxs col-lg-12 col-xs-12\">\n        <div className=\"p_detail\">\n\n          <div className=\"fname\">First Name - {this.state.first_name}</div>\n          <div className=\"lname\">Last Name - {this.state.last_name}</div>\n          <div className=\"date_of_birth\">DOB - {this.state.date_of_birth}</div>\n          <div className=\"height\">Height - {this.state.height}</div>\n          <div className=\"weight\">Weight - {this.state.weight}</div>\n          <div className=\"address\">Address - {this.state.address}</div>\n          <div className=\"gender\">Gender - {this.state.gender}</div>\n          <div className=\"medsallergy\">Medical Allergy - {this.state.medication_allergies}</div>\n          <div className=\"foodsallergy\">Food Allergy - {this.state.food_allergies}</div>\n          <div className=\"primdoct\">Primary Doctor - {this.state.primary_doctor}</div>\n          <div className=\"doctele\">Primary Dr Phone Number - {this.state.primary_doctor_telephone_number}</div>\n          <div className=\"language\">Language - {this.state.language}</div>\n          <div className=\"bedpat\">{this.state.bed_patient}</div>\n          <div className=\"walkdevice\">Walking Device - {this.state.walking_devices}</div>\n          <div className=\"walkalone\">{this.state.able_to_walk_alone}</div>\n          <div className=\"surgery\">History Of Surgery - {this.state.surgeries}</div>\n\n        </div>\n        <div className=\"meddisplay\">\n          <div className=\"medname\">\n            {prescriptions}\n\n          </div>\n\n          <Link className=\"newmed nav-link\" to={`/user/patients/${id}/prescriptions/add/`}>Add New Prescription</Link>\n          <Link className=\"med_history nav-link\" to={`/user/medicationHistory/${id}/`}>View Schedule History</Link>\n        </div>\n\n\n      </div>\n      <Link className=\"return_link\" to={'/user/patients/'}>Return To Patient List</Link>\n\n        <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default PatientDetail;\n","import React, { Component } from 'react';\nimport './index.css';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\n\n\nclass MedicationHistory extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        data:[]\n      }\n\n       this.fetchMedicationHistory = this.fetchMedicationHistory.bind(this)\n     }\n     componentDidMount() {\n       this.fetchMedicationHistory();\n       console.log(this.state)\n     }\n     async fetchMedicationHistory() {\n       console.log(this.props.match.params);\n       // const prescription_id = this.props.prescription.id\n       const id = this.props.match.params.id;\n       const response = await fetch(`/api/v1/user/patients/${id}/prescriptionHistory/`).catch(this.handleError);\n       const data = await response.json().catch(this.handleError);\n       this.setState({data});\n       console.log('medicationHistroy',this.state);\n     }\n     render(){\n       let text = this.state.data.map(item =>{\n         return <div className=\"medhistory\"><div className=\"history_box\"><div>Prescription ID - {item.id}</div><div>Comments - {item.comments}</div> <div>Date/Time - {item.datetime}</div></div></div>;\n\n\n       })\n       return(\n         <div>\n         <div className=\"top_bar\">\n         <p className=\"pDtail\">Medication History</p>\n         </div>\n         <div>\n\n         </div>\n         <div className= 'col-lg-12 col-xs-12 d-block w-100'>{text}</div>\n         <div className=\"bottom_bar \">\n         <Link className=\"pdtail_link\" to={`/user/patients/${this.props.match.params.id}/`}>Return To Patient Detail</Link>\n         </div>\n\n         </div>\n       )\n     }\n  }\n\nexport default MedicationHistory;\n","import React, { Component } from 'react';\nimport './index.css';\nimport Cookies from 'js-cookie';\nclass PrescriptionForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      patient: this.props.patientID,\n      brand_name:'',\n      medication_name:'',\n      directions: '',\n      quantity: '',\n      refills:'',\n      pharmacy_number:'',\n      rx:'',\n      prescriber:'',\n      take_as_needed: false,\n      hourly_frequency:'',\n      label_image:null,\n    }\n  this.handleChange = this.handleChange.bind(this);\n  this.handleUpload = this.handleUpload.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n}\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n}\nhandleUpload (event){\n  this.setState({[event.target.name]: event.target.files[0]});\n}\nasync handleSubmit(event){\n  event.preventDefault();\n  const id = this.props.match.params.id;\n  const csrftoken = Cookies.get('csrftoken');\n  const formData = new FormData();\n  const prescription = { ...this.state };\n  if(!prescription.label_image) {\n    delete prescription.label_image;\n  }\n  const keys = Object.keys(prescription);\n  keys.forEach(key => formData.append(key, prescription[key]));\n  formData.append('patient', id);\n  const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': csrftoken,\n      },\n      body: formData,\n  };\n  await fetch(`/api/v1/user/patients/${id}/prescriptions/`, options);\n  this.props.history.push(`/user/patient/${id}/prescriptions/`);\n};\nrender() {\n  return(\n      <React.Fragment>\n      <div className=\"col-lg-12 col-xs-12 top_bar\">\n      <p className=\"medform-label\">ADD PRESCRIPTION</p>\n\n      </div>\n      <div className=\"row\">\n        <form className=\"col-lg-12 col-xs-12 med-form\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <label htmlFor='brand_name'className=\"brand\">Brand Name</label>\n            </div>\n            <div>\n            <input type=\"text\" id='brand_name' name=\"brand_name\" value={this.state.brand_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_name'className=\"med\">Medication Name</label>\n            </div>\n            <div>\n            <input type=\"text\" id='medication_name' name=\"medication_name\" value={this.state.medication_name} onChange={this.handleChange} />\n            </div>\n          <div className=\"form-group\">\n            <label htmlFor='directions'className=\"direct\">Directions</label>\n            </div>\n            <div>\n            <input type=\"text\" id='directions' name=\"directions\" value={this.state.directions} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='hourly_frequency'className=\"direct\">Hourly Frequency</label>\n            </div>\n            <div>\n            <input type=\"text\" id='hourly_frequency' name=\"hourly_frequency\" value={this.state.hourly_frequency} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='take_as_needed'className=\"take_as_needed\">Take As Needed</label>\n            <input type=\"checkbox\" className=\"take_as_needed\" id=\"take_as_needed\" name=\"take_as_needed\" value={this.state.take_as_needed} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='quantity'className=\"quantity\">Quantity</label>\n            </div>\n            <div>\n            <input type=\"text\" id='quantity' name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='refills'className=\"refill\">Refills</label>\n            </div>\n            <div>\n            <input type=\"text\" id='refills' name=\"refills\" value={this.state.refills} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='pharmacy_number'className=\"number\">Pharmacy Number</label>\n            </div>\n            <div>\n            <input type=\"text\" id='pharmacy_number' name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='rx'className=\"rx\">RX</label>\n            </div>\n            <div>\n            <input type=\"text\" id='rx' name=\"rx\" value={this.state.rx} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='prescriber'className=\"prescribe\">Prescriber</label>\n            </div>\n            <div>\n            <input type=\"text\" id='prescriber' name=\"prescriber\" value={this.state.prescriber} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label htmlFor='image'className=\"label_pic\">Label Image</label>\n            </div>\n            <div>\n            <input type=\"file\" name=\"label_image\" onChange={this.handleUpload}/>\n            <img src={this.state.upload} alt=\"\"/>\n          </div>\n          <div>\n          <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n          </div>\n        </form>\n        </div>\n        <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n\n\n        </div>\n      </React.Fragment>\n    )\n  }\n}\nexport default PrescriptionForm;\n","import React, { Component } from 'react';\nimport './index.css';\n\nimport Cookies from 'js-cookie';\nclass PrescriptionEdit extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      patient: this.props.patientID,\n      brand_name:'',\n      medication_name:'',\n      directions: '',\n      quantity: '',\n      refills:'',\n      pharmacy_number:'',\n      rx:'',\n      prescriber:'',\n      take_as_needed: false,\n      hourly_frequency:'',\n      label_image:null,\n    }\n  this.handleChange = this.handleChange.bind(this);\n  this.handleUpload = this.handleUpload.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n}\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n}\nhandleUpload (event){\n  this.setState({[event.target.name]: event.target.files[0]});\n}\n\nasync componentDidMount() {\n  // fetch the prescription based on the id in the url\n  const response = await fetch(`/api/v1/user/patients/prescriptions/${this.props.match.params.id}/`).catch(this.handleError);\n  const data = await response.json().catch(this.handleError);\n  this.setState({...data});\n}\n\nasync handleSubmit(event){\n  event.preventDefault();\n  const id = this.props.match.params.id;\n  const csrftoken = Cookies.get('csrftoken');\n  const formData = new FormData();\n  const prescription = { ...this.state };\n  if(!(prescription.label_image instanceof File)) {\n    delete prescription.label_image;\n  }\n\n  const keys = Object.keys(prescription);\n  console.log(prescription)\n  keys.forEach(key => formData.append(key, prescription[key]));\n  formData.append('patient', id);\n  const options = {\n      method: 'PATCH',\n      headers: {\n        'X-CSRFToken': csrftoken,\n      },\n      body: formData,\n  };\n  await fetch(`/api/v1/user/patients/prescriptions/${id}/`, options);\n  this.props.history.push(`/user/patient/prescriptions/${id}`);\n};\nrender() {\n  return(\n      <React.Fragment>\n      <div className=\"col-lg-12 col-xs-12 top_bar\">\n      <p className=\"editform-label\">EDIT PRESCRIPTION</p>\n\n      </div>\n      <div className=\"row\">\n        <form className=\"col-lg-12 col-xs-12 med-form\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <label htmlFor='brand_name'className=\"brand\">Brand Name</label>\n            </div>\n            <div>\n            <input type=\"text\" id='brand_name' name=\"brand_name\" value={this.state.brand_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_name'className=\"med\">Medication Name</label>\n            </div>\n            <div>\n            <input type=\"text\" id='medication_name' name=\"medication_name\" value={this.state.medication_name} onChange={this.handleChange} />\n            </div>\n          <div className=\"form-group\">\n            <label htmlFor='directions'className=\"direct\">Directions</label>\n            </div>\n            <div>\n            <input type=\"text\" id='directions' name=\"directions\" value={this.state.directions} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='hourly_frequency'className=\"direct\">Hourly Frequency</label>\n            </div>\n            <div>\n            <input type=\"text\" id='hourly_frequency' name=\"hourly_frequency\" value={this.state.hourly_frequency} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='take_as_needed'className=\"take_as_needed\">Take As Needed</label>\n            <input type=\"checkbox\" className=\"take_as_needed\" id=\"take_as_needed\" name=\"take_as_needed\" value={this.state.take_as_needed} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='quantity'className=\"quantity\">Quantity</label>\n            </div>\n            <div>\n            <input type=\"text\" id='quantity' name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='refills'className=\"refill\">Refills</label>\n            </div>\n            <div>\n            <input type=\"text\" id='refills' name=\"refills\" value={this.state.refills} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='pharmacy_number'className=\"number\">Pharmacy Number</label>\n            </div>\n            <div>\n            <input type=\"text\" id='pharmacy_number' name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='rx'className=\"rx\">RX</label>\n            </div>\n            <div>\n            <input type=\"text\" id='rx' name=\"rx\" value={this.state.rx} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='prescriber'className=\"prescribe\">Prescriber</label>\n            </div>\n            <div>\n            <input type=\"text\" id='prescriber' name=\"prescriber\" value={this.state.prescriber} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label htmlFor='image'className=\"label_pic\">Label Image</label>\n            </div>\n            <div>\n            <input type=\"file\" name=\"label_image\" onChange={this.handleUpload}/>\n            <img src={this.state.upload} alt=\"\"/>\n          </div>\n          <div>\n          <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n          </div>\n        </form>\n        </div>\n        <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n\n\n        </div>\n      </React.Fragment>\n    )\n  }\n}\nexport default PrescriptionEdit;\n","import React, { Component } from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport './index.css';\n\n\nclass PrescriptionDetail extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      brand_name: '',\n    }\n    // this.deleteMed = this.deleteMed.bind(this);\n    // this.editMed = this.editMed.bind(this);\n    this.fetchPrescriptionDetail = this.fetchPrescriptionDetail.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPrescriptionDetail();\n  }\n  async fetchPrescriptionDetail() {\n    const id = this.props.match.params.id;\n    const response = await fetch(`/api/v1/user/patients/prescriptions/${id}/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({...data});\n    console.log(data);\n  }\n\n  render() {\n    return(\n      <div>\n      <div className=\"detail-list col-lg-12 col-xs-12\">\n        <div className=\"brand\">{this.state.brand_name}</div>\n        <div className=\"med_name\">{this.state.medication_name}</div>\n        <div className=\"drections\">{this.state.directions}</div>\n        <div className=\"qnty\">{this.state.quantity}</div>\n        <div className=\"refill\">{this.state.refills}</div>\n        <div className=\"pharm_number\">{this.state.pharmacy_number}</div>\n        <div className=\"rxnum\">{this.state.rx}</div>\n        <div className=\"doc_prescriber\">{this.state.prescriber}</div>\n        <div className=\"as_need\">{this.state.take_as_needed}</div>\n        <div className=\"hour_frequent\">{this.state.hourly_frequency}</div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default PrescriptionDetail;\n","export default __webpack_public_path__ + \"static/media/family.0904f56b.jpg\";","export default __webpack_public_path__ + \"static/media/dad.4d00ce7f.jpg\";","import React, { Component } from 'react';\nimport './index.css';\n\nimport Carousel from 'react-bootstrap/Carousel'\n\nimport dad from './../../images/dad.jpg';\nimport family from './../../images/family.jpg';\nimport family2 from './../../images/family2.jpg';\n\n\nclass About extends Component {\n\n\nrender() {\n\n  return(\n\n\n    <div id=\"about\">\n    <div className=\"top_bar\">\n      <p className=\"about-label\">ABOUT</p>\n\n    </div>\n    <div className=\"photobox row\">\n      <div className=\"about col-lg-6 col-xs-12\">\n\n        <img\n          className=\"d-block w-100 about-img\"\n          src={family}\n          alt=\"First slide\"\n        />\n\n\n\n\n         <p className=\"d-block w-100\">\n         Hello my name is Josh Lanier and this is my app GLOW.  My dad is an Alzheimer's patient.  He currently\n         is getting in home care by my mom and contracted caregivers 24/7.  Glow(Generated Log Of Well-Being)\n         is an app designed from seeing the struggle of family members taking care of their loved ones.\n          From hired help not being detailed enough, to family care takers not having the tools needed for the\n          best care possible,  Glow is designed for simplicity, yet  high quality detailed effectiveness for\n          the caregiver. From detailed written and image documentation, to medication check offs and scheduling,\n          to finding the closest pharmacies or care facilities no matter where you are.  Glow is designed to\n          help equip and bring peace of mind to the everyday family caregiver.\n         </p>\n          <a className=\"home-button\" href=\"http://localhost:3000/menu\">HOME</a>\n       </div>\n\n      </div>\n      <div className=\"my d-none d-lg-block\">MY</div>\n      <div className=\"story d-none d-lg-block\">STORY</div>\n      <div className=\"bottom_bar\">\n\n      </div>\n    </div>\n  )\n};\n\n\n}\nexport default About;\n","export default __webpack_public_path__ + \"static/media/family2.13183144.jpg\";","import React, { Component } from 'react';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport './index.css';\nimport Cookies from 'js-cookie';\n\nimport PrivateRoute from './../PrivateRoute';\n\n// import Menu from './../Menu';\nimport Header from './../Header';\n\nimport Login from './../Login';\nimport Registration from './../Registration';\n\nimport Map from './../Map/MyGoogleMap';\n\nimport PatientForm from './../PatientForm';\nimport PatientList from './../PatientList';\nimport PatientDetail from './../PatientDetail';\n\nimport MedicationHistory from './../MedicationHistory';\nimport PrescriptionForm from './../PrescriptionForm';\nimport PrescriptionEdit from './../PrescriptionEdit';\nimport PrescriptionDetail from './../PrescriptionDetail';\n\nimport About from './../About';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: !!localStorage.getItem('user'),\n      patientList: [],\n\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.saveProfile = this.saveProfile.bind(this);\n\n  }\n\n  async handleLogout() {\n      const options = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n      };\n      const response = await fetch('/api/v1/rest-auth/logout/', options).catch(this.handleError);\n      const data = await response.json().catch(this.handleError);\n      if(data.detail === \"Successfully logged out.\") {\n        Cookies.remove('Authorization');\n        localStorage.removeItem('user');\n        this.setState({ isLoggedIn: false}, () => this.props.history.push('/'));\n      }\n    }\n    async handleLogin(e, obj) {\n    e.preventDefault();\n    const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(obj),\n    };\n    const response = await fetch('/api/v1/rest-auth/login/', options).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    if(data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      this.setState({ isLoggedIn: true }, () => this.props.history.push('/user/patients'));\n    }\n  }\n  async handleRegistration(e, obj) {\n    e.preventDefault();\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(obj),\n    };\n    const response = await fetch('/api/v1/rest-auth/registration/', options);\n    const data = await response.json().catch(this.handleError);\n    if(data.key) {\n      // https://scotch.io/@PratyushB/local-storage-vs-session-storage-vs-cookie\n      Cookies.set('Authorization', `Token ${data.key}`);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      this.setState({ isLoggedIn: true }, () => this.props.history.push('/user/patients'));\n      const profile = {phone_number: obj.phone_number}\n      this.saveProfile(profile);\n\n    }\n  }\n\n  async saveProfile(obj) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(obj),\n    };\n\n    const response = await fetch('/api/v1/accounts/profile_create/', options);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n  }\n  handleError(err) {\n    console.warn(err);\n  }\n  render() {\n    return (\n      <React.Fragment>\n      <Header isLoggedIn={this.state.isLoggedIn} handleLogout={ this.handleLogout } />\n      <div className=\"container\">\n      <Switch>\n\n          <Route path='/registration' render={(props) => <Registration {...props} isLoggedIn={this.state.isLoggedIn} handleRegistration={ this.handleRegistration } />} />\n          <Route path='/login' render={(props) => <Login {...props} isLoggedIn={this.state.isLoggedIn} handleLogin={ this.handleLogin } />} />\n\n          <PrivateRoute path='/prescription/:id' isLoggedIn={this.state.isLoggedIn} component={PrescriptionEdit} />\n          <PrivateRoute path='/user/patients/:id/prescriptions/add/' isLoggedIn={this.state.isLoggedIn} component={PrescriptionForm} />\n          <PrivateRoute path='/user/prescriptiondetail/:id'isLoggedIn={this.state.isLoggedIn} component={PrescriptionDetail} />\n\n          <PrivateRoute path='/user/patients/add' isLoggedIn={this.state.isLoggedIn} component={PatientForm} />\n          <PrivateRoute path='/user/patients/:id' isLoggedIn={this.state.isLoggedIn} component={PatientDetail} />\n          <PrivateRoute path='/user/patients' isLoggedIn={this.state.isLoggedIn} component={PatientList} />\n          <PrivateRoute path='/user/medicationHistory/:id' isLoggedIn={this.state.isLoggedIn} component={MedicationHistory} />\n\n\n          <Route path=\"/\" component={About} exact />\n        </Switch>\n      </div>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}