{"version":3,"sources":["App/index.js","Registration/index.js","Login/index.js","Menu/index.js","Patient/index.js","Cover/index.js","Map/Autocomplete.js","Map/Marker.js","Map/MyGoogleMap.js","Prescription/index.js","Router/index.js","reportWebVitals.js","index.js"],"names":["App","props","className","children","Registration","state","username","email","password1","password2","handleChange","bind","event","this","setState","target","name","value","preventDefault","csrftoken","Cookies","get","fetch","method","headers","body","JSON","stringify","response","json","data","key","set","Fragment","onSubmit","addUser","type","placeholder","userName","onChange","title","Component","Login","password","handleLogIn","Menu","handleLogOut","detail","remove","href","onClick","Patient","first_name","last_name","date_of_birth","weight","height","gender","food_allergies","medication_allergies","primary_doctor","primary_doctor_telephone_number","language","bed_patient","walking_devices","able_to_walk_alone","surgeries","image","address","handleUpload","files","patient","formData","FormData","Object","keys","console","log","forEach","item","append","addPatient","htmlFor","src","upload","id","rows","Cover","Wrapper","styled","div","AutoComplete","onPlaceChanged","map","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","searchInput","blur","clearSearchBox","mapApi","options","types","places","Autocomplete","addListener","bindTo","clearInstanceListeners","ref","onFocus","Marker","text","alt","defaultProps","main","MyGoogleMap","mapApiLoaded","mapInstance","geoCoder","center","zoom","draggable","lat","lng","onMarkerInteraction","childKey","childProps","mouse","onMarkerInteractionMouseUp","_generateAddress","_onChange","_onClick","apiHasLoaded","maps","addPlace","setCurrentLocation","Geocoder","geocode","results","status","formatted_address","window","alert","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onChildMouseDown","onChildMouseUp","onChildMouseMove","onChildClick","bootstrapURLKeys","process","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","Prescription","brand_name","medication_name","directions","quantity","refills","pharmacy_number","rx","prescriber","label_image","addPrescription","Router","path","component","Map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQA2BeA,MARf,SAAaC,GACX,OACE,qBAAKC,UAAU,MAAf,SACGD,EAAME,Y,oECoEEC,E,kDAhFb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IAGDI,MAAQ,CACXC,SAAS,GACTC,MAAM,GACNC,UAAU,GACVC,UAAW,IAGb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAXH,E,yDAePC,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,uEAKnCL,G,kFAEZA,EAAMM,iBACAC,EAAYC,IAAQC,IAAI,a,SACPC,MAAM,kCAAmC,CAC9DC,OAAQ,OACRC,QAAS,CACP,eAAe,mBACf,cAAeL,GAEjBM,KAAMC,KAAKC,UAAUd,KAAKR,S,cANtBuB,E,gBASaA,EAASC,O,QAAtBC,E,QAEEC,KACNX,IAAQY,IAAI,gBAAZ,gBAAsCF,EAAKC,M,sIAOjC,IAAD,OACP,OACE,cAAC,IAAME,SAAP,UAEA,uBAAM/B,UAAU,uBAAuBgC,SAAU,SAACtB,GAAW,EAAKuB,QAAQvB,EAAO,EAAKP,OAAQ,EAAKS,SAAS,CAACR,SAAS,GAAIC,MAAM,GAAIC,UAAU,GAAIC,UAAW,MAA7J,UACE,sBAAKP,UAAU,aAAf,UACE,uBAAOA,UAAU,gBAAjB,4BACA,uBAAOkC,KAAK,OAAOC,YAAY,oBAAmBrB,KAAK,WAAWC,MAAOJ,KAAKR,MAAMiC,SAAUC,SAAW1B,KAAKH,kBAEhH,sBAAKR,UAAU,aAAf,UACI,uBAAOA,UAAU,eACjB,uBAAOkC,KAAK,OAAOC,YAAY,iBAAgBrB,KAAK,QAAQC,MAAOJ,KAAKR,MAAME,MAAOgC,SAAW1B,KAAKH,kBAEzG,sBAAKR,UAAU,aAAf,UACI,uBAAOA,UAAU,mBACjB,uBAAOkC,KAAK,OAAOC,YAAY,oBAAoBrB,KAAK,YAAYC,MAAOJ,KAAKR,MAAMG,UAAW+B,SAAW1B,KAAKH,kBAErH,sBAAKR,UAAU,aAAf,UACI,uBAAOA,UAAU,mBACjB,uBAAOkC,KAAK,OAAOC,YAAY,uBAAuBrB,KAAK,YAAYC,MAAOJ,KAAKR,MAAMmC,MAAOD,SAAW1B,KAAKH,kBAElH,wBAAQ0B,KAAK,SAAQlC,UAAU,mBAA/B,6B,GAnEauC,aCgEZC,E,kDA9Db,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IAEDI,MAAQ,CACXC,SAAU,GACVqC,SAAU,IAGZ,EAAKjC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKiC,YAAc,EAAKA,YAAYjC,KAAjB,gBATF,E,yDAcLC,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,2EAInCL,G,kFAEhBA,EAAMM,iBACAC,EAAYC,IAAQC,IAAI,a,SACPC,MAAM,2BAA4B,CACtDC,OAAQ,OACRC,QAAS,CACP,eAAe,mBACd,cAAeL,GAElBM,KAAMC,KAAKC,UAAUd,KAAKR,S,cANvBuB,E,gBASaA,EAASC,O,QAAtBC,E,QACEC,KACNX,IAAQY,IAAI,gBAAZ,gBAAsCF,EAAKC,M,sIAO7C,OACE,cAAC,IAAME,SAAP,UAEA,8BACE,uBAAM/B,UAAU,uBAAuBgC,SAAUrB,KAAK+B,YAAtD,UACE,sBAAK1C,UAAU,aAAf,UACE,uBAAOA,UAAU,gBAAjB,oBACA,uBAAOkC,KAAK,OAAOC,YAAY,oBAAoBrB,KAAK,WAAWC,MAAOJ,KAAKR,MAAMC,SAAUiC,SAAW1B,KAAKH,kBAEjH,sBAAKR,UAAU,aAAf,UACE,uBAAOA,UAAU,mBACjB,uBAAOkC,KAAK,OAAOC,YAAY,oBAAoBrB,KAAK,WAAWC,MAAOJ,KAAKR,MAAMsC,SAAUJ,SAAW1B,KAAKH,kBAEjH,wBAAQ0B,KAAK,SAAQlC,UAAU,mBAA/B,+B,GAxDYuC,aC+DLI,E,kDA/Db,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAGL6C,aAAe,EAAKA,aAAanC,KAAlB,gBAJC,E,kGAWAC,G,gFACfA,EAAMM,iBACAC,EAAYC,IAAQC,IAAI,a,SACPC,MAAM,4BAA6B,CACvDC,OAAQ,OACRC,QAAS,CACN,cAAeL,K,cAHfS,E,gBAQaA,EAASC,O,cACpBkB,QACN3B,IAAQ4B,OAAO,iB,iIAOjB,OACE,cAAC,IAAMf,SAAP,UACE,gCACA,8BACA,mBAAGgB,KAAK,GAAR,qBAEA,8BACA,mBAAGA,KAAK,gCAAR,8BAEA,8BACA,mBAAGA,KAAK,4BAAR,6BAEA,8BACA,wBAAQ/C,UAAU,UAAUgD,QAASrC,KAAKiC,aAA1C,gC,GA9CSL,a,QC6JJU,E,kDA7Jb,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IAEDI,MAAQ,CACX+C,WAAY,GACZC,UAAU,GACVC,cAAe,GACfC,OAAQ,GACRC,OAAO,GACPC,OAAQ,KACRC,eAAe,GACfC,qBAAqB,GACrBC,eAAe,GACfC,gCAAgC,GAChCC,SAAS,GACTC,YAAY,GACZC,gBAAiB,KACjBC,mBAAmB,GACnBC,UAAU,GACVC,MAAO,KACPC,QAAQ,IAEV,EAAK1D,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK0D,aAAe,EAAKA,aAAa1D,KAAlB,gBAvBH,E,yDA2BLC,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,mCAGrCL,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOuD,MAAM,O,iCAK9C1D,GAAO,IAAD,OACfA,EAAMM,iBAEN,IAAMC,EAAYC,IAAQC,IAAI,aAExBkD,EAAO,eAAO1D,KAAKR,OAGrBkE,EAAQP,wBACHO,EAAQP,gBAGjB,IAAMQ,EAAW,IAAIC,SACf3C,EAAO4C,OAAOC,KAAKJ,GAEzBK,QAAQC,IAAI/C,GAEZA,EAAKgD,SAAQ,SAAAC,GAAI,OAAIP,EAASQ,OAAOD,EAAM,EAAK1E,MAAM0E,OAEtDzD,MAAM,oBAAqB,CACxBC,OAAQ,OACRC,QAAS,CACP,cAAeL,GAEjBM,KAAM+C,M,+BAGH,IAAD,OACL,OACE,cAAC,IAAMvC,SAAP,UACE,uBAAM/B,UAAU,YAAYgC,SAAU,SAACtB,GAAW,EAAKqE,WAAWrE,EAAO,EAAKP,OAAQ,EAAKS,SAAS,CAACsC,WAAW,GAAIC,UAAU,GAChIC,cAAc,GAAIC,OAAO,GAAIC,OAAO,GAAIC,OAAe,SAAWC,eAAe,GAAIC,qBAAqB,GAAIC,eAAe,GAC/HC,gCAAgC,GAAIC,SAAS,GAAIC,YAAY,GAAIC,gBAA0C,OAASC,mBAAmB,GAAIC,UAAU,MAFjJ,UAIA,gCACE,uBAAOgB,QAAQ,QAAOhF,UAAU,SAAhC,2BACA,uBAAOkC,KAAK,OAAOpB,KAAK,QAAQuB,SAAU1B,KAAKwD,eAC/C,qBAAKc,IAAKtE,KAAKR,MAAM+E,YAErB,sBAAKlF,UAAU,aAAf,UACE,uBAAOgF,QAAQ,aAAYhF,UAAU,QAArC,wBACA,uBAAOkC,KAAK,OAAOiD,GAAG,aAAarE,KAAK,aAAaC,MAAOJ,KAAKR,MAAM+C,WAAYb,SAAU1B,KAAKH,kBAEpG,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,YAAWhF,UAAU,OAApC,uBACA,uBAAOkC,KAAK,OAAOiD,GAAG,YAAYrE,KAAK,YAAYC,MAAOJ,KAAKR,MAAMgD,UAAWd,SAAU1B,KAAKH,kBAEjG,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,UAAShF,UAAU,UAAlC,qBACA,uBAAOkC,KAAK,OAAOiD,GAAG,UAAUrE,KAAK,UAAUC,MAAOJ,KAAKR,MAAM+D,QAAS7B,SAAU1B,KAAKH,kBAG3F,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,gBAAehF,UAAU,OAAxC,2BACA,uBAAOkC,KAAK,OAAOiD,GAAG,gBAAgBrE,KAAK,gBAAgBC,MAAOJ,KAAKR,MAAMiD,cAAef,SAAU1B,KAAKH,kBAE7G,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,SAAQhF,UAAU,SAAjC,oBACA,uBAAOkC,KAAK,OAAOiD,GAAG,SAASrE,KAAK,SAASC,MAAOJ,KAAKR,MAAMkD,OAAQhB,SAAU1B,KAAKH,kBAExF,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,SAAQhF,UAAU,SAAjC,oBACA,uBAAOkC,KAAK,OAAOiD,GAAG,SAASrE,KAAK,SAASC,MAAOJ,KAAKR,MAAMmD,OAAQjB,SAAU1B,KAAKH,kBAExF,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,SAAQhF,UAAU,SAAjC,oBACE,yBAAQA,UAAU,cAAcmF,GAAG,SAASrE,KAAK,SAASC,MAAOJ,KAAKR,MAAMoD,OAAQlB,SAAU1B,KAAKH,aAAnG,UACE,wBAAQO,MAAM,SAAd,2BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,0BAGN,sBAAKf,UAAU,aAAf,UACE,uBAAOgF,QAAQ,iBAAgBhF,UAAU,WAAzC,4BACA,uBAAOkC,KAAK,OAAOiD,GAAG,iBAAiBrE,KAAK,iBAAiBC,MAAOJ,KAAKR,MAAMqD,eAAgBnB,SAAU1B,KAAKH,kBAEhH,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,uBAAsBhF,UAAU,eAA/C,kCACA,uBAAOkC,KAAK,OAAOiD,GAAG,uBAAuBrE,KAAK,uBAAuBC,MAAOJ,KAAKR,MAAMsD,qBAAsBpB,SAAU1B,KAAKH,kBAElI,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,iBAAgBhF,UAAU,SAAzC,4BACA,uBAAOkC,KAAK,OAAOiD,GAAG,iBAAiBrE,KAAK,iBAAiBC,MAAOJ,KAAKR,MAAMuD,eAAgBrB,SAAU1B,KAAKH,kBAEhH,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,kCAAiChF,UAAU,SAA1D,6CACA,uBAAOkC,KAAK,OAAOiD,GAAG,kCAAkCrE,KAAK,kCAAkCC,MAAOJ,KAAKR,MAAMwD,gCAAiCtB,SAAU1B,KAAKH,kBAEnK,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,WAAUhF,UAAU,WAAnC,sBACA,uBAAOkC,KAAK,OAAOiD,GAAG,WAAWrE,KAAK,WAAWC,MAAOJ,KAAKR,MAAMyD,SAAUvB,SAAU1B,KAAKH,kBAE9F,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,cAAahF,UAAU,cAAtC,yBACA,uBAAOkC,KAAK,WAAWlC,UAAU,cAAcmF,GAAG,cAAcrE,KAAK,cAAcC,MAAOJ,KAAKR,MAAM0D,YAAaxB,SAAU1B,KAAKH,kBAEnI,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,kBAAiBhF,UAAU,kBAA1C,4BACE,yBAAQA,UAAU,cAAcmF,GAAG,kBAAkBrE,KAAK,kBAAkBC,MAAOJ,KAAKR,MAAM2D,gBAAiBzB,SAAU1B,KAAKH,aAA9H,UACE,wBAAQO,MAAM,SAAd,2BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,wBAIN,sBAAKf,UAAU,YAAf,UACE,uBAAOgF,QAAQ,YAAWhF,UAAU,YAApC,uBACA,0BAAUc,KAAK,YAAYd,UAAU,YAAYoF,KAAK,IAAID,GAAG,YAAYpE,MAAOJ,KAAKR,MAAM6D,UAAW3B,SAAU1B,KAAKH,kBAGrH,wBAAQ0B,KAAK,SAAQlC,UAAU,mBAA/B,6B,GAtJUuC,aCqCP8C,G,wDAlCb,WAAYtF,GAAO,uCACXA,G,qDAMN,OAEA,cAAC,IAAMgC,SAAP,UACA,sBAAK/B,UAAU,kBAAf,UACA,qBAAKA,UAAU,aAAf,SACA,oBAAIA,UAAU,OAAd,oBAEA,sBAAKA,UAAU,qBAAf,UACA,mBAAGA,UAAU,2BACb,mBAAGA,UAAU,qBACb,mBAAGA,UAAU,6BAGb,qBAAKA,UAAU,UAAf,SACA,mBAAGA,UAAU,SAAS+C,KAAK,qCAA3B,8BAEA,qBAAK/C,UAAU,OAAf,SACA,mBAAGA,UAAU,QAAO+C,KAAK,8BAAzB,8B,GA1BgBR,c,kOCDpB,IAAM+C,EAAUC,IAAOC,IAAV,KAsEEC,E,kDA5DX,WAAY1F,GAAQ,IAAD,8BACf,cAAMA,IAuBV2F,eAAiB,WAAqC,IAAD,yDAAf,EAAK3F,MAAvB4F,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,SACfC,EAAQ,EAAKC,aAAaC,WAE3BF,EAAMG,WACPH,EAAMG,SAASC,SACfN,EAAIO,UAAUL,EAAMG,SAASC,WAE7BN,EAAIQ,UAAUN,EAAMG,SAASI,UAC7BT,EAAIU,QAAQ,KAGhBT,EAASC,GACT,EAAKS,YAAYC,SAlCjB,EAAKC,eAAiB,EAAKA,eAAe/F,KAApB,gBAFP,E,gEAK8B,IAAD,yDAAZE,KAAKZ,MAArB4F,EAA4B,EAA5BA,IAAKc,EAAuB,EAAvBA,OACfC,EAAU,CAEZC,MAAO,CAAC,YAIZhG,KAAKmF,aAAe,IAAIW,EAAOG,OAAOC,aAClClG,KAAK2F,YACLI,GAEJ/F,KAAKmF,aAAagB,YAAY,gBAAiBnG,KAAK+E,gBACpD/E,KAAKmF,aAAaiB,OAAO,SAAUpB,K,6CAGQ,IAAD,yDAAZhF,KAAKZ,MAAhB0G,EAAuB,EAAvBA,OACnBA,EAAO/F,MAAMsG,uBAAuBrG,KAAK2F,e,uCAmBzC3F,KAAK2F,YAAYvF,MAAQ,K,+BAGnB,IAAD,OACL,OACI,cAACuE,EAAD,UACI,uBACItF,UAAU,eACViH,IAAK,SAACA,GACF,EAAKX,YAAcW,GAEvB/E,KAAK,OACLgF,QAASvG,KAAK6F,eACdrE,YAAY,2B,GAtDLI,a,8gBCP3B,IAAM+C,EAAUC,IAAOC,IAAV,KAgBP2B,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMpE,EAAT,EAASA,QAAT,OACX,cAAC,EAAD,CACIqE,IAAKD,EACLpE,QAASA,KAIjBmE,EAAOG,aAAe,CAClBtE,QAAS,MAQEmE,Q,yGC5Bf,IAAM7B,EAAUC,IAAOgC,KAAV,KAkKEC,E,4MA1JXrH,MAAQ,CACJsH,cAAc,EACdC,YAAa,KACbjB,OAAQ,KACRkB,SAAU,KACVf,OAAQ,GACRgB,OAAQ,GACRC,KAAM,EACN3D,QAAS,GACT4D,WAAW,EACXC,IAAK,KACLC,IAAK,M,EAQTC,oBAAsB,SAACC,EAAUC,EAAYC,GACzC,EAAKxH,SAAS,CACVkH,WAAW,EACXC,IAAKK,EAAML,IACXC,IAAKI,EAAMJ,O,EAGnBK,2BAA6B,SAACH,EAAUC,EAAYC,GAChD,EAAKxH,SAAS,CAAEkH,WAAW,IAC3B,EAAKQ,oB,EAGTC,UAAY,YAAuB,IAApBX,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnB,EAAKjH,SAAS,CACVgH,OAAQA,EACRC,KAAMA,K,EAKdW,SAAW,SAACzH,GACR,EAAKH,SAAS,CACVmH,IAAKhH,EAAMgH,IACXC,IAAKjH,EAAMiH,O,EAInBS,aAAe,SAAC9C,EAAK+C,GACjB,EAAK9H,SAAS,CACV6G,cAAc,EACdC,YAAa/B,EACbc,OAAQiC,IAGZ,EAAKJ,oB,EAGTK,SAAW,SAAC9C,GACR,EAAKjF,SAAS,CACVgG,OAAQ,CAACf,GACTkC,IAAKlC,EAAMG,SAASI,SAAS2B,MAC7BC,IAAKnC,EAAMG,SAASI,SAAS4B,QAEjC,EAAKM,oB,mEA/CL3H,KAAKiI,uB,yCAkDW,IAAD,QAKE,IAFbjI,KAAKR,MADLsG,OAGwBoC,UAEnBC,QAAQ,CAAE,SAAY,CAAEf,IAAKpH,KAAKR,MAAM4H,IAAKC,IAAKrH,KAAKR,MAAM6H,OAAS,SAACe,EAASC,GACrFtE,QAAQC,IAAIoE,GACZrE,QAAQC,IAAIqE,GACG,OAAXA,EACID,EAAQ,IACR,EAAKlB,KAAO,GACZ,EAAKjH,SAAS,CAAEsD,QAAS6E,EAAQ,GAAGE,qBAEpCC,OAAOC,MAAM,oBAGjBD,OAAOC,MAAM,2BAA6BH,Q,2CAOhC,IAAD,OACb,gBAAiBI,WACjBA,UAAUC,YAAYC,oBAAmB,SAACC,GACtC,EAAK3I,SAAS,CACVgH,OAAQ,CAAC2B,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WACnD3B,IAAKwB,EAASC,OAAOC,SACrBzB,IAAKuB,EAASC,OAAOE,iB,+BAM3B,IAAD,SAGD/I,KAAKR,MADGsH,GAFP,EAEDb,OAFC,EAEOa,cAAcC,EAFrB,EAEqBA,YAAajB,EAFlC,EAEkCA,OAIvC,OACI,eAAC,EAAD,WACKgB,GACG,8BACI,cAAC,EAAD,CAAc9B,IAAK+B,EAAajB,OAAQA,EAAQb,SAAUjF,KAAKgI,aAGvE,cAAC,IAAD,CACIf,OAAQjH,KAAKR,MAAMyH,OACnBC,KAAMlH,KAAKR,MAAM0H,KACjBC,UAAWnH,KAAKR,MAAM2H,UACtBzF,SAAU1B,KAAK4H,UACfoB,iBAAkBhJ,KAAKsH,oBACvB2B,eAAgBjJ,KAAK0H,2BACrBwB,iBAAkBlJ,KAAKsH,oBACvB6B,aAAc,kBAAMpF,QAAQC,IAAI,gBAChC3B,QAASrC,KAAK6H,SACduB,iBAAkB,CACdlI,IAAKmI,0CACLC,UAAW,CAAC,SAAU,aAE1BC,oCAAkC,EAClCC,kBAAmB,gBAAGxE,EAAH,EAAGA,IAAK+C,EAAR,EAAQA,KAAR,OAAmB,EAAKD,aAAa9C,EAAK+C,IAfjE,SAkBI,cAAC,EAAD,CACItB,KAAMzG,KAAKR,MAAM+D,QACjB6D,IAAKpH,KAAKR,MAAM4H,IAChBC,IAAKrH,KAAKR,MAAM6H,QAMxB,sBAAKhI,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,uBAAuC,+BAAOW,KAAKR,MAAM4H,MAAzD,gBAAiF,+BAAOpH,KAAKR,MAAM6H,SACnG,sBAAKhI,UAAU,cAAf,mBAAmC,+BAAOW,KAAKR,MAAM0H,UACrD,sBAAK7H,UAAU,cAAf,sBAAsC,+BAAOW,KAAKR,MAAM+D,uB,GApJlD3B,aC0FX6H,E,kDAnGb,WAAYrK,GAAO,IAAD,8BAChB,cAAMA,IAEDI,MAAQ,CACXkE,QAAS,GACTgG,WAAW,GACXC,gBAAgB,GAChBC,WAAY,GACZC,SAAU,GACVC,QAAQ,GACRC,gBAAgB,GAChBC,GAAG,GACHC,WAAW,GACXC,YAAY,MAGhB,EAAKrK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK0D,aAAe,EAAKA,aAAa1D,KAAlB,gBAjBF,E,yDAoBNC,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,mCAGrCL,GACZC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOuD,MAAM,O,sCAGzC1D,GAAO,IAAD,OAEbA,EAAMM,iBAEN,IAAMC,EAAYC,IAAQC,IAAI,aAExBmD,EAAW,IAAIC,SACRC,OAAOC,KAAK9D,KAAKR,OAEzByE,SAAQ,SAAAC,GAAI,OAAIP,EAASQ,OAAOD,EAAM,EAAK1E,MAAM0E,OAEtDzD,MAAM,kCAAmC,CACtCC,OAAQ,OACRC,QAAS,CACP,cAAeL,GAEjBM,KAAM+C,M,+BAIR,IAAD,OACP,OACI,cAAC,IAAMvC,SAAP,UACE,uBAAM/B,UAAU,WAAWgC,SAAU,SAACtB,GAAW,EAAKoK,gBAAgBpK,EAAO,EAAKP,OAAQ,EAAKS,SAAS,CACtGyJ,WAAW,GAAIC,gBAAiB,GAAIC,WAAW,GAAIC,SAAS,GAAIC,QAAQ,GAAIC,gBAAgB,GAAIC,GAAG,GACnGC,WAAW,MAFb,UAGE,sBAAK5K,UAAU,aAAf,UACE,uBAAOgF,QAAQ,aAAYhF,UAAU,QAArC,wBACA,uBAAOkC,KAAK,OAAOiD,GAAG,aAAarE,KAAK,aAAaC,MAAOJ,KAAKR,MAAMkK,WAAYhI,SAAU1B,KAAKH,kBAEpG,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,kBAAiBhF,UAAU,MAA1C,6BACA,uBAAOkC,KAAK,OAAOiD,GAAG,kBAAkBrE,KAAK,kBAAkBC,MAAOJ,KAAKR,MAAMmK,gBAAiBjI,SAAU1B,KAAKH,kBAEnH,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,aAAYhF,UAAU,SAArC,wBACA,uBAAOkC,KAAK,OAAOiD,GAAG,aAAarE,KAAK,aAAaC,MAAOJ,KAAKR,MAAMoK,WAAYlI,SAAU1B,KAAKH,kBAEpG,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,WAAUhF,UAAU,WAAnC,sBACA,uBAAOkC,KAAK,OAAOiD,GAAG,WAAWrE,KAAK,WAAWC,MAAOJ,KAAKR,MAAMqK,SAAUnI,SAAU1B,KAAKH,kBAE9F,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,UAAShF,UAAU,SAAlC,qBACA,uBAAOkC,KAAK,OAAOiD,GAAG,UAAUrE,KAAK,UAAUC,MAAOJ,KAAKR,MAAMsK,QAASpI,SAAU1B,KAAKH,kBAE3F,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,kBAAiBhF,UAAU,SAA1C,6BACA,uBAAOkC,KAAK,OAAOiD,GAAG,kBAAkBrE,KAAK,kBAAkBC,MAAOJ,KAAKR,MAAMuK,gBAAiBrI,SAAU1B,KAAKH,kBAEnH,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,KAAIhF,UAAU,KAA7B,gBACA,uBAAOkC,KAAK,OAAOiD,GAAG,KAAKrE,KAAK,KAAKC,MAAOJ,KAAKR,MAAMwK,GAAItI,SAAU1B,KAAKH,kBAE5E,sBAAKR,UAAU,aAAf,UACE,uBAAOgF,QAAQ,aAAYhF,UAAU,YAArC,wBACA,uBAAOkC,KAAK,OAAOiD,GAAG,aAAarE,KAAK,aAAaC,MAAOJ,KAAKR,MAAMyK,WAAYvI,SAAU1B,KAAKH,kBAEpG,gCACE,uBAAOwE,QAAQ,QAAOhF,UAAU,YAAhC,yBACA,uBAAOkC,KAAK,OAAOpB,KAAK,cAAcuB,SAAU1B,KAAKwD,eACrD,qBAAKc,IAAKtE,KAAKR,MAAM+E,YAEvB,wBAAQhD,KAAK,SAAQlC,UAAU,mBAA/B,6B,GA5FiBuC,aC2BZwI,MAjBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAW5F,IAChC,cAAC,IAAD,CAAO2F,KAAK,SAASC,UAAWzI,IAChC,cAAC,IAAD,CAAOwI,KAAK,gBAAgBC,UAAW/K,IACvC,cAAC,IAAD,CAAO8K,KAAK,QAAQC,UAAWtI,IAC/B,cAAC,IAAD,CAAOqI,KAAK,WAAWC,UAAWhI,IAClC,cAAC,IAAD,CAAO+H,KAAK,OAAOC,UAAWC,IAC9B,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWb,UCbhCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a50af944.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Cookies from 'js-cookie';\n\n\n// import Menu from './Menu/index.js';\n// import Map from './Map/MyGoogleMap.js';\n\n\n// import your components\n// load each one individually in the App component below\n// and test each one separately\n\n\n // our location object from earlier\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      {props.children}\n    </div>\n  );\n}\n\nexport default App;\n","// build registration component\n// all inputs controlled\n// post request to create a new user\nimport React, { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n//class set here for the registration\n\nclass Registration extends Component {\n\n  constructor(props) {\n    super(props)\n\n\n    this.state = {\n      username:'',\n      email:'',\n      password1:'',\n      password2: '',\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n}\n\n\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n\n\n  }\n\n  async addUser(event) {\n\n    event.preventDefault();\n    const csrftoken = Cookies.get('csrftoken');\n    const response = await fetch('/api/v1/rest-auth/registration/', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state)\n    });\n\n    const data = await response.json();\n\n    if(data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n\n    }\n  };\n\n\n\n      render() {\n        return(\n          <React.Fragment>\n\n          <form className=\"col-12 col-md-6 mb-5\" onSubmit={(event) => {this.addUser(event, this.state); this.setState({username:'', email:'', password1:'', password2: ''})}}>\n            <div className=\"form-group\">\n              <label className=\"form-userName\">CREATE ACCOUNT</label>\n              <input type=\"text\" placeholder=\"Enter Username...\"name=\"username\" value={this.state.userName} onChange ={this.handleChange}  />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-email\"></label>\n                <input type=\"text\" placeholder=\"Enter Email...\"name=\"email\" value={this.state.email} onChange ={this.handleChange} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-password1\"></label>\n                <input type=\"text\" placeholder=\"Enter Password...\" name=\"password1\" value={this.state.password1} onChange ={this.handleChange} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-password2\"></label>\n                <input type=\"text\" placeholder=\"Re-enter Password...\" name=\"password2\" value={this.state.title} onChange ={this.handleChange} />\n            </div>\n              <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n          </form>\n\n          </React.Fragment>\n        )\n      }\n\n\n\n\n\n\n\n\n}\nexport default Registration;\n","// build login component\n// all inputs controlled\n// post request to create a new user\nimport React, { Component } from 'react';\n\nimport Cookies from 'js-cookie';\n// import UserArticles from './UserArticles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      username: '',\n      password: '',\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLogIn = this.handleLogIn.bind(this);\n\n\n  }\n\n  handleChange (event){\n    this.setState({[event.target.name]: event.target.value});\n}\n\n\nasync handleLogIn(event){\n\n  event.preventDefault();\n  const csrftoken = Cookies.get('csrftoken');\n  const response = await fetch('/api/v1/rest-auth/login/', {\n     method: 'post',\n     headers: {\n       'Content-Type':'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n     body: JSON.stringify(this.state)\n  });\n\n  const data = await response.json();\n  if(data.key) {\n    Cookies.set('Authorization', `Token ${data.key}`);\n  \n  }\n};\n\n\nrender() {\n  return (\n    <React.Fragment>\n\n    <div>\n      <form className=\"col-12 col-md-6 mb-5\" onSubmit={this.handleLogIn}>\n        <div className=\"form-group\">\n          <label className=\"form-userName\">LOG IN</label>\n          <input type=\"text\" placeholder=\"Enter Username...\" name=\"username\" value={this.state.username} onChange ={this.handleChange} />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"form-password1\"></label>\n          <input type=\"text\" placeholder=\"Enter Password...\" name=\"password\" value={this.state.password} onChange ={this.handleChange} />\n        </div>\n        <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n      </form>\n    </div>\n  </React.Fragment>\n\n                        )\n                      }\n                    }\nexport default Login;\n","// build logout functionality\nimport React, { Component } from 'react';\n\nimport Cookies from 'js-cookie';\n\n\nclass Menu extends Component {\n\n  constructor(props) {\n    super(props)\n\n\nthis.handleLogOut = this.handleLogOut.bind(this);\n\n};\n\n\n\n\n  async handleLogOut(event){\n      event.preventDefault();\n      const csrftoken = Cookies.get('csrftoken');\n      const response = await fetch('/api/v1/rest-auth/logout/', {\n         method: 'POST',\n         headers: {\n            'X-CSRFToken': csrftoken,\n          },\n\n      });\n\n      const data = await response.json();\n      if(data.detail) {\n        Cookies.remove('Authorization');\n      }\n    };\n\n\n\n    render() {\n      return (\n        <React.Fragment>\n          <nav>\n          <div>\n          <a href=\"\">ABOUT</a>\n          </div>\n          <div>\n          <a href=\"http://localhost:3000/patient\">CREATE PATIENT</a>\n          </div>\n          <div>\n          <a href=\"http://localhost:3000/map\">FIND PHARMACY</a>\n          </div>\n          <div>\n          <button className=\"log-out\" onClick={this.handleLogOut}>LOG OUT</button>\n          </div>\n\n\n          </nav>\n        </React.Fragment>\n      )\n    }\n\n\n\n\n\n\n\n\n\n};\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass Patient extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      first_name: '',\n      last_name:'',\n      date_of_birth: '',\n      weight: '',\n      height:'',\n      gender: null,\n      food_allergies:'',\n      medication_allergies:'',\n      primary_doctor:'',\n      primary_doctor_telephone_number:'',\n      language:'',\n      bed_patient:'',\n      walking_devices: null,\n      able_to_walk_alone:'',\n      surgeries:'',\n      image: null,\n      address:'',\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleUpload = this.handleUpload.bind(this)\n  }\n\n\n  handleChange (event){\n    this.setState({[event.target.name]: event.target.value});\n}\n\n  handleUpload (event){\n    this.setState({[event.target.name]: event.target.files[0]});\n  }\n\n\n\n  addPatient(event){\n    event.preventDefault();\n\n    const csrftoken = Cookies.get('csrftoken');\n    // shallow copy of state\n    const patient = {...this.state};\n\n    // remove walking device if one is not selected\n    if(!patient.walking_devices) {\n      delete patient.walking_devices\n    }\n\n    const formData = new FormData();\n    const data = Object.keys(patient);\n\n    console.log(data)\n    // console.log('data', data);\n    data.forEach(item => formData.append(item, this.state[item]));\n\n    fetch('/api/v1/patients/', {\n       method: 'POST',\n       headers: {\n         'X-CSRFToken': csrftoken,\n       },\n       body: formData\n    });\n};\nrender() {\n    return (\n      <React.Fragment>\n        <form className=\"news-form\" onSubmit={(event) => {this.addPatient(event, this.state); this.setState({first_name:'', last_name:'',\n      date_of_birth:'', weight:'', height:'', gender:('Male','Female'), food_allergies:'', medication_allergies:'', primary_doctor:'',\n    primary_doctor_telephone_number:'', language:'', bed_patient:'', walking_devices:('Wheel_Chair', 'Walker', 'Cane'), able_to_walk_alone:'', surgeries:''})}}>\n\n        <div>\n          <label htmlFor='image'className=\"avatar\">Profile Image</label>\n          <input type=\"file\" name=\"image\" onChange={this.handleUpload}/>\n          <img src={this.state.upload}/>\n        </div>\n          <div className=\"form-group\">\n            <label htmlFor='first_name'className=\"first\">First Name</label>\n            <input type=\"text\" id='first_name' name=\"first_name\" value={this.state.first_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='last_name'className=\"last\">Last Name</label>\n            <input type=\"text\" id='last_name' name=\"last_name\" value={this.state.last_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='address'className=\"address\">Address</label>\n            <input type=\"text\" id='address' name=\"address\" value={this.state.address} onChange={this.handleChange} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor='date_of_birth'className=\"bday\">Date Of Birth</label>\n            <input type=\"date\" id='date_of_birth' name=\"date_of_birth\" value={this.state.date_of_birth} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='weight'className=\"weight\">Weight</label>\n            <input type=\"text\" id='weight' name=\"weight\" value={this.state.weight} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='height'className=\"height\">Height</label>\n            <input type=\"text\" id='height' name=\"height\" value={this.state.height} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='gender'className=\"gender\">Gender</label>\n              <select className=\"news-option\" id=\"gender\" name=\"gender\" value={this.state.gender} onChange={this.handleChange}>\n                <option value=\"Select\">Select Gender</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n              </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='food_allergies'className=\"food_all\">Food Allergies</label>\n            <input type=\"text\" id='food_allergies' name=\"food_allergies\" value={this.state.food_allergies} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_allergies'className=\"med_allegery\">Medication Allergies</label>\n            <input type=\"text\" id='medication_allergies' name=\"medication_allergies\" value={this.state.medication_allergies} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='primary_doctor'className=\"doctor\">Primary Doctor</label>\n            <input type=\"text\" id='primary_doctor' name=\"primary_doctor\" value={this.state.primary_doctor} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='primary_doctor_telephone_number'className=\"number\">Primary Doctor Telephone Number</label>\n            <input type=\"text\" id='primary_doctor_telephone_number' name=\"primary_doctor_telephone_number\" value={this.state.primary_doctor_telephone_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='language'className=\"language\">Language</label>\n            <input type=\"text\" id='language' name=\"language\" value={this.state.language} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='bed_patient'className=\"bed_patient\">Bed Patient</label>\n            <input type=\"checkbox\" className=\"bed_patient\" id=\"bed_patient\" name=\"bed_patient\" value={this.state.bed_patient} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='walking_devices'className=\"walking_devices\">Walking Device</label>\n              <select className=\"walk_device\" id=\"walking_devices\" name=\"walking_devices\" value={this.state.walking_devices} onChange={this.handleChange}>\n                <option value=\"Select\">Select Device</option>\n                <option value=\"Wheel_Chair\">Wheel Chair</option>\n                <option value=\"Walker\">Walker</option>\n                <option value=\"Cane\">Cane</option>\n              </select>\n          </div>\n\n          <div className=\"surgeries\">\n            <label htmlFor=\"surgeries\"className=\"surgeries\">Surgeries</label>\n            <textarea name=\"surgeries\" className=\"surgeries\" rows=\"5\" id='surgeries' value={this.state.surgeries} onChange={this.handleChange}/>\n          </div>\n\n            <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n\n        </form>\n      </React.Fragment>\n\n   )\n }\n\n}\nexport default Patient;\n","import React, { Component } from 'react';\nimport './index.css';\n\nimport Cookies from 'js-cookie';\n\nclass Cover extends Component {\n\n  constructor(props){\n    super(props)\n\n  }\n\n\n  render(){\n    return(\n\n    <React.Fragment>\n    <div className=\"cover_container\">\n    <div className=\"cover_logo\">\n    <h1 className=\"logo\">GLOW</h1>\n    </div>\n    <div className=\"cover_font_awesome\">\n    <i className=\"fab fa-facebook-square\"></i>\n    <i className=\"fab fa-instagram\"></i>\n    <i className=\"fab fa-youtube-square\"></i>\n\n    </div>\n    <div className=\"account\">\n    <a className=\"create\" href=\"http://localhost:3000/registration\">CREATE ACCOUNT</a>\n    </div>\n    <div className=\"logn\">\n    <a className=\"login\"href=\"http://localhost:3000/login\">LOGIN</a>\n    </div>\n    </div>\n    </React.Fragment>\n    )\n\n};\n\n\n}\nexport default Cover;\n","// Autocomplete.js\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n  text-align:center;\n`;\n\nclass AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.clearSearchBox = this.clearSearchBox.bind(this);\n    }\n\n    componentDidMount({ map, mapApi } = this.props) {\n        const options = {\n            // restrict your search to a specific type of result\n            types: ['address'],\n            // restrict your search to a specific country, or an array of countries\n            // componentRestrictions: { country: ['gb', 'us'] },\n        };\n        this.autoComplete = new mapApi.places.Autocomplete(\n            this.searchInput,\n            options,\n        );\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\n        this.autoComplete.bindTo('bounds', map);\n    }\n\n    componentWillUnmount({ mapApi } = this.props) {\n        mapApi.event.clearInstanceListeners(this.searchInput);\n    }\n\n    onPlaceChanged = ({ map, addplace } = this.props) => {\n        const place = this.autoComplete.getPlace();\n\n        if (!place.geometry) return;\n        if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n        } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n        }\n\n        addplace(place);\n        this.searchInput.blur();\n    };\n\n    clearSearchBox() {\n        this.searchInput.value = '';\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <input\n                    className=\"search-input\"\n                    ref={(ref) => {\n                        this.searchInput = ref;\n                    }}\n                    type=\"text\"\n                    onFocus={this.clearSearchBox}\n                    placeholder=\"Enter a location\"\n                />\n            </Wrapper>\n        );\n    }\n}\n\nexport default AutoComplete;\n","// import GoogleMapReact from 'google-map-react'\n// Marker.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;\n","// MyGoogleMaps.js\nimport React, { Component } from 'react';\n\nimport GoogleMapReact from 'google-map-react';\n\nimport styled from 'styled-components';\n\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 500px;\n`;\n\nclass MyGoogleMap extends Component {\n\n\n    state = {\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        places: [],\n        center: [],\n        zoom: 9,\n        address: '',\n        draggable: true,\n        lat: null,\n        lng: null\n    };\n\n    componentWillMount() {\n        this.setCurrentLocation();\n    }\n\n\n    onMarkerInteraction = (childKey, childProps, mouse) => {\n        this.setState({\n            draggable: false,\n            lat: mouse.lat,\n            lng: mouse.lng\n        });\n    }\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n        this.setState({ draggable: true });\n        this._generateAddress();\n    }\n\n    _onChange = ({ center, zoom }) => {\n        this.setState({\n            center: center,\n            zoom: zoom,\n        });\n\n    }\n\n    _onClick = (value) => {\n        this.setState({\n            lat: value.lat,\n            lng: value.lng\n        });\n    }\n\n    apiHasLoaded = (map, maps) => {\n        this.setState({\n            mapApiLoaded: true,\n            mapInstance: map,\n            mapApi: maps,\n        });\n\n        this._generateAddress();\n    };\n\n    addPlace = (place) => {\n        this.setState({\n            places: [place],\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n        });\n        this._generateAddress()\n    };\n\n    _generateAddress() {\n        const {\n            mapApi\n        } = this.state;\n\n        const geocoder = new mapApi.Geocoder;\n\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n            console.log(results);\n            console.log(status);\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                    this.setState({ address: results[0].formatted_address });\n                } else {\n                    window.alert('No results found');\n                }\n            } else {\n                window.alert('Geocoder failed due to: ' + status);\n            }\n\n        });\n    }\n\n    // Get Current Location Coordinates\n    setCurrentLocation() {\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.setState({\n                    center: [position.coords.latitude, position.coords.longitude],\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                });\n            });\n        }\n    }\n\n    render() {\n        const {\n            places, mapApiLoaded, mapInstance, mapApi,\n        } = this.state;\n\n\n        return (\n            <Wrapper>\n                {mapApiLoaded && (\n                    <div>\n                        <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n                    </div>\n                )}\n                <GoogleMapReact\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    draggable={this.state.draggable}\n                    onChange={this._onChange}\n                    onChildMouseDown={this.onMarkerInteraction}\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\n                    onChildMouseMove={this.onMarkerInteraction}\n                    onChildClick={() => console.log('child click')}\n                    onClick={this._onClick}\n                    bootstrapURLKeys={{\n                        key: process.env.REACT_APP_GOOGLE_PLACES_API_KEY,\n                        libraries: ['places', 'geometry'],\n                    }}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n                >\n\n                    <Marker\n                        text={this.state.address}\n                        lat={this.state.lat}\n                        lng={this.state.lng}\n                    />\n\n\n                </GoogleMapReact>\n\n                <div className=\"info-wrapper\">\n                    <div className=\"map-details\">Latitude: <span>{this.state.lat}</span>, Longitude: <span>{this.state.lng}</span></div>\n                    <div className=\"map-details\">Zoom: <span>{this.state.zoom}</span></div>\n                    <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\n                </div>\n\n\n            </Wrapper >\n        );\n    }\n}\n\nexport default MyGoogleMap;\n","import React, { Component } from 'react';\n\nimport Cookies from 'js-cookie';\n\n\nclass Prescription extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      patient: 16,\n      brand_name:'',\n      medication_name:'',\n      directions: '',\n      quantity: '',\n      refills:'',\n      pharmacy_number:'',\n      rx:'',\n      prescriber:'',\n      label_image:null,\n    }\n\n  this.handleChange = this.handleChange.bind(this)\n  this.handleUpload = this.handleUpload.bind(this)\n}\n\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n}\n\nhandleUpload (event){\n  this.setState({[event.target.name]: event.target.files[0]});\n}\n\naddPrescription(event){\n         //this post is for image uploads\n         event.preventDefault();\n\n         const csrftoken = Cookies.get('csrftoken');\n\n         const formData = new FormData();\n         const data = Object.keys(this.state);\n         // console.log('data', data);\n         data.forEach(item => formData.append(item, this.state[item]));\n\n         fetch('/api/v1/patients/prescriptions/', {\n            method: 'POST',\n            headers: {\n              'X-CSRFToken': csrftoken,\n            },\n            body: formData\n         });\n         };\n\nrender() {\n  return(\n      <React.Fragment>\n        <form className=\"med-form\" onSubmit={(event) => {this.addPrescription(event, this.state); this.setState({\n          brand_name:'', medication_name: '', directions:'', quantity:'', refills:'', pharmacy_number:'', rx:'',\n          prescriber:''})}}>\n          <div className=\"form-group\">\n            <label htmlFor='brand_name'className=\"brand\">Brand Name</label>\n            <input type=\"text\" id='brand_name' name=\"brand_name\" value={this.state.brand_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_name'className=\"med\">Medication Name</label>\n            <input type=\"text\" id='medication_name' name=\"medication_name\" value={this.state.medication_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='directions'className=\"direct\">Directions</label>\n            <input type=\"text\" id='directions' name=\"directions\" value={this.state.directions} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='quantity'className=\"quantity\">Quantity</label>\n            <input type=\"text\" id='quantity' name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='refills'className=\"refill\">Refills</label>\n            <input type=\"text\" id='refills' name=\"refills\" value={this.state.refills} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='pharmacy_number'className=\"number\">Pharmacy Number</label>\n            <input type=\"text\" id='pharmacy_number' name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='rx'className=\"rx\">RX</label>\n            <input type=\"text\" id='rx' name=\"rx\" value={this.state.rx} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='prescriber'className=\"prescribe\">Prescriber</label>\n            <input type=\"text\" id='prescriber' name=\"prescriber\" value={this.state.prescriber} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label htmlFor='image'className=\"label_pic\">Label Image</label>\n            <input type=\"file\" name=\"label_image\" onChange={this.handleUpload}/>\n            <img src={this.state.upload}/>\n          </div>\n          <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n        </form>\n      </React.Fragment>\n    )\n  }\n\n\n}\nexport default Prescription;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport App from '../App';\nimport Registration from'../Registration';\nimport Login from'../Login';\nimport Menu from'../Menu';\nimport Patient from '../Patient';\nimport Cover from '../Cover';\nimport Map from './../Map/MyGoogleMap';\nimport Prescription from '../Prescription';\n\n\n\n\nfunction Router () {\n  return (\n    <BrowserRouter>\n      <App>\n        <Route path=\"/cover\" component={Cover}/>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/registration\" component={Registration}/>\n        <Route path=\"/menu\" component={Menu}/>\n        <Route path=\"/patient\" component={Patient}/>\n        <Route path=\"/map\" component={Map}/>\n        <Route path=\"/prescription\" component={Prescription}/>\n\n      </App>\n    </BrowserRouter>\n  )\n}\n\nexport default Router;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}