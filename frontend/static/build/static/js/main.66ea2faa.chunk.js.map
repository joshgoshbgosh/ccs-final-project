{"version":3,"sources":["components/PrivateRoute/index.js","components/Menu/index.js","components/Cover/index.js","images/bgimg.jpg","components/Login/index.js","components/Registration/index.js","components/Map/Autocomplete.js","components/Map/Marker.js","components/Map/MyGoogleMap.js","components/PatientForm/index.js","components/PatientList/index.js","components/PatientDetail/index.js","components/MedicationHistory/index.js","components/PrescriptionForm/index.js","images/family.jpg","images/dad.jpg","components/About/index.js","images/family2.jpg","components/App/index.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","isLoggedIn","props","to","Menu","Fragment","className","href","class","onClick","this","handleLogout","Component","Cover","classname","Login","state","username","password","handleChange","bind","event","setState","target","name","value","onSubmit","handleLogin","type","placeholder","onChange","Registration","phone_number","email","password1","password2","handleRegistration","userName","title","Wrapper","styled","div","AutoComplete","onPlaceChanged","map","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","searchInput","blur","clearSearchBox","mapApi","options","types","places","Autocomplete","addListener","bindTo","clearInstanceListeners","ref","onFocus","Marker","text","alt","defaultProps","main","MyGoogleMap","mapApiLoaded","mapInstance","geoCoder","center","zoom","address","draggable","lat","lng","onMarkerInteraction","childKey","childProps","mouse","onMarkerInteractionMouseUp","_generateAddress","_onChange","_onClick","apiHasLoaded","maps","addPlace","setCurrentLocation","Geocoder","geocode","results","status","console","log","formatted_address","window","alert","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onChildMouseDown","onChildMouseUp","onChildMouseMove","onChildClick","bootstrapURLKeys","key","process","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","PatientForm","first_name","last_name","date_of_birth","weight","height","gender","food_allergies","medication_allergies","primary_doctor","primary_doctor_telephone_number","language","bed_patient","walking_devices","able_to_walk_alone","surgeries","image","handleUpload","handleSubmit","handleError","files","err","warn","preventDefault","csrftoken","Cookies","get","patient","label_image","formData","FormData","Object","keys","forEach","append","method","headers","body","fetch","catch","response","json","data","history","push","id","htmlFor","src","upload","rows","PatientCard","Card","Img","variant","Body","Title","toUpperCase","PatientList","patientList","fetchPatientList","patients","Prescription","comments","datetime","displayModal","saveDose","prescription_id","prescription","dose","JSON","stringify","medication_name","removePrescription","Button","Modal","show","onHide","Header","closeButton","Form","Group","controlId","Label","Control","as","Footer","PatientDetail","fetchPatientDetail","prescriptions","index","indexOf","splice","match","params","MedicationHistory","fetchMedicationHistory","item","PrescriptionForm","patientID","brand_name","directions","quantity","refills","pharmacy_number","rx","prescriber","take_as_needed","hourly_frequency","About","family","App","localStorage","getItem","saveProfile","detail","remove","removeItem","e","obj","set","setItem","user","profile","path","render","component","Map","exact","withRouter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66ea2faa.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nfunction PrivateRoute({ isLoggedIn, ...props }) {\n  return isLoggedIn\n    ? <Route { ...props } />\n    : <Redirect to='/login/'  />\n}\nexport default PrivateRoute;\n","// build logout functionality\nimport React, { Component } from 'react';\n\nimport Cookies from 'js-cookie';\nimport './index.css';\n\n\nclass Menu extends Component {\n\n  constructor(props) {\n    super(props)\n\n\n// this.handleLogOut = this.handleLogOut.bind(this);\n\n};\n\n\n\n\n  // async handleLogOut(event){\n  //     event.preventDefault();\n  //     const csrftoken = Cookies.get('csrftoken');\n  //     const response = await fetch('/api/v1/rest-auth/logout/', {\n  //        method: 'POST',\n  //        headers: {\n  //           'X-CSRFToken': csrftoken,\n  //         },\n  //\n  //     });\n  //\n  //     const data = await response.json();\n  //     if(data.detail) {\n  //       Cookies.remove('Authorization');\n  //     }\n  //   };\n\n\n\n    render() {\n      return (\n        <React.Fragment>\n          <nav>\n          <div>\n          <a className=\"about-ref\"href=\"http://localhost:3000/about\">ABOUT</a>\n          </div>\n          <div>\n          <a className=\"make-pat\"href=\"http://localhost:3000/user/patients/add\">CREATE PATIENT</a>\n          </div>\n          <div>\n          <a className=\"pat-det\"href=\"http://localhost:3000/user/patients\">PATIENT LIST</a>\n          </div>\n          <div>\n          <a className=\"findpharm\"href=\"http://localhost:3000/map\">FIND PHARMACY</a>\n          </div>\n          <div className=\"menu_font_awesome\">\n\n            <i class=\"one fas fa-circle\"></i>\n\n            <i class=\"two fas fa-circle\"></i>\n\n            <i class=\"three fas fa-circle\"></i>\n\n            <i class=\"four fas fa-circle\"></i>\n\n\n          </div>\n          <div>\n          <button className=\"log-out\" onClick={this.props.handleLogout}>LOG OUT</button>\n          </div>\n\n\n          </nav>\n        </React.Fragment>\n      )\n    }\n\n\n\n\n\n\n\n\n\n};\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport './index.css';\nimport bgimg from './../../images/bgimg.jpg';\n\n\n\nclass Cover extends Component {\n\n\n\n\n  render(){\n    return(\n\n    <React.Fragment>\n    <div classname=\"row justify-content-center\">\n    <div className=\"col-12 col-xs-12 cover_container\">\n    <div className=\"cover_logo\">\n      <h1 className=\"logo\">GLOW</h1>\n    </div>\n\n    <div className=\"cover_font_awesome\">\n\n      <i class=\"one fas fa-circle\"></i>\n\n      <i class=\"two fas fa-circle\"></i>\n\n      <i class=\"three fas fa-circle\"></i>\n\n      <i class=\"four fas fa-circle\"></i>\n\n\n    </div>\n    <div className=\"account\">\n      <a className=\"create\" href=\"/registration\">CREATE ACCOUNT</a>\n    </div>\n    <div className=\"logn\">\n      <a className=\"login\"href=\"/login\">LOGIN</a>\n    </div>\n    </div>\n    </div>\n    </React.Fragment>\n    )\n\n};\n\n\n}\nexport default Cover;\n","export default __webpack_public_path__ + \"static/media/bgimg.1ea62255.jpg\";","// build login component\n// all inputs controlled\n// post request to create a new user\nimport React, { Component } from 'react';\nimport './index.css';\nimport { Redirect } from 'react-router-dom';\n\n\n// import UserArticles from './UserArticles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      username: '',\n      password: '',\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleLogIn = this.handleLogIn.bind(this);\n\n\n  }\n\n  handleChange (event){\n    this.setState({[event.target.name]: event.target.value});\n}\n\n\n// async handleLogIn(event){\n//\n//   event.preventDefault();\n//   const csrftoken = Cookies.get('csrftoken');\n//   const response = await fetch('/api/v1/rest-auth/login/', {\n//      method: 'post',\n//      headers: {\n//        'Content-Type':'application/json',\n//         'X-CSRFToken': csrftoken,\n//       },\n//      body: JSON.stringify(this.state)\n//   });\n//\n//   const data = await response.json();\n//   if(data.key) {\n//     Cookies.set('Authorization', `Token ${data.key}`);\n//\n//   }\n// };\n\n\nrender() {\n  if(this.props.isLoggedIn) {\n      return <Redirect to=\"/user/patients\" />\n    }\n  return (\n    <React.Fragment>\n\n\n      <div className=\" row justify-content-center\">\n      <form className=\"col-lg-6 col-xs-12\" onSubmit={(event) => this.props.handleLogin(event, this.state)}>\n      <div className=\"log_div\">\n      <h1 className=\"log-logo\">GLOW</h1>\n      </div>\n      <div className=\"cover_font_awesome\">\n\n        <i class=\"one fas fa-circle\"></i>\n\n        <i class=\"two fas fa-circle\"></i>\n\n        <i class=\"three fas fa-circle\"></i>\n\n        <i class=\"four fas fa-circle\"></i>\n\n\n      </div>\n        <div className=\"log-label form-group\">\n          <label className=\"form-userName\">LOG IN</label>\n          </div>\n          <div>\n          <input type=\"text\" placeholder=\"Enter Username...\" name=\"username\" value={this.state.username} onChange ={this.handleChange} />\n        </div>\n        <div className=\"pass-lab form-group\">\n          <label className=\"form-password1\"></label>\n          <input type=\"password\" placeholder=\"Enter Password...\" name=\"password\" value={this.state.password} onChange ={this.handleChange} />\n        </div>\n        <button type=\"submit\"className=\"subbut\">SUBMIT</button>\n      </form>\n      </div>\n\n  </React.Fragment>\n\n                        )\n                      }\n                    }\nexport default Login;\n","// build registration component\n// all inputs controlled\n// post request to create a new user\nimport React, { Component } from 'react';\n// import Cookies from 'js-cookie';\nimport './index.css';\nimport { Redirect } from 'react-router-dom';\n//class set here for the registration\n\nclass Registration extends Component {\n\n  constructor(props) {\n    super(props)\n\n\n    this.state = {\n      username:'',\n      phone_number:'',\n      email:'',\n      password1:'',\n      password2: '',\n\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n}\n\n\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n\n\n  }\n\n\n\n  // async addUser(event) {\n  //\n  //   event.preventDefault();\n  //   const csrftoken = Cookies.get('csrftoken');\n  //   const response = await fetch('/api/v1/rest-auth/registration/', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type':'application/json',\n  //       'X-CSRFToken': csrftoken,\n  //     },\n  //     body: JSON.stringify(this.state)\n  //   });\n  //\n  //   const data = await response.json();\n  //\n  //   if(data.key) {\n  //     Cookies.set('Authorization', `Token ${data.key}`);\n  //\n  //   }\n  // };\n\n\n\n      render() {\n        if(this.props.isLoggedIn) {\n            return <Redirect to=\"/user/patients\" />\n          }\n        return(\n          <React.Fragment>\n          <div className=\"acbox\">\n          <div className=\"cover_font_awesome\">\n\n            <i class=\"one fas fa-circle\"></i>\n\n            <i class=\"two fas fa-circle\"></i>\n\n            <i class=\"three fas fa-circle\"></i>\n\n            <i class=\"four fas fa-circle\"></i>\n\n\n          </div>\n          </div>\n          <div className=\"row justify-content-center\">\n          <form className=\"col-lg-6 col-xs-12\" onSubmit={(event) => this.props.handleRegistration(event, this.state)}>\n            <div className=\"form-group\">\n              <label className=\"form-userName\">CREATE ACCOUNT</label>\n              <input type=\"text\" placeholder=\"Enter Username...\"name=\"username\" value={this.state.userName} onChange ={this.handleChange}  />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-email\"></label>\n                <input type=\"text\" placeholder=\"Enter Email...\"name=\"email\" value={this.state.email} onChange ={this.handleChange} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-phone_number\"></label>\n                <input type=\"tel\" placeholder=\"(xxx) xxx-xxxx\" name=\"phone_number\" value={this.state.phone_number} onChange ={this.handleChange} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-password1\"></label>\n                <input type=\"password\" placeholder=\"Enter Password...\" name=\"password1\" value={this.state.password1} onChange ={this.handleChange} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"form-password2\"></label>\n                <input type=\"password\" placeholder=\"Re-enter Password...\" name=\"password2\" value={this.state.title} onChange ={this.handleChange} />\n            </div>\n              <button type=\"submit\"className=\"subbut\">Submit</button>\n          </form>\n          </div>\n          </React.Fragment>\n        )\n      }\n\n\n\n\n\n\n\n\n}\nexport default Registration;\n","// Autocomplete.js\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 20px;\n  text-align:center;\n`;\n\nclass AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.clearSearchBox = this.clearSearchBox.bind(this);\n    }\n\n    componentDidMount({ map, mapApi } = this.props) {\n        const options = {\n            // restrict your search to a specific type of result\n            types: ['address'],\n            // restrict your search to a specific country, or an array of countries\n            // componentRestrictions: { country: ['gb', 'us'] },\n        };\n        this.autoComplete = new mapApi.places.Autocomplete(\n            this.searchInput,\n            options,\n        );\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\n        this.autoComplete.bindTo('bounds', map);\n    }\n\n    componentWillUnmount({ mapApi } = this.props) {\n        mapApi.event.clearInstanceListeners(this.searchInput);\n    }\n\n    onPlaceChanged = ({ map, addplace } = this.props) => {\n        const place = this.autoComplete.getPlace();\n\n        if (!place.geometry) return;\n        if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n        } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n        }\n\n        addplace(place);\n        this.searchInput.blur();\n    };\n\n    clearSearchBox() {\n        this.searchInput.value = '';\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <input\n                    className=\"search-input\"\n                    ref={(ref) => {\n                        this.searchInput = ref;\n                    }}\n                    type=\"text\"\n                    onFocus={this.clearSearchBox}\n                    placeholder=\"Enter a location\"\n                />\n            </Wrapper>\n        );\n    }\n}\n\nexport default AutoComplete;\n","// import GoogleMapReact from 'google-map-react'\n// Marker.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;\n","// MyGoogleMaps.js\nimport React, { Component } from 'react';\n\nimport GoogleMapReact from 'google-map-react';\nimport './map.css';\nimport styled from 'styled-components';\n\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 500px;\n`;\n\nclass MyGoogleMap extends Component {\n\n\n    state = {\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        places: [],\n        center: [],\n        zoom: 9,\n        address: '',\n        draggable: true,\n        lat: null,\n        lng: null\n    };\n\n    componentWillMount() {\n        this.setCurrentLocation();\n    }\n\n\n    onMarkerInteraction = (childKey, childProps, mouse) => {\n        this.setState({\n            draggable: false,\n            lat: mouse.lat,\n            lng: mouse.lng\n        });\n    }\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n        this.setState({ draggable: true });\n        this._generateAddress();\n    }\n\n    _onChange = ({ center, zoom }) => {\n        this.setState({\n            center: center,\n            zoom: zoom,\n        });\n\n    }\n\n    _onClick = (value) => {\n        this.setState({\n            lat: value.lat,\n            lng: value.lng\n        });\n    }\n\n    apiHasLoaded = (map, maps) => {\n        this.setState({\n            mapApiLoaded: true,\n            mapInstance: map,\n            mapApi: maps,\n        });\n\n        this._generateAddress();\n    };\n\n    addPlace = (place) => {\n        this.setState({\n            places: [place],\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n        });\n        this._generateAddress()\n    };\n\n    _generateAddress() {\n        const {\n            mapApi\n        } = this.state;\n\n        const geocoder = new mapApi.Geocoder;\n\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n            console.log(results);\n            console.log(status);\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                    this.setState({ address: results[0].formatted_address });\n                } else {\n                    window.alert('No results found');\n                }\n            } else {\n                window.alert('Geocoder failed due to: ' + status);\n            }\n\n        });\n    }\n\n    // Get Current Location Coordinates\n    setCurrentLocation() {\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.setState({\n                    center: [position.coords.latitude, position.coords.longitude],\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                });\n            });\n        }\n    }\n\n    render() {\n        const {\n            places, mapApiLoaded, mapInstance, mapApi,\n        } = this.state;\n\n\n        return (\n            <Wrapper>\n            <div className=\"map_bar_top col-lg-12 col-xs-12 \">\n            <p className=\"map-label\">MAP</p>\n            </div>\n                {mapApiLoaded && (\n                    <div>\n                        <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n                    </div>\n                )}\n                <GoogleMapReact\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    draggable={this.state.draggable}\n                    onChange={this._onChange}\n                    onChildMouseDown={this.onMarkerInteraction}\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\n                    onChildMouseMove={this.onMarkerInteraction}\n                    onChildClick={() => console.log('child click')}\n                    onClick={this._onClick}\n                    bootstrapURLKeys={{\n                        key: process.env.REACT_APP_GOOGLE_PLACES_API_KEY,\n                        libraries: ['places', 'geometry'],\n                    }}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n                >\n\n\n                    <Marker\n                        text={this.state.address}\n                        lat={this.state.lat}\n                        lng={this.state.lng}\n                    />\n\n\n                </GoogleMapReact>\n\n                <div className=\"bottom\">\n                <div className=\"info-wrapper\">\n                    <div className=\"map-details\">Latitude: <span>{this.state.lat}</span>, Longitude: <span>{this.state.lng}</span></div>\n                    <div className=\"map-details\">Zoom: <span>{this.state.zoom}</span></div>\n                    <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\n                </div>\n                <div>\n                <a className=\"home-button\" href=\"/\">HOME MENU</a>\n                </div>\n                </div>\n\n                <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n\n                </div>\n            </Wrapper >\n        );\n    }\n}\n\nexport default MyGoogleMap;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nclass PatientForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      first_name: '',\n      last_name:'',\n      date_of_birth: '',\n      weight: '',\n      height:'',\n      gender: '',\n      food_allergies:'',\n      medication_allergies:'',\n      primary_doctor:'',\n      primary_doctor_telephone_number:'',\n      language:'',\n      bed_patient:'',\n      walking_devices: '',\n      able_to_walk_alone:'',\n      surgeries:'',\n      image: null,\n      address:'',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n  handleChange (event){\n    this.setState({[event.target.name]: event.target.value});\n}\n  handleUpload (event){\n    this.setState({[event.target.name]: event.target.files[0]});\n  }\n  handleError(err) {\n    console.warn(err);\n  }\n  async handleSubmit(event){\n    event.preventDefault();\n    const csrftoken = Cookies.get('csrftoken');\n    // shallow copy of state\n    const patient = {...this.state};\n    // remove walking device if one is not selected\n    if(!patient.walking_devices) {\n      delete patient.walking_devices\n    }\n    // remove image if one is not selected\n    if(!patient.image) {\n      delete patient.label_image;\n    }\n    const formData = new FormData();\n    const keys = Object.keys(patient);\n    keys.forEach(key => formData.append(key, this.state[key]));\n    const options = {\n        method: 'POST',\n        headers: {\n          'X-CSRFToken': csrftoken,\n        },\n        body: formData,\n    };\n    const response = await fetch('/api/v1/user/patients/', options).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.props.history.push(`/user/patients/${data.id}/`);\n};\nrender() {\n    return (\n      <React.Fragment>\n      <div className=\"top_bar col-lg-12 col-xs-12 \">\n      <p className=\"list-label\">PATIENT FORM</p>\n\n      </div>\n       <div className=\"row\">\n        <form className=\"news-form col-lg-6 col-xs-12\" onSubmit={this.handleSubmit}>\n          <div className=\"patient_form\">\n               <div>\n                    <div>\n                       <label htmlFor='image'className=\"avatar\">Profile Image</label>\n                    </div>\n                    <div>\n                      <input className=\"photo\"type=\"file\" name=\"image\" onChange={this.handleUpload}/>\n                    </div>\n                    <div>\n                      <img src={this.state.upload} alt=\"\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor='first_name'className=\"first\"></label>\n                    </div>\n                    <div>\n                        <input type=\"text\" id='first_name' placeholder=\"First Name...\"name=\"first_name\" value={this.state.first_name} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor='last_name'className=\"last\"></label>\n                    </div>\n                    <div>\n                        <input type=\"text\" id='last_name' placeholder=\"Last Name...\"name=\"last_name\" value={this.state.last_name} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor='address'className=\"address\"></label>\n                    </div>\n                    <div>\n                        <input type=\"text\" id='address' placeholder=\"Address...\"name=\"address\" value={this.state.address} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor='date_of_birth'className=\"bday\"></label>\n                    </div>\n                    <div>\n                        <input type=\"date\" id='date_of_birth' name=\"date_of_birth\" value={this.state.date_of_birth} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor='weight'className=\"weight\"></label>\n                    </div>\n                    <div>\n                        <input type=\"text\" id='weight' placeholder=\"Weight...\"name=\"weight\" value={this.state.weight} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor='height'className=\"height\"></label>\n                    </div>\n                    <div>\n                        <input type=\"text\" id='height' placeholder=\"Height\" name=\"height\" value={this.state.height} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor='gender'className=\"gender\"></label>\n                    </div>\n                    <div>\n                          <select className=\"news-option\" id=\"gender\" name=\"gender\" value={this.state.gender} onChange={this.handleChange}>\n                            <option value=\"Select\">Select Gender</option>\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Female\">Female</option>\n                          </select>\n                    </div>\n                </div>\n                <div>\n                    <div className=\"form-group\">\n                    <label htmlFor='food_allergies'className=\"food_all\"></label>\n                    </div>\n                    <div>\n                    <input type=\"text\" id='food_allergies' placeholder=\"Food Allergies...\"name=\"food_allergies\" value={this.state.food_allergies} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor='medication_allergies'className=\"med_allegery\"></label>\n                    </div>\n                    <div>\n                    <input type=\"text\" id='medication_allergies' placeholder=\"Medication Allergies...\"name=\"medication_allergies\" value={this.state.medication_allergies} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor='primary_doctor'className=\"doctor\"></label>\n                    </div>\n                    <div>\n                    <input type=\"text\" id='primary_doctor' placeholder=\"Primary Doctor...\"name=\"primary_doctor\" value={this.state.primary_doctor} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor='primary_doctor_telephone_number'className=\"number\"></label>\n                    </div>\n                    <div>\n                    <input type=\"text\" id='primary_doctor_telephone_number' placeholder=\"Primary Doctor Number...\" name=\"primary_doctor_telephone_number\" value={this.state.primary_doctor_telephone_number} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor='language'className=\"language\"></label>\n                    </div>\n                    <div>\n                    <input type=\"text\" id='language' placeholder=\"Language...\"name=\"language\" value={this.state.language} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor='bed_patient'className=\"bed_patient\">Bed Patient</label>\n                    </div>\n                    <div>\n                    <input type=\"checkbox\" className=\"bed_patient\" id=\"bed_patient\" name=\"bed_patient\" value={this.state.bed_patient} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor='walking_devices'className=\"walking_devices\">Walking Device</label>\n                    </div>\n                    <div>\n                      <select className=\"walk_device\" id=\"walking_devices\" name=\"walking_devices\" value={this.state.walking_devices} onChange={this.handleChange}>\n                        <option value=\"Select\">Select Device</option>\n                        <option value=\"Wheel_Chair\">Wheel Chair</option>\n                        <option value=\"Walker\">Walker</option>\n                        <option value=\"Cane\">Cane</option>\n                      </select>\n                    </div>\n                    <div className=\"surgeries\">\n                    <label htmlFor=\"surgeries\"className=\"surgeries\"></label>\n                    </div>\n                    <div>\n                    <textarea name=\"surgeries\" placeholder=\"Surgery History...\"className=\"surgeries\" rows=\"5\" id='surgeries' value={this.state.surgeries} onChange={this.handleChange}/>\n                    </div>\n                  <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n                </div>\n              </div>\n          </form>\n        </div>\n        <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n        </div>\n      </React.Fragment>\n   )\n }\n}\nexport default PatientForm;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport './index.css';\nimport {Link} from 'react-router-dom';\nclass PatientCard extends Component {\n  render() {\n    const patient = this.props.patient;\n    return(\n      <Link to={`/user/patients/${patient.id}`}>\n        <Card>\n          <Card.Img variant=\"top\" src={patient.image}/>\n          <Card.Body>\n            <Card.Title>{`${patient.first_name.toUpperCase()}  ${patient.last_name.toUpperCase()}`}</Card.Title>\n          </Card.Body>\n        </Card>\n      </Link>\n    )\n  }\n}\nclass PatientList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patientList: [],\n    }\n    this.fetchPatientList = this.fetchPatientList.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPatientList();\n  }\n  async fetchPatientList() {\n    const response = await fetch('/api/v1/user/patients/').catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({patientList: data});\n  }\n  render() {\n    // console.log(this.props.patientList)\n    const patients = this.state.patientList.map(patient => <PatientCard key={patient.id} patient={patient}/>);\n    return(\n      <React.Fragment>\n      <div className=\"top_bar col-lg-12 col-xs-12 \">\n      <p className=\"list-label\">PATIENT LIST</p>\n\n      </div>\n        <Link className=\"addpatient nav-link\" to={`/user/patients/add`}>Create A New Patient</Link>\n        {patients}\n        <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n        </div>\n      </React.Fragment>\n    )\n  }\n}\nexport default PatientList;\n","import React, { Component } from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport './index.css';\n\n// // import Card from 'react-bootstrap/Card';\n// class Prescription extends Component {       //this is displaying patient meds on display page\n//   constructor(props) {\n//     super(props);\n//\n//     this.state = {\n//       id: '',\n//       brand_name:'',\n//       medication_name: '',\n//       directions:'',\n//       quantity:'',\n//       prescriber: '',\n//       rx: '',\n//       pharmacy_number:'',\n//       isEditing: false,\n//     }\n//\n//     this.handleInput = this.handleInput.bind(this);\n//\n//   }\n//\n//   handleInput(e) {\n//     this.setState({[e.target.name]: e.target.value});\n//   }\n//\n//   componentDidMount() {\n//     console.log(this.props.prescription)\n//     this.setState({...this.props.prescription});\n//   }\n//\n//\n//\n//   render() {\n//     // const prescription = this.props.prescription;\n//     return(\n//        <div className=\"med-display\">\n//\n//         <div className='row'>\n//         <div className='col-lg-3 col-xs-12'>\n//         <div className=\"detail-display\">{this.state.brand_name}</div>\n//         {this.state.isEditing\n//           ?\n//           <React.Fragment>\n//           <label htmlFor=\"brand_name\">Brand Name</label>\n//           <input type='text' id=\"brand_name\" name=\"brand_name\" value={this.state.brand_name} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"medication_name\">Mecication Name</label>\n//           <input type='text' id=\"medication_name\" name=\"medication_name\" value={this.state.medication_name} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"directions\">Directions</label>\n//           <input type='text' id=\"directions\" name=\"directions\" value={this.state.directions} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"quantity\">Quantity</label>\n//           <input type='text' id=\"quantity\" name=\"quantity\" value={this.state.quantity} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"medication_name\">Prescriber</label>\n//           <input type='text' id=\"prescriber\" name=\"prescriber\" value={this.state.prescriber} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"medication_name\">RX</label>\n//           <input type='text' id=\"rx\" name=\"rx\" value={this.state.rx} onChange={this.handleInput}/>\n//\n//           <label htmlFor=\"medication_name\">Pharmacy_number Name</label>\n//           <input type='text' id=\"pharmacy_number\" name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleInput}/>\n//\n//           <button type='button' onClick={()=> {this.setState({isEditing: false}); this.props.editMed(this.state)}}>Save</button>\n//           </React.Fragment>\n//\n//           :\n//           <React.Fragment>\n//             <div>{this.state.medication_name}</div>\n//             <div>{this.state.directions}</div>\n//             <div>{this.state.quantity}</div>\n//             <div>{this.state.prescriber}</div>\n//             <div>{this.state.rx}</div>\n//             <div>{this.state.pharmacy_number}</div>\n//             <button type='button' onClick={() => this.setState({isEditing: true})}>Edit</button>\n//             <button type='button' onClick={() => this.props.deleteMed(this.props.prescription)}>Delete</button>\n//           </React.Fragment>\n//         }\n//         </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\nclass Prescription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: '',\n      datetime: '',\n      // prescriptions: [],\n      displayModal: false,\n    }\n    this.saveDose = this.saveDose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n  handleError(err) {\n    console.warn(err);\n  }\n  componentDidMount(){\n    // this.removePrescription();\n  }\n  async saveDose() {\n    const prescription_id = this.props.prescription.id\n    const dose = {\n      comments: this.state.comments,\n      datetime: this.state.datetime,\n      prescription: prescription_id,\n    }\n    const csrftoken = Cookies.get('csrftoken');\n    const options = {\n        method: 'POST',\n        headers: {\n          'X-CSRFToken': csrftoken,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(dose),\n    };\n    const response = await fetch(`/api/v1/user/patients/${prescription_id}/doses/`, options);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n    // that the data object that was returned and fire off a request to your twilio url (tied to a view)\n    // the twilio url/view needs to fire off the text message\n\n    this.setState({displayModal: false})\n  }\n\n\n\n  render() {\n    return(\n      <div>\n        <div className=\"medicine_name\">{this.props.prescription.medication_name}</div>\n        {/*<Link className=\"nav-link\" to={}>Edit</Link>*/}\n        {/*<button className=\"btn btn-link\" >Remove</button>*/}\n        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.removePrescription(this.props.prescription)}>Remove</button>\n        <Button variant=\"primary\" onClick={() => this.setState({displayModal: true})}>Give Medication</Button>\n        <Modal show={this.state.displayModal} onHide={() => this.setState({displayModal: false})}>\n          <Modal.Header closeButton>\n            <Modal.Title>{this.props.prescription.medication_name.toUpperCase()}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Date Time</Form.Label>\n                <Form.Control type=\"datetime-local\" placeholder=\"Select date\" name=\"datetime\" value={this.state.datetime} onChange={this.handleChange}/>\n              </Form.Group>\n              <Form.Group controlId=\"comments\">\n                <Form.Label>Comments</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} name=\"comments\" value={this.state.comments} onChange={this.handleChange}/>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.setState({displayModal: false})}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.saveDose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass PrescriptionDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    // this.deleteMed = this.deleteMed.bind(this);\n    // this.editMed = this.editMed.bind(this);\n    this.fetchPrescriptionDetail = this.fetchPrescriptionDetail.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPrescriptionDetail();\n  }\n  async fetchPrescriptionDetail() {\n    const id = this.props.match.params.id;\n    const response = await fetch(`/api/v1/user/patients/${id}/prescriptions/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({...data});\n    console.log(data);\n  }\n\n\n  render() {\n    return(\n\n      <div>\n        <div className=\"brand\">Brand Name - {this.state.brand_name}</div>\n        <div className=\"med_name\">{this.state.medication_name}</div>\n        <div className=\"drections\">{this.state.directions}</div>\n        <div className=\"qnty\">{this.state.quantity}</div>\n        <div className=\"refill\">{this.state.refills}</div>\n        <div className=\"pharm_number\">{this.state.pharmacy_number}</div>\n        <div className=\"rxnum\">{this.state.rx}</div>\n        <div className=\"doc_prescriber\">{this.state.prescriber}</div>\n        <div className=\"as_need\">{this.state.take_as_needed}</div>\n        <div className=\"hour_frequent\">{this.state.hourly_frequency}</div>\n      </div>\n    )\n  }\n}\n\n\n\n\nclass PatientDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    // this.deleteMed = this.deleteMed.bind(this);\n    // this.editMed = this.editMed.bind(this);\n    this.fetchPatientDetail = this.fetchPatientDetail.bind(this);\n    this.removePrescription = this.removePrescription.bind(this);\n  }\n  componentDidMount() {\n    this.fetchPatientDetail();\n  }\n\n  async removePrescription(prescription){\n    const options = {\n          method: 'DELETE',\n          headers:{\n            'X-CSRFToken': Cookies.get('csrftoken'),\n            'Content-Type': 'application/json'\n          },\n        }\n        const handleError = (err) => console.warn(err);\n        const response = await fetch(`/api/v1/user/patients/prescriptions/${prescription.id}/`, options)\n        const data = await response.json().catch(handleError);\n        // console.log('data', data);\n        const prescriptions = [...this.state.prescriptions];\n        const index = prescriptions.indexOf(prescription);\n        prescriptions.splice(index, 1);\n        // prescriptions don't live on this component's state\n        this.setState({prescriptions});\n\n\n      }\n\n  async fetchPatientDetail() {\n    const id = this.props.match.params.id;\n    const response = await fetch(`/api/v1/user/patients/${id}/`).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    this.setState({...data});\n    console.log(data);\n  }\n  // async deleteMed(prescription){\n  //\n  //     const options = {\n  //       method: 'DELETE',\n  //       headers:{\n  //         'X-CSRFToken': Cookies.get('csrftoken'),\n  //         'Content-Type': 'application/json'\n  //       },\n  //     }\n  //     const handleError = (err) => console.warn(err);\n  //\n  //     const response = await fetch(`/api/v1/user/prescription/${prescription.id}/`, options)\n  //     const data = await response.json().catch(handleError);\n  //     console.log('data', data);\n  //     const prescriptions = [...this.state.prescriptions];\n  //     const index = prescriptions.indexOf(prescription);\n  //     prescriptions.splice(index, 1);\n  //     this.setState({prescriptions});\n  //\n  //   }\n  //\n  //   async editMed(prescription) {\n  //     console.log(prescription);\n  //     // event.preventDefault();\n  //     // console.log(!(prescription.label_image instanceof File));\n  //\n  //     if(!(prescription.label_image instanceof File)) {\n  //       delete prescription.label_image;\n  //     }\n  //\n  //\n  //     const id = prescription.id;\n  //     let formData = new FormData();\n  //     const keys = Object.keys(prescription);\n  //     keys.forEach(key => formData.append(key, prescription[key]));\n  //\n  //     const options = {\n  //       method: 'PUT',\n  //       headers: {\n  //         'X-CSRFToken': Cookies.get('csrftoken'),\n  //       },\n  //           body:formData,\n  //     }\n  //     const handleError = (err) => console.warn(err);\n  //     const response = await fetch(`/api/v1/user/patients/prescription/${id}/`, options);\n  //     const data = await response.json().catch(handleError)\n  //\n  //     const prescriptions = [...this.state.prescriptions];\n  //     const index = prescriptions.findIndex(prescription => prescription.id === id);\n  //     prescriptions[index] = data;\n  //     this.setState({prescriptions});\n  //   }\n  render() {\n    const prescriptionDetail = this.props.match.params;\n    const id = this.props.match.params.id;\n    console.log(this.state.prescriptions)\n    const prescriptions = this.state.prescriptions?.map(prescription => <Prescription key={prescription.id} prescription={prescription} removePrescription={this.removePrescription}/>);\n    return(\n      <div>\n     <div className=\"top_bar col-lg-12 col-xs-12 \">\n     <p className=\"pDtail\">PATIENT DETAILS</p>\n\n     </div>\n\n\n      <div className=\"boxs col-lg-12 col-xs-12\">\n        <div className=\"p_detail\">\n\n          <div className=\"fname\">First Name - {this.state.first_name}</div>\n          <div className=\"lname\">Last Name - {this.state.last_name}</div>\n          <div className=\"date_of_birth\">DOB - {this.state.date_of_birth}</div>\n          <div className=\"height\">Height - {this.state.height}</div>\n          <div className=\"weight\">Weight - {this.state.weight}</div>\n          <div className=\"address\">Address - {this.state.address}</div>\n          <div className=\"gender\">Gender - {this.state.gender}</div>\n          <div className=\"medsallergy\">Medical Allergy - {this.state.medication_allergies}</div>\n          <div className=\"foodsallergy\">Food Allergy - {this.state.food_allergies}</div>\n          <div className=\"primdoct\">Primary Doctor - {this.state.primary_doctor}</div>\n          <div className=\"doctele\">Primary Dr Phone Number - {this.state.primary_doctor_telephone_number}</div>\n          <div className=\"language\">Language - {this.state.language}</div>\n          <div className=\"bedpat\">{this.state.bed_patient}</div>\n          <div className=\"walkdevice\">Walking Device - {this.state.walking_devices}</div>\n          <div className=\"walkalone\">{this.state.able_to_walk_alone}</div>\n          <div className=\"surgery\">History Of Surgery - {this.state.surgeries}</div>\n\n        </div>\n        <div className=\"meddisplay\">\n          <div className=\"medname\">\n            {prescriptions}\n\n          </div>\n\n          <Link className=\"newmed nav-link\" to={`/user/patients/${id}/prescriptions/add/`}>Add New Prescription</Link>\n          <Link className=\"med_history nav-link\" to={`/user/medicationHistory/${id}/`}>View Schedule History</Link>\n        </div>\n\n\n      </div>\n      <Link className=\"return_link\" to={'/user/patients/'}>Return To Patient List</Link>\n\n        <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default PatientDetail;\n","import React, { Component } from 'react';\nimport './index.css';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\n\n\nclass MedicationHistory extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        data:[]\n      }\n\n       this.fetchMedicationHistory = this.fetchMedicationHistory.bind(this)\n     }\n     componentDidMount() {\n       this.fetchMedicationHistory();\n     }\n     async fetchMedicationHistory() {\n       console.log(this.props.match.params);\n       // const prescription_id = this.props.prescription.id\n       const id = this.props.match.params.id;\n       const response = await fetch(`/api/v1/user/patients/${id}/prescriptionHistory/`).catch(this.handleError);\n       const data = await response.json().catch(this.handleError);\n       this.setState({data});\n       console.log('medicationHistroy',this.state);\n     }\n     render(){\n       let text = this.state.data.map(item =>{\n         return <div className=\"medhistory\"><div className=\"history_box\"><div>Prescription ID - {item.id}</div><div>Comments - {item.comments}</div> <div>Date/Time - {item.datetime}</div></div></div>;\n\n\n       })\n       return(\n         <div>\n         <div className=\"top_bar\">\n         <p className=\"pDtail\">Medication History</p>\n         </div>\n         <div>\n\n         </div>\n         <div className= 'col-lg-12 col-xs-12 d-block w-100'>{text}</div>\n         <div className=\"bottom_bar \">\n         <Link className=\"pdtail_link\" to={`/user/patients/${this.props.match.params.id}/`}>Return To Patient Detail</Link>\n         </div>\n\n         </div>\n       )\n     }\n  }\n\nexport default MedicationHistory;\n","import React, { Component } from 'react';\nimport './index.css';\nimport Cookies from 'js-cookie';\nclass PrescriptionForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      patient: this.props.patientID,\n      brand_name:'',\n      medication_name:'',\n      directions: '',\n      quantity: '',\n      refills:'',\n      pharmacy_number:'',\n      rx:'',\n      prescriber:'',\n      take_as_needed: false,\n      hourly_frequency:'',\n      label_image:null,\n    }\n  this.handleChange = this.handleChange.bind(this);\n  this.handleUpload = this.handleUpload.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n}\nhandleChange (event){\n  this.setState({[event.target.name]: event.target.value});\n}\nhandleUpload (event){\n  this.setState({[event.target.name]: event.target.files[0]});\n}\nasync handleSubmit(event){\n  event.preventDefault();\n  const id = this.props.match.params.id;\n  const csrftoken = Cookies.get('csrftoken');\n  const formData = new FormData();\n  const prescription = { ...this.state };\n  if(!prescription.label_image) {\n    delete prescription.label_image;\n  }\n  const keys = Object.keys(prescription);\n  keys.forEach(key => formData.append(key, prescription[key]));\n  formData.append('patient', id);\n  const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': csrftoken,\n      },\n      body: formData,\n  };\n  await fetch(`/api/v1/user/patients/${id}/prescriptions/`, options);\n  this.props.history.push(`/user/patient/${id}/prescriptions/`);\n};\nrender() {\n  return(\n      <React.Fragment>\n      <div className=\"col-lg-12 col-xs-12 top_bar\">\n      <p className=\"medform-label\">ADD PRESCRIPTION</p>\n\n      </div>\n      <div className=\"row\">\n        <form className=\"col-lg-12 col-xs-12 med-form\" onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <label htmlFor='brand_name'className=\"brand\">Brand Name</label>\n            </div>\n            <div>\n            <input type=\"text\" id='brand_name' name=\"brand_name\" value={this.state.brand_name} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='medication_name'className=\"med\">Medication Name</label>\n            </div>\n            <div>\n            <input type=\"text\" id='medication_name' name=\"medication_name\" value={this.state.medication_name} onChange={this.handleChange} />\n            </div>\n          <div className=\"form-group\">\n            <label htmlFor='directions'className=\"direct\">Directions</label>\n            </div>\n            <div>\n            <input type=\"text\" id='directions' name=\"directions\" value={this.state.directions} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='hourly_frequency'className=\"direct\">Hourly Frequency</label>\n            </div>\n            <div>\n            <input type=\"text\" id='hourly_frequency' name=\"hourly_frequency\" value={this.state.hourly_frequency} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='take_as_needed'className=\"take_as_needed\">Take As Needed</label>\n            <input type=\"checkbox\" className=\"take_as_needed\" id=\"take_as_needed\" name=\"take_as_needed\" value={this.state.take_as_needed} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='quantity'className=\"quantity\">Quantity</label>\n            </div>\n            <div>\n            <input type=\"text\" id='quantity' name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='refills'className=\"refill\">Refills</label>\n            </div>\n            <div>\n            <input type=\"text\" id='refills' name=\"refills\" value={this.state.refills} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='pharmacy_number'className=\"number\">Pharmacy Number</label>\n            </div>\n            <div>\n            <input type=\"text\" id='pharmacy_number' name=\"pharmacy_number\" value={this.state.pharmacy_number} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='rx'className=\"rx\">RX</label>\n            </div>\n            <div>\n            <input type=\"text\" id='rx' name=\"rx\" value={this.state.rx} onChange={this.handleChange} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor='prescriber'className=\"prescribe\">Prescriber</label>\n            </div>\n            <div>\n            <input type=\"text\" id='prescriber' name=\"prescriber\" value={this.state.prescriber} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label htmlFor='image'className=\"label_pic\">Label Image</label>\n            </div>\n            <div>\n            <input type=\"file\" name=\"label_image\" onChange={this.handleUpload}/>\n            <img src={this.state.upload} alt=\"\"/>\n          </div>\n          <div>\n          <button type=\"submit\"className=\"sub btn btn-dark\">Submit</button>\n          </div>\n        </form>\n        </div>\n        <div className=\"bottom_bar col-lg-12 col-xs-12 \">\n\n\n        </div>\n      </React.Fragment>\n    )\n  }\n}\nexport default PrescriptionForm;\n","export default __webpack_public_path__ + \"static/media/family.0904f56b.jpg\";","export default __webpack_public_path__ + \"static/media/dad.4d00ce7f.jpg\";","import React, { Component } from 'react';\nimport './index.css';\n\nimport Carousel from 'react-bootstrap/Carousel'\n\nimport dad from './../../images/dad.jpg';\nimport family from './../../images/family.jpg';\nimport family2 from './../../images/family2.jpg';\n\n\nclass About extends Component {\n\n\nrender() {\n\n  return(\n\n\n    <React.Fragment>\n    <div className=\"top_bar\">\n    <p className=\"about-label\">ABOUT</p>\n\n    </div>\n    <div className=\"photobox row\">\n      <div className=\"about col-lg-6 col-xs-12\">\n\n        <img\n          className=\"d-block w-100 about-img\"\n          src={family}\n          alt=\"First slide\"\n        />\n\n\n\n\n         <p className=\"d-block w-100\">\n         Hello my name is Josh Lanier and this is my app GLOW.  My dad is an Alzheimer's patient.  He currently\n         is getting in home care by my mom and contracted caregivers 24/7.  Glow(Generated Log Of Well-Being)\n         is an app designed from seeing the struggle of family members taking care of their loved ones.\n          From hired help not being detailed enough, to family care takers not having the tools needed for the\n          best care possible,  Glow is designed for simplicity, yet  high quality detailed effectiveness for\n          the caregiver. From detailed written and image documentation, to medication check offs and scheduling,\n          to finding the closest pharmacies or care facilities no matter where you are.  Glow is designed to\n          help equip and bring peace of mind to the everyday family caregiver.\n         </p>\n          <a className=\"home-button\" href=\"http://localhost:3000/menu\">HOME</a>\n       </div>\n\n      </div>\n      <div className=\"my d-none d-lg-block\">MY</div>\n      <div className=\"story d-none d-lg-block\">STORY</div>\n      <div className=\"bottom_bar\">\n\n      </div>\n    </React.Fragment>\n  )\n};\n\n\n}\nexport default About;\n","export default __webpack_public_path__ + \"static/media/family2.13183144.jpg\";","import React, { Component } from 'react';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport './index.css';\nimport Cookies from 'js-cookie';\n\nimport PrivateRoute from './../PrivateRoute';\n\nimport Menu from './../Menu';\nimport Cover from './../Cover';\n\nimport Login from './../Login';\nimport Registration from './../Registration';\n\nimport Map from './../Map/MyGoogleMap';\n\nimport PatientForm from './../PatientForm';\nimport PatientList from './../PatientList';\nimport PatientDetail from './../PatientDetail';\n\nimport MedicationHistory from './../MedicationHistory';\nimport PrescriptionForm from './../PrescriptionForm';\n\nimport About from './../About';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: !!localStorage.getItem('user'),\n      patientList: [],\n\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.saveProfile = this.saveProfile.bind(this);\n\n  }\n\n  async handleLogout() {\n      const options = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n      };\n      const response = await fetch('/api/v1/rest-auth/logout/', options).catch(this.handleError);\n      const data = await response.json().catch(this.handleError);\n      if(data.detail === \"Successfully logged out.\") {\n        Cookies.remove('Authorization');\n        localStorage.removeItem('user');\n        this.setState({ isLoggedIn: false}, () => this.props.history.push('/'));\n      }\n    }\n    async handleLogin(e, obj) {\n    e.preventDefault();\n    const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(obj),\n    };\n    const response = await fetch('/api/v1/rest-auth/login/', options).catch(this.handleError);\n    const data = await response.json().catch(this.handleError);\n    if(data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      this.setState({ isLoggedIn: true }, () => this.props.history.push('/user/patients'));\n    }\n  }\n  async handleRegistration(e, obj) {\n    e.preventDefault();\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(obj),\n    };\n    const response = await fetch('/api/v1/rest-auth/registration/', options);\n    const data = await response.json().catch(this.handleError);\n    if(data.key) {\n      // https://scotch.io/@PratyushB/local-storage-vs-session-storage-vs-cookie\n      Cookies.set('Authorization', `Token ${data.key}`);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      this.setState({ isLoggedIn: true }, () => this.props.history.push('/user/patient/'));\n      const profile = {phone_number: obj.phone_number}\n      this.saveProfile(profile);\n\n    }\n  }\n\n  async saveProfile(obj) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(obj),\n    };\n\n    const response = await fetch('/api/v1/accounts/profile_create/', options);\n    const data = await response.json().catch(this.handleError);\n    console.log(data);\n  }\n  handleError(err) {\n    console.warn(err);\n  }\n  render() {\n    return (\n      <div className=\"container App\">\n      <Switch>\n\n          <Route path='/registration' render={(props) => <Registration {...props} isLoggedIn={this.state.isLoggedIn} handleRegistration={ this.handleRegistration } />} />\n          <Route path='/login' render={(props) => <Login {...props} isLoggedIn={this.state.isLoggedIn} handleLogin={ this.handleLogin } />} />\n\n          <PrivateRoute path='/user/patients/:id/prescriptions/add/' isLoggedIn={this.state.isLoggedIn} component={PrescriptionForm} />\n          <PrivateRoute path='/user/patients/add' isLoggedIn={this.state.isLoggedIn} component={PatientForm} />\n          <PrivateRoute path='/user/patients/:id' isLoggedIn={this.state.isLoggedIn} component={PatientDetail} />\n          <PrivateRoute path='/user/patients' isLoggedIn={this.state.isLoggedIn} component={PatientList} />\n          <PrivateRoute path='/user/medicationHistory/:id' isLoggedIn={this.state.isLoggedIn} component={MedicationHistory} />\n          <Route path=\"/menu\" component={Menu} />\n          <Route path=\"/map\" component={Map} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/\" component={Cover} exact />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}